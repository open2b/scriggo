// Copyright (c) 2019 Open2b Software Snc. All rights reserved.
// https://www.open2b.com

// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package scrigo

import (
	"reflect"
	"time"
)

var _time = Package{
	"ANSIC":                  Constant(time.ANSIC, nil),
	"After":                  time.After,
	"AfterFunc":              time.AfterFunc,
	"April":                  Constant(time.April, nil),
	"August":                 Constant(time.August, nil),
	"Date":                   time.Date,
	"December":               Constant(time.December, nil),
	"Duration":               reflect.TypeOf(time.Duration(int64(0))),
	"February":               Constant(time.February, nil),
	"FixedZone":              time.FixedZone,
	"Friday":                 Constant(time.Friday, nil),
	"Hour":                   Constant(time.Hour, nil),
	"January":                Constant(time.January, nil),
	"July":                   Constant(time.July, nil),
	"June":                   Constant(time.June, nil),
	"Kitchen":                Constant(time.Kitchen, nil),
	"LoadLocation":           time.LoadLocation,
	"LoadLocationFromTZData": time.LoadLocationFromTZData,
	"Local":                  &time.Local,
	"Location":               reflect.TypeOf(time.Location{}),
	"March":                  Constant(time.March, nil),
	"May":                    Constant(time.May, nil),
	"Microsecond":            Constant(time.Microsecond, nil),
	"Millisecond":            Constant(time.Millisecond, nil),
	"Minute":                 Constant(time.Minute, nil),
	"Monday":                 Constant(time.Monday, nil),
	"Month":                  reflect.TypeOf(time.Month(int(0))),
	"Nanosecond":             Constant(time.Nanosecond, nil),
	"NewTicker":              time.NewTicker,
	"NewTimer":               time.NewTimer,
	"November":               Constant(time.November, nil),
	"Now":                    time.Now,
	"October":                Constant(time.October, nil),
	"Parse":                  time.Parse,
	"ParseDuration":          time.ParseDuration,
	"ParseError":             reflect.TypeOf(time.ParseError{}),
	"ParseInLocation":        time.ParseInLocation,
	"RFC1123":                Constant(time.RFC1123, nil),
	"RFC1123Z":               Constant(time.RFC1123Z, nil),
	"RFC3339":                Constant(time.RFC3339, nil),
	"RFC3339Nano":            Constant(time.RFC3339Nano, nil),
	"RFC822":                 Constant(time.RFC822, nil),
	"RFC822Z":                Constant(time.RFC822Z, nil),
	"RFC850":                 Constant(time.RFC850, nil),
	"RubyDate":               Constant(time.RubyDate, nil),
	"Saturday":               Constant(time.Saturday, nil),
	"Second":                 Constant(time.Second, nil),
	"September":              Constant(time.September, nil),
	"Since":                  time.Since,
	"Sleep":                  time.Sleep,
	"Stamp":                  Constant(time.Stamp, nil),
	"StampMicro":             Constant(time.StampMicro, nil),
	"StampMilli":             Constant(time.StampMilli, nil),
	"StampNano":              Constant(time.StampNano, nil),
	"Sunday":                 Constant(time.Sunday, nil),
	"Thursday":               Constant(time.Thursday, nil),
	"Tick":                   time.Tick,
	"Ticker":                 reflect.TypeOf(time.Ticker{}),
	"Time":                   reflect.TypeOf(time.Time{}),
	"Timer":                  reflect.TypeOf(time.Timer{}),
	"Tuesday":                Constant(time.Tuesday, nil),
	"UTC":                    &time.UTC,
	"Unix":                   time.Unix,
	"UnixDate":               Constant(time.UnixDate, nil),
	"Until":                  time.Until,
	"Wednesday":              Constant(time.Wednesday, nil),
	"Weekday":                reflect.TypeOf(time.Weekday(int(0))),
}
