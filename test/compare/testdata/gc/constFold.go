// run

// Code generated by gen/constFoldGen.go. DO NOT EDIT.

package main

import "log"

func testConstFolduint64add() {
	var x, y, r uint64
	x = 0
	y = 0
	r = x + y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "+", r)
	}
	y = 1
	r = x + y
	if r != 1 {
		log.Fatalf("0 %s 1 = %d, want 1", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != 4294967296 {
		log.Fatalf("0 %s 4294967296 = %d, want 4294967296", "+", r)
	}
	y = 18446744073709551615
	r = x + y
	if r != 18446744073709551615 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 18446744073709551615", "+", r)
	}
	x = 1
	y = 0
	r = x + y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "+", r)
	}
	y = 1
	r = x + y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != 4294967297 {
		log.Fatalf("1 %s 4294967296 = %d, want 4294967297", "+", r)
	}
	y = 18446744073709551615
	r = x + y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", "+", r)
	}
	x = 4294967296
	y = 0
	r = x + y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "+", r)
	}
	y = 1
	r = x + y
	if r != 4294967297 {
		log.Fatalf("4294967296 %s 1 = %d, want 4294967297", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 8589934592", "+", r)
	}
	y = 18446744073709551615
	r = x + y
	if r != 4294967295 {
		log.Fatalf("4294967296 %s 18446744073709551615 = %d, want 4294967295", "+", r)
	}
	x = 18446744073709551615
	y = 0
	r = x + y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 18446744073709551615", "+", r)
	}
	y = 1
	r = x + y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 0", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != 4294967295 {
		log.Fatalf("18446744073709551615 %s 4294967296 = %d, want 4294967295", "+", r)
	}
	y = 18446744073709551615
	r = x + y
	if r != 18446744073709551614 {
		log.Fatalf("18446744073709551615 %s 18446744073709551615 = %d, want 18446744073709551614", "+", r)
	}
}
func testConstFolduint64sub() {
	var x, y, r uint64
	x = 0
	y = 0
	r = x - y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "-", r)
	}
	y = 1
	r = x - y
	if r != 18446744073709551615 {
		log.Fatalf("0 %s 1 = %d, want 18446744073709551615", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != 18446744069414584320 {
		log.Fatalf("0 %s 4294967296 = %d, want 18446744069414584320", "-", r)
	}
	y = 18446744073709551615
	r = x - y
	if r != 1 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 1", "-", r)
	}
	x = 1
	y = 0
	r = x - y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "-", r)
	}
	y = 1
	r = x - y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != 18446744069414584321 {
		log.Fatalf("1 %s 4294967296 = %d, want 18446744069414584321", "-", r)
	}
	y = 18446744073709551615
	r = x - y
	if r != 2 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 2", "-", r)
	}
	x = 4294967296
	y = 0
	r = x - y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "-", r)
	}
	y = 1
	r = x - y
	if r != 4294967295 {
		log.Fatalf("4294967296 %s 1 = %d, want 4294967295", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 0", "-", r)
	}
	y = 18446744073709551615
	r = x - y
	if r != 4294967297 {
		log.Fatalf("4294967296 %s 18446744073709551615 = %d, want 4294967297", "-", r)
	}
	x = 18446744073709551615
	y = 0
	r = x - y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 18446744073709551615", "-", r)
	}
	y = 1
	r = x - y
	if r != 18446744073709551614 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 18446744073709551614", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != 18446744069414584319 {
		log.Fatalf("18446744073709551615 %s 4294967296 = %d, want 18446744069414584319", "-", r)
	}
	y = 18446744073709551615
	r = x - y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 18446744073709551615 = %d, want 0", "-", r)
	}
}
func testConstFolduint64div() {
	var x, y, r uint64
	x = 0
	y = 1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "/", r)
	}
	y = 18446744073709551615
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "/", r)
	}
	x = 1
	y = 1
	r = x / y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", "/", r)
	}
	y = 18446744073709551615
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", "/", r)
	}
	x = 4294967296
	y = 1
	r = x / y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 1 = %d, want 4294967296", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != 1 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 1", "/", r)
	}
	y = 18446744073709551615
	r = x / y
	if r != 0 {
		log.Fatalf("4294967296 %s 18446744073709551615 = %d, want 0", "/", r)
	}
	x = 18446744073709551615
	y = 1
	r = x / y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 18446744073709551615", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != 4294967295 {
		log.Fatalf("18446744073709551615 %s 4294967296 = %d, want 4294967295", "/", r)
	}
	y = 18446744073709551615
	r = x / y
	if r != 1 {
		log.Fatalf("18446744073709551615 %s 18446744073709551615 = %d, want 1", "/", r)
	}
}
func testConstFolduint64mul() {
	var x, y, r uint64
	x = 0
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "*", r)
	}
	y = 18446744073709551615
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "*", r)
	}
	x = 1
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != 4294967296 {
		log.Fatalf("1 %s 4294967296 = %d, want 4294967296", "*", r)
	}
	y = 18446744073709551615
	r = x * y
	if r != 18446744073709551615 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 18446744073709551615", "*", r)
	}
	x = 4294967296
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("4294967296 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 1 = %d, want 4294967296", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 0", "*", r)
	}
	y = 18446744073709551615
	r = x * y
	if r != 18446744069414584320 {
		log.Fatalf("4294967296 %s 18446744073709551615 = %d, want 18446744069414584320", "*", r)
	}
	x = 18446744073709551615
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 18446744073709551615", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != 18446744069414584320 {
		log.Fatalf("18446744073709551615 %s 4294967296 = %d, want 18446744069414584320", "*", r)
	}
	y = 18446744073709551615
	r = x * y
	if r != 1 {
		log.Fatalf("18446744073709551615 %s 18446744073709551615 = %d, want 1", "*", r)
	}
}
func testConstFolduint64mod() {
	var x, y, r uint64
	x = 0
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "%", r)
	}
	y = 18446744073709551615
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "%", r)
	}
	x = 1
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 4294967296 = %d, want 1", "%", r)
	}
	y = 18446744073709551615
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 1", "%", r)
	}
	x = 4294967296
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("4294967296 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 0", "%", r)
	}
	y = 18446744073709551615
	r = x % y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 18446744073709551615 = %d, want 4294967296", "%", r)
	}
	x = 18446744073709551615
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 4294967295 {
		log.Fatalf("18446744073709551615 %s 4294967296 = %d, want 4294967295", "%", r)
	}
	y = 18446744073709551615
	r = x % y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 18446744073709551615 = %d, want 0", "%", r)
	}
}
func testConstFoldint64add() {
	var x, y, r int64
	x = -9223372036854775808
	y = -9223372036854775808
	r = x + y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s -9223372036854775808 = %d, want 0", "+", r)
	}
	y = -9223372036854775807
	r = x + y
	if r != 1 {
		log.Fatalf("-9223372036854775808 %s -9223372036854775807 = %d, want 1", "+", r)
	}
	y = -4294967296
	r = x + y
	if r != 9223372032559808512 {
		log.Fatalf("-9223372036854775808 %s -4294967296 = %d, want 9223372032559808512", "+", r)
	}
	y = -1
	r = x + y
	if r != 9223372036854775807 {
		log.Fatalf("-9223372036854775808 %s -1 = %d, want 9223372036854775807", "+", r)
	}
	y = 0
	r = x + y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want -9223372036854775808", "+", r)
	}
	y = 1
	r = x + y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want -9223372036854775807", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != -9223372032559808512 {
		log.Fatalf("-9223372036854775808 %s 4294967296 = %d, want -9223372032559808512", "+", r)
	}
	y = 9223372036854775806
	r = x + y
	if r != -2 {
		log.Fatalf("-9223372036854775808 %s 9223372036854775806 = %d, want -2", "+", r)
	}
	y = 9223372036854775807
	r = x + y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s 9223372036854775807 = %d, want -1", "+", r)
	}
	x = -9223372036854775807
	y = -9223372036854775808
	r = x + y
	if r != 1 {
		log.Fatalf("-9223372036854775807 %s -9223372036854775808 = %d, want 1", "+", r)
	}
	y = -9223372036854775807
	r = x + y
	if r != 2 {
		log.Fatalf("-9223372036854775807 %s -9223372036854775807 = %d, want 2", "+", r)
	}
	y = -4294967296
	r = x + y
	if r != 9223372032559808513 {
		log.Fatalf("-9223372036854775807 %s -4294967296 = %d, want 9223372032559808513", "+", r)
	}
	y = -1
	r = x + y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775807 %s -1 = %d, want -9223372036854775808", "+", r)
	}
	y = 0
	r = x + y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want -9223372036854775807", "+", r)
	}
	y = 1
	r = x + y
	if r != -9223372036854775806 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want -9223372036854775806", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != -9223372032559808511 {
		log.Fatalf("-9223372036854775807 %s 4294967296 = %d, want -9223372032559808511", "+", r)
	}
	y = 9223372036854775806
	r = x + y
	if r != -1 {
		log.Fatalf("-9223372036854775807 %s 9223372036854775806 = %d, want -1", "+", r)
	}
	y = 9223372036854775807
	r = x + y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s 9223372036854775807 = %d, want 0", "+", r)
	}
	x = -4294967296
	y = -9223372036854775808
	r = x + y
	if r != 9223372032559808512 {
		log.Fatalf("-4294967296 %s -9223372036854775808 = %d, want 9223372032559808512", "+", r)
	}
	y = -9223372036854775807
	r = x + y
	if r != 9223372032559808513 {
		log.Fatalf("-4294967296 %s -9223372036854775807 = %d, want 9223372032559808513", "+", r)
	}
	y = -4294967296
	r = x + y
	if r != -8589934592 {
		log.Fatalf("-4294967296 %s -4294967296 = %d, want -8589934592", "+", r)
	}
	y = -1
	r = x + y
	if r != -4294967297 {
		log.Fatalf("-4294967296 %s -1 = %d, want -4294967297", "+", r)
	}
	y = 0
	r = x + y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 0 = %d, want -4294967296", "+", r)
	}
	y = 1
	r = x + y
	if r != -4294967295 {
		log.Fatalf("-4294967296 %s 1 = %d, want -4294967295", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != 0 {
		log.Fatalf("-4294967296 %s 4294967296 = %d, want 0", "+", r)
	}
	y = 9223372036854775806
	r = x + y
	if r != 9223372032559808510 {
		log.Fatalf("-4294967296 %s 9223372036854775806 = %d, want 9223372032559808510", "+", r)
	}
	y = 9223372036854775807
	r = x + y
	if r != 9223372032559808511 {
		log.Fatalf("-4294967296 %s 9223372036854775807 = %d, want 9223372032559808511", "+", r)
	}
	x = -1
	y = -9223372036854775808
	r = x + y
	if r != 9223372036854775807 {
		log.Fatalf("-1 %s -9223372036854775808 = %d, want 9223372036854775807", "+", r)
	}
	y = -9223372036854775807
	r = x + y
	if r != -9223372036854775808 {
		log.Fatalf("-1 %s -9223372036854775807 = %d, want -9223372036854775808", "+", r)
	}
	y = -4294967296
	r = x + y
	if r != -4294967297 {
		log.Fatalf("-1 %s -4294967296 = %d, want -4294967297", "+", r)
	}
	y = -1
	r = x + y
	if r != -2 {
		log.Fatalf("-1 %s -1 = %d, want -2", "+", r)
	}
	y = 0
	r = x + y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "+", r)
	}
	y = 1
	r = x + y
	if r != 0 {
		log.Fatalf("-1 %s 1 = %d, want 0", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != 4294967295 {
		log.Fatalf("-1 %s 4294967296 = %d, want 4294967295", "+", r)
	}
	y = 9223372036854775806
	r = x + y
	if r != 9223372036854775805 {
		log.Fatalf("-1 %s 9223372036854775806 = %d, want 9223372036854775805", "+", r)
	}
	y = 9223372036854775807
	r = x + y
	if r != 9223372036854775806 {
		log.Fatalf("-1 %s 9223372036854775807 = %d, want 9223372036854775806", "+", r)
	}
	x = 0
	y = -9223372036854775808
	r = x + y
	if r != -9223372036854775808 {
		log.Fatalf("0 %s -9223372036854775808 = %d, want -9223372036854775808", "+", r)
	}
	y = -9223372036854775807
	r = x + y
	if r != -9223372036854775807 {
		log.Fatalf("0 %s -9223372036854775807 = %d, want -9223372036854775807", "+", r)
	}
	y = -4294967296
	r = x + y
	if r != -4294967296 {
		log.Fatalf("0 %s -4294967296 = %d, want -4294967296", "+", r)
	}
	y = -1
	r = x + y
	if r != -1 {
		log.Fatalf("0 %s -1 = %d, want -1", "+", r)
	}
	y = 0
	r = x + y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "+", r)
	}
	y = 1
	r = x + y
	if r != 1 {
		log.Fatalf("0 %s 1 = %d, want 1", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != 4294967296 {
		log.Fatalf("0 %s 4294967296 = %d, want 4294967296", "+", r)
	}
	y = 9223372036854775806
	r = x + y
	if r != 9223372036854775806 {
		log.Fatalf("0 %s 9223372036854775806 = %d, want 9223372036854775806", "+", r)
	}
	y = 9223372036854775807
	r = x + y
	if r != 9223372036854775807 {
		log.Fatalf("0 %s 9223372036854775807 = %d, want 9223372036854775807", "+", r)
	}
	x = 1
	y = -9223372036854775808
	r = x + y
	if r != -9223372036854775807 {
		log.Fatalf("1 %s -9223372036854775808 = %d, want -9223372036854775807", "+", r)
	}
	y = -9223372036854775807
	r = x + y
	if r != -9223372036854775806 {
		log.Fatalf("1 %s -9223372036854775807 = %d, want -9223372036854775806", "+", r)
	}
	y = -4294967296
	r = x + y
	if r != -4294967295 {
		log.Fatalf("1 %s -4294967296 = %d, want -4294967295", "+", r)
	}
	y = -1
	r = x + y
	if r != 0 {
		log.Fatalf("1 %s -1 = %d, want 0", "+", r)
	}
	y = 0
	r = x + y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "+", r)
	}
	y = 1
	r = x + y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != 4294967297 {
		log.Fatalf("1 %s 4294967296 = %d, want 4294967297", "+", r)
	}
	y = 9223372036854775806
	r = x + y
	if r != 9223372036854775807 {
		log.Fatalf("1 %s 9223372036854775806 = %d, want 9223372036854775807", "+", r)
	}
	y = 9223372036854775807
	r = x + y
	if r != -9223372036854775808 {
		log.Fatalf("1 %s 9223372036854775807 = %d, want -9223372036854775808", "+", r)
	}
	x = 4294967296
	y = -9223372036854775808
	r = x + y
	if r != -9223372032559808512 {
		log.Fatalf("4294967296 %s -9223372036854775808 = %d, want -9223372032559808512", "+", r)
	}
	y = -9223372036854775807
	r = x + y
	if r != -9223372032559808511 {
		log.Fatalf("4294967296 %s -9223372036854775807 = %d, want -9223372032559808511", "+", r)
	}
	y = -4294967296
	r = x + y
	if r != 0 {
		log.Fatalf("4294967296 %s -4294967296 = %d, want 0", "+", r)
	}
	y = -1
	r = x + y
	if r != 4294967295 {
		log.Fatalf("4294967296 %s -1 = %d, want 4294967295", "+", r)
	}
	y = 0
	r = x + y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "+", r)
	}
	y = 1
	r = x + y
	if r != 4294967297 {
		log.Fatalf("4294967296 %s 1 = %d, want 4294967297", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 8589934592", "+", r)
	}
	y = 9223372036854775806
	r = x + y
	if r != -9223372032559808514 {
		log.Fatalf("4294967296 %s 9223372036854775806 = %d, want -9223372032559808514", "+", r)
	}
	y = 9223372036854775807
	r = x + y
	if r != -9223372032559808513 {
		log.Fatalf("4294967296 %s 9223372036854775807 = %d, want -9223372032559808513", "+", r)
	}
	x = 9223372036854775806
	y = -9223372036854775808
	r = x + y
	if r != -2 {
		log.Fatalf("9223372036854775806 %s -9223372036854775808 = %d, want -2", "+", r)
	}
	y = -9223372036854775807
	r = x + y
	if r != -1 {
		log.Fatalf("9223372036854775806 %s -9223372036854775807 = %d, want -1", "+", r)
	}
	y = -4294967296
	r = x + y
	if r != 9223372032559808510 {
		log.Fatalf("9223372036854775806 %s -4294967296 = %d, want 9223372032559808510", "+", r)
	}
	y = -1
	r = x + y
	if r != 9223372036854775805 {
		log.Fatalf("9223372036854775806 %s -1 = %d, want 9223372036854775805", "+", r)
	}
	y = 0
	r = x + y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 9223372036854775806", "+", r)
	}
	y = 1
	r = x + y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want 9223372036854775807", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != -9223372032559808514 {
		log.Fatalf("9223372036854775806 %s 4294967296 = %d, want -9223372032559808514", "+", r)
	}
	y = 9223372036854775806
	r = x + y
	if r != -4 {
		log.Fatalf("9223372036854775806 %s 9223372036854775806 = %d, want -4", "+", r)
	}
	y = 9223372036854775807
	r = x + y
	if r != -3 {
		log.Fatalf("9223372036854775806 %s 9223372036854775807 = %d, want -3", "+", r)
	}
	x = 9223372036854775807
	y = -9223372036854775808
	r = x + y
	if r != -1 {
		log.Fatalf("9223372036854775807 %s -9223372036854775808 = %d, want -1", "+", r)
	}
	y = -9223372036854775807
	r = x + y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s -9223372036854775807 = %d, want 0", "+", r)
	}
	y = -4294967296
	r = x + y
	if r != 9223372032559808511 {
		log.Fatalf("9223372036854775807 %s -4294967296 = %d, want 9223372032559808511", "+", r)
	}
	y = -1
	r = x + y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775807 %s -1 = %d, want 9223372036854775806", "+", r)
	}
	y = 0
	r = x + y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 9223372036854775807", "+", r)
	}
	y = 1
	r = x + y
	if r != -9223372036854775808 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want -9223372036854775808", "+", r)
	}
	y = 4294967296
	r = x + y
	if r != -9223372032559808513 {
		log.Fatalf("9223372036854775807 %s 4294967296 = %d, want -9223372032559808513", "+", r)
	}
	y = 9223372036854775806
	r = x + y
	if r != -3 {
		log.Fatalf("9223372036854775807 %s 9223372036854775806 = %d, want -3", "+", r)
	}
	y = 9223372036854775807
	r = x + y
	if r != -2 {
		log.Fatalf("9223372036854775807 %s 9223372036854775807 = %d, want -2", "+", r)
	}
}
func testConstFoldint64sub() {
	var x, y, r int64
	x = -9223372036854775808
	y = -9223372036854775808
	r = x - y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s -9223372036854775808 = %d, want 0", "-", r)
	}
	y = -9223372036854775807
	r = x - y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s -9223372036854775807 = %d, want -1", "-", r)
	}
	y = -4294967296
	r = x - y
	if r != -9223372032559808512 {
		log.Fatalf("-9223372036854775808 %s -4294967296 = %d, want -9223372032559808512", "-", r)
	}
	y = -1
	r = x - y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775808 %s -1 = %d, want -9223372036854775807", "-", r)
	}
	y = 0
	r = x - y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want -9223372036854775808", "-", r)
	}
	y = 1
	r = x - y
	if r != 9223372036854775807 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want 9223372036854775807", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != 9223372032559808512 {
		log.Fatalf("-9223372036854775808 %s 4294967296 = %d, want 9223372032559808512", "-", r)
	}
	y = 9223372036854775806
	r = x - y
	if r != 2 {
		log.Fatalf("-9223372036854775808 %s 9223372036854775806 = %d, want 2", "-", r)
	}
	y = 9223372036854775807
	r = x - y
	if r != 1 {
		log.Fatalf("-9223372036854775808 %s 9223372036854775807 = %d, want 1", "-", r)
	}
	x = -9223372036854775807
	y = -9223372036854775808
	r = x - y
	if r != 1 {
		log.Fatalf("-9223372036854775807 %s -9223372036854775808 = %d, want 1", "-", r)
	}
	y = -9223372036854775807
	r = x - y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s -9223372036854775807 = %d, want 0", "-", r)
	}
	y = -4294967296
	r = x - y
	if r != -9223372032559808511 {
		log.Fatalf("-9223372036854775807 %s -4294967296 = %d, want -9223372032559808511", "-", r)
	}
	y = -1
	r = x - y
	if r != -9223372036854775806 {
		log.Fatalf("-9223372036854775807 %s -1 = %d, want -9223372036854775806", "-", r)
	}
	y = 0
	r = x - y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want -9223372036854775807", "-", r)
	}
	y = 1
	r = x - y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want -9223372036854775808", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != 9223372032559808513 {
		log.Fatalf("-9223372036854775807 %s 4294967296 = %d, want 9223372032559808513", "-", r)
	}
	y = 9223372036854775806
	r = x - y
	if r != 3 {
		log.Fatalf("-9223372036854775807 %s 9223372036854775806 = %d, want 3", "-", r)
	}
	y = 9223372036854775807
	r = x - y
	if r != 2 {
		log.Fatalf("-9223372036854775807 %s 9223372036854775807 = %d, want 2", "-", r)
	}
	x = -4294967296
	y = -9223372036854775808
	r = x - y
	if r != 9223372032559808512 {
		log.Fatalf("-4294967296 %s -9223372036854775808 = %d, want 9223372032559808512", "-", r)
	}
	y = -9223372036854775807
	r = x - y
	if r != 9223372032559808511 {
		log.Fatalf("-4294967296 %s -9223372036854775807 = %d, want 9223372032559808511", "-", r)
	}
	y = -4294967296
	r = x - y
	if r != 0 {
		log.Fatalf("-4294967296 %s -4294967296 = %d, want 0", "-", r)
	}
	y = -1
	r = x - y
	if r != -4294967295 {
		log.Fatalf("-4294967296 %s -1 = %d, want -4294967295", "-", r)
	}
	y = 0
	r = x - y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 0 = %d, want -4294967296", "-", r)
	}
	y = 1
	r = x - y
	if r != -4294967297 {
		log.Fatalf("-4294967296 %s 1 = %d, want -4294967297", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != -8589934592 {
		log.Fatalf("-4294967296 %s 4294967296 = %d, want -8589934592", "-", r)
	}
	y = 9223372036854775806
	r = x - y
	if r != 9223372032559808514 {
		log.Fatalf("-4294967296 %s 9223372036854775806 = %d, want 9223372032559808514", "-", r)
	}
	y = 9223372036854775807
	r = x - y
	if r != 9223372032559808513 {
		log.Fatalf("-4294967296 %s 9223372036854775807 = %d, want 9223372032559808513", "-", r)
	}
	x = -1
	y = -9223372036854775808
	r = x - y
	if r != 9223372036854775807 {
		log.Fatalf("-1 %s -9223372036854775808 = %d, want 9223372036854775807", "-", r)
	}
	y = -9223372036854775807
	r = x - y
	if r != 9223372036854775806 {
		log.Fatalf("-1 %s -9223372036854775807 = %d, want 9223372036854775806", "-", r)
	}
	y = -4294967296
	r = x - y
	if r != 4294967295 {
		log.Fatalf("-1 %s -4294967296 = %d, want 4294967295", "-", r)
	}
	y = -1
	r = x - y
	if r != 0 {
		log.Fatalf("-1 %s -1 = %d, want 0", "-", r)
	}
	y = 0
	r = x - y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "-", r)
	}
	y = 1
	r = x - y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != -4294967297 {
		log.Fatalf("-1 %s 4294967296 = %d, want -4294967297", "-", r)
	}
	y = 9223372036854775806
	r = x - y
	if r != -9223372036854775807 {
		log.Fatalf("-1 %s 9223372036854775806 = %d, want -9223372036854775807", "-", r)
	}
	y = 9223372036854775807
	r = x - y
	if r != -9223372036854775808 {
		log.Fatalf("-1 %s 9223372036854775807 = %d, want -9223372036854775808", "-", r)
	}
	x = 0
	y = -9223372036854775808
	r = x - y
	if r != -9223372036854775808 {
		log.Fatalf("0 %s -9223372036854775808 = %d, want -9223372036854775808", "-", r)
	}
	y = -9223372036854775807
	r = x - y
	if r != 9223372036854775807 {
		log.Fatalf("0 %s -9223372036854775807 = %d, want 9223372036854775807", "-", r)
	}
	y = -4294967296
	r = x - y
	if r != 4294967296 {
		log.Fatalf("0 %s -4294967296 = %d, want 4294967296", "-", r)
	}
	y = -1
	r = x - y
	if r != 1 {
		log.Fatalf("0 %s -1 = %d, want 1", "-", r)
	}
	y = 0
	r = x - y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "-", r)
	}
	y = 1
	r = x - y
	if r != -1 {
		log.Fatalf("0 %s 1 = %d, want -1", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != -4294967296 {
		log.Fatalf("0 %s 4294967296 = %d, want -4294967296", "-", r)
	}
	y = 9223372036854775806
	r = x - y
	if r != -9223372036854775806 {
		log.Fatalf("0 %s 9223372036854775806 = %d, want -9223372036854775806", "-", r)
	}
	y = 9223372036854775807
	r = x - y
	if r != -9223372036854775807 {
		log.Fatalf("0 %s 9223372036854775807 = %d, want -9223372036854775807", "-", r)
	}
	x = 1
	y = -9223372036854775808
	r = x - y
	if r != -9223372036854775807 {
		log.Fatalf("1 %s -9223372036854775808 = %d, want -9223372036854775807", "-", r)
	}
	y = -9223372036854775807
	r = x - y
	if r != -9223372036854775808 {
		log.Fatalf("1 %s -9223372036854775807 = %d, want -9223372036854775808", "-", r)
	}
	y = -4294967296
	r = x - y
	if r != 4294967297 {
		log.Fatalf("1 %s -4294967296 = %d, want 4294967297", "-", r)
	}
	y = -1
	r = x - y
	if r != 2 {
		log.Fatalf("1 %s -1 = %d, want 2", "-", r)
	}
	y = 0
	r = x - y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "-", r)
	}
	y = 1
	r = x - y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != -4294967295 {
		log.Fatalf("1 %s 4294967296 = %d, want -4294967295", "-", r)
	}
	y = 9223372036854775806
	r = x - y
	if r != -9223372036854775805 {
		log.Fatalf("1 %s 9223372036854775806 = %d, want -9223372036854775805", "-", r)
	}
	y = 9223372036854775807
	r = x - y
	if r != -9223372036854775806 {
		log.Fatalf("1 %s 9223372036854775807 = %d, want -9223372036854775806", "-", r)
	}
	x = 4294967296
	y = -9223372036854775808
	r = x - y
	if r != -9223372032559808512 {
		log.Fatalf("4294967296 %s -9223372036854775808 = %d, want -9223372032559808512", "-", r)
	}
	y = -9223372036854775807
	r = x - y
	if r != -9223372032559808513 {
		log.Fatalf("4294967296 %s -9223372036854775807 = %d, want -9223372032559808513", "-", r)
	}
	y = -4294967296
	r = x - y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s -4294967296 = %d, want 8589934592", "-", r)
	}
	y = -1
	r = x - y
	if r != 4294967297 {
		log.Fatalf("4294967296 %s -1 = %d, want 4294967297", "-", r)
	}
	y = 0
	r = x - y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "-", r)
	}
	y = 1
	r = x - y
	if r != 4294967295 {
		log.Fatalf("4294967296 %s 1 = %d, want 4294967295", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 0", "-", r)
	}
	y = 9223372036854775806
	r = x - y
	if r != -9223372032559808510 {
		log.Fatalf("4294967296 %s 9223372036854775806 = %d, want -9223372032559808510", "-", r)
	}
	y = 9223372036854775807
	r = x - y
	if r != -9223372032559808511 {
		log.Fatalf("4294967296 %s 9223372036854775807 = %d, want -9223372032559808511", "-", r)
	}
	x = 9223372036854775806
	y = -9223372036854775808
	r = x - y
	if r != -2 {
		log.Fatalf("9223372036854775806 %s -9223372036854775808 = %d, want -2", "-", r)
	}
	y = -9223372036854775807
	r = x - y
	if r != -3 {
		log.Fatalf("9223372036854775806 %s -9223372036854775807 = %d, want -3", "-", r)
	}
	y = -4294967296
	r = x - y
	if r != -9223372032559808514 {
		log.Fatalf("9223372036854775806 %s -4294967296 = %d, want -9223372032559808514", "-", r)
	}
	y = -1
	r = x - y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775806 %s -1 = %d, want 9223372036854775807", "-", r)
	}
	y = 0
	r = x - y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 9223372036854775806", "-", r)
	}
	y = 1
	r = x - y
	if r != 9223372036854775805 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want 9223372036854775805", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != 9223372032559808510 {
		log.Fatalf("9223372036854775806 %s 4294967296 = %d, want 9223372032559808510", "-", r)
	}
	y = 9223372036854775806
	r = x - y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 9223372036854775806 = %d, want 0", "-", r)
	}
	y = 9223372036854775807
	r = x - y
	if r != -1 {
		log.Fatalf("9223372036854775806 %s 9223372036854775807 = %d, want -1", "-", r)
	}
	x = 9223372036854775807
	y = -9223372036854775808
	r = x - y
	if r != -1 {
		log.Fatalf("9223372036854775807 %s -9223372036854775808 = %d, want -1", "-", r)
	}
	y = -9223372036854775807
	r = x - y
	if r != -2 {
		log.Fatalf("9223372036854775807 %s -9223372036854775807 = %d, want -2", "-", r)
	}
	y = -4294967296
	r = x - y
	if r != -9223372032559808513 {
		log.Fatalf("9223372036854775807 %s -4294967296 = %d, want -9223372032559808513", "-", r)
	}
	y = -1
	r = x - y
	if r != -9223372036854775808 {
		log.Fatalf("9223372036854775807 %s -1 = %d, want -9223372036854775808", "-", r)
	}
	y = 0
	r = x - y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 9223372036854775807", "-", r)
	}
	y = 1
	r = x - y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want 9223372036854775806", "-", r)
	}
	y = 4294967296
	r = x - y
	if r != 9223372032559808511 {
		log.Fatalf("9223372036854775807 %s 4294967296 = %d, want 9223372032559808511", "-", r)
	}
	y = 9223372036854775806
	r = x - y
	if r != 1 {
		log.Fatalf("9223372036854775807 %s 9223372036854775806 = %d, want 1", "-", r)
	}
	y = 9223372036854775807
	r = x - y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 9223372036854775807 = %d, want 0", "-", r)
	}
}
func testConstFoldint64div() {
	var x, y, r int64
	x = -9223372036854775808
	y = -9223372036854775808
	r = x / y
	if r != 1 {
		log.Fatalf("-9223372036854775808 %s -9223372036854775808 = %d, want 1", "/", r)
	}
	y = -9223372036854775807
	r = x / y
	if r != 1 {
		log.Fatalf("-9223372036854775808 %s -9223372036854775807 = %d, want 1", "/", r)
	}
	y = -4294967296
	r = x / y
	if r != 2147483648 {
		log.Fatalf("-9223372036854775808 %s -4294967296 = %d, want 2147483648", "/", r)
	}
	y = -1
	r = x / y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s -1 = %d, want -9223372036854775808", "/", r)
	}
	y = 1
	r = x / y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want -9223372036854775808", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != -2147483648 {
		log.Fatalf("-9223372036854775808 %s 4294967296 = %d, want -2147483648", "/", r)
	}
	y = 9223372036854775806
	r = x / y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s 9223372036854775806 = %d, want -1", "/", r)
	}
	y = 9223372036854775807
	r = x / y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s 9223372036854775807 = %d, want -1", "/", r)
	}
	x = -9223372036854775807
	y = -9223372036854775808
	r = x / y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s -9223372036854775808 = %d, want 0", "/", r)
	}
	y = -9223372036854775807
	r = x / y
	if r != 1 {
		log.Fatalf("-9223372036854775807 %s -9223372036854775807 = %d, want 1", "/", r)
	}
	y = -4294967296
	r = x / y
	if r != 2147483647 {
		log.Fatalf("-9223372036854775807 %s -4294967296 = %d, want 2147483647", "/", r)
	}
	y = -1
	r = x / y
	if r != 9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s -1 = %d, want 9223372036854775807", "/", r)
	}
	y = 1
	r = x / y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want -9223372036854775807", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != -2147483647 {
		log.Fatalf("-9223372036854775807 %s 4294967296 = %d, want -2147483647", "/", r)
	}
	y = 9223372036854775806
	r = x / y
	if r != -1 {
		log.Fatalf("-9223372036854775807 %s 9223372036854775806 = %d, want -1", "/", r)
	}
	y = 9223372036854775807
	r = x / y
	if r != -1 {
		log.Fatalf("-9223372036854775807 %s 9223372036854775807 = %d, want -1", "/", r)
	}
	x = -4294967296
	y = -9223372036854775808
	r = x / y
	if r != 0 {
		log.Fatalf("-4294967296 %s -9223372036854775808 = %d, want 0", "/", r)
	}
	y = -9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("-4294967296 %s -9223372036854775807 = %d, want 0", "/", r)
	}
	y = -4294967296
	r = x / y
	if r != 1 {
		log.Fatalf("-4294967296 %s -4294967296 = %d, want 1", "/", r)
	}
	y = -1
	r = x / y
	if r != 4294967296 {
		log.Fatalf("-4294967296 %s -1 = %d, want 4294967296", "/", r)
	}
	y = 1
	r = x / y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 1 = %d, want -4294967296", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != -1 {
		log.Fatalf("-4294967296 %s 4294967296 = %d, want -1", "/", r)
	}
	y = 9223372036854775806
	r = x / y
	if r != 0 {
		log.Fatalf("-4294967296 %s 9223372036854775806 = %d, want 0", "/", r)
	}
	y = 9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("-4294967296 %s 9223372036854775807 = %d, want 0", "/", r)
	}
	x = -1
	y = -9223372036854775808
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s -9223372036854775808 = %d, want 0", "/", r)
	}
	y = -9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s -9223372036854775807 = %d, want 0", "/", r)
	}
	y = -4294967296
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s -4294967296 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != 1 {
		log.Fatalf("-1 %s -1 = %d, want 1", "/", r)
	}
	y = 1
	r = x / y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s 4294967296 = %d, want 0", "/", r)
	}
	y = 9223372036854775806
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s 9223372036854775806 = %d, want 0", "/", r)
	}
	y = 9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s 9223372036854775807 = %d, want 0", "/", r)
	}
	x = 0
	y = -9223372036854775808
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -9223372036854775808 = %d, want 0", "/", r)
	}
	y = -9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -9223372036854775807 = %d, want 0", "/", r)
	}
	y = -4294967296
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -4294967296 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "/", r)
	}
	y = 1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "/", r)
	}
	y = 9223372036854775806
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 9223372036854775806 = %d, want 0", "/", r)
	}
	y = 9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 9223372036854775807 = %d, want 0", "/", r)
	}
	x = 1
	y = -9223372036854775808
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s -9223372036854775808 = %d, want 0", "/", r)
	}
	y = -9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s -9223372036854775807 = %d, want 0", "/", r)
	}
	y = -4294967296
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s -4294967296 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != -1 {
		log.Fatalf("1 %s -1 = %d, want -1", "/", r)
	}
	y = 1
	r = x / y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", "/", r)
	}
	y = 9223372036854775806
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 9223372036854775806 = %d, want 0", "/", r)
	}
	y = 9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 9223372036854775807 = %d, want 0", "/", r)
	}
	x = 4294967296
	y = -9223372036854775808
	r = x / y
	if r != 0 {
		log.Fatalf("4294967296 %s -9223372036854775808 = %d, want 0", "/", r)
	}
	y = -9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("4294967296 %s -9223372036854775807 = %d, want 0", "/", r)
	}
	y = -4294967296
	r = x / y
	if r != -1 {
		log.Fatalf("4294967296 %s -4294967296 = %d, want -1", "/", r)
	}
	y = -1
	r = x / y
	if r != -4294967296 {
		log.Fatalf("4294967296 %s -1 = %d, want -4294967296", "/", r)
	}
	y = 1
	r = x / y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 1 = %d, want 4294967296", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != 1 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 1", "/", r)
	}
	y = 9223372036854775806
	r = x / y
	if r != 0 {
		log.Fatalf("4294967296 %s 9223372036854775806 = %d, want 0", "/", r)
	}
	y = 9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("4294967296 %s 9223372036854775807 = %d, want 0", "/", r)
	}
	x = 9223372036854775806
	y = -9223372036854775808
	r = x / y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s -9223372036854775808 = %d, want 0", "/", r)
	}
	y = -9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s -9223372036854775807 = %d, want 0", "/", r)
	}
	y = -4294967296
	r = x / y
	if r != -2147483647 {
		log.Fatalf("9223372036854775806 %s -4294967296 = %d, want -2147483647", "/", r)
	}
	y = -1
	r = x / y
	if r != -9223372036854775806 {
		log.Fatalf("9223372036854775806 %s -1 = %d, want -9223372036854775806", "/", r)
	}
	y = 1
	r = x / y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want 9223372036854775806", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != 2147483647 {
		log.Fatalf("9223372036854775806 %s 4294967296 = %d, want 2147483647", "/", r)
	}
	y = 9223372036854775806
	r = x / y
	if r != 1 {
		log.Fatalf("9223372036854775806 %s 9223372036854775806 = %d, want 1", "/", r)
	}
	y = 9223372036854775807
	r = x / y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 9223372036854775807 = %d, want 0", "/", r)
	}
	x = 9223372036854775807
	y = -9223372036854775808
	r = x / y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s -9223372036854775808 = %d, want 0", "/", r)
	}
	y = -9223372036854775807
	r = x / y
	if r != -1 {
		log.Fatalf("9223372036854775807 %s -9223372036854775807 = %d, want -1", "/", r)
	}
	y = -4294967296
	r = x / y
	if r != -2147483647 {
		log.Fatalf("9223372036854775807 %s -4294967296 = %d, want -2147483647", "/", r)
	}
	y = -1
	r = x / y
	if r != -9223372036854775807 {
		log.Fatalf("9223372036854775807 %s -1 = %d, want -9223372036854775807", "/", r)
	}
	y = 1
	r = x / y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want 9223372036854775807", "/", r)
	}
	y = 4294967296
	r = x / y
	if r != 2147483647 {
		log.Fatalf("9223372036854775807 %s 4294967296 = %d, want 2147483647", "/", r)
	}
	y = 9223372036854775806
	r = x / y
	if r != 1 {
		log.Fatalf("9223372036854775807 %s 9223372036854775806 = %d, want 1", "/", r)
	}
	y = 9223372036854775807
	r = x / y
	if r != 1 {
		log.Fatalf("9223372036854775807 %s 9223372036854775807 = %d, want 1", "/", r)
	}
}
func testConstFoldint64mul() {
	var x, y, r int64
	x = -9223372036854775808
	y = -9223372036854775808
	r = x * y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s -9223372036854775808 = %d, want 0", "*", r)
	}
	y = -9223372036854775807
	r = x * y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s -9223372036854775807 = %d, want -9223372036854775808", "*", r)
	}
	y = -4294967296
	r = x * y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s -4294967296 = %d, want 0", "*", r)
	}
	y = -1
	r = x * y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s -1 = %d, want -9223372036854775808", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want -9223372036854775808", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 4294967296 = %d, want 0", "*", r)
	}
	y = 9223372036854775806
	r = x * y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 9223372036854775806 = %d, want 0", "*", r)
	}
	y = 9223372036854775807
	r = x * y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 9223372036854775807 = %d, want -9223372036854775808", "*", r)
	}
	x = -9223372036854775807
	y = -9223372036854775808
	r = x * y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775807 %s -9223372036854775808 = %d, want -9223372036854775808", "*", r)
	}
	y = -9223372036854775807
	r = x * y
	if r != 1 {
		log.Fatalf("-9223372036854775807 %s -9223372036854775807 = %d, want 1", "*", r)
	}
	y = -4294967296
	r = x * y
	if r != -4294967296 {
		log.Fatalf("-9223372036854775807 %s -4294967296 = %d, want -4294967296", "*", r)
	}
	y = -1
	r = x * y
	if r != 9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s -1 = %d, want 9223372036854775807", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want -9223372036854775807", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != 4294967296 {
		log.Fatalf("-9223372036854775807 %s 4294967296 = %d, want 4294967296", "*", r)
	}
	y = 9223372036854775806
	r = x * y
	if r != 9223372036854775806 {
		log.Fatalf("-9223372036854775807 %s 9223372036854775806 = %d, want 9223372036854775806", "*", r)
	}
	y = 9223372036854775807
	r = x * y
	if r != -1 {
		log.Fatalf("-9223372036854775807 %s 9223372036854775807 = %d, want -1", "*", r)
	}
	x = -4294967296
	y = -9223372036854775808
	r = x * y
	if r != 0 {
		log.Fatalf("-4294967296 %s -9223372036854775808 = %d, want 0", "*", r)
	}
	y = -9223372036854775807
	r = x * y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s -9223372036854775807 = %d, want -4294967296", "*", r)
	}
	y = -4294967296
	r = x * y
	if r != 0 {
		log.Fatalf("-4294967296 %s -4294967296 = %d, want 0", "*", r)
	}
	y = -1
	r = x * y
	if r != 4294967296 {
		log.Fatalf("-4294967296 %s -1 = %d, want 4294967296", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-4294967296 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 1 = %d, want -4294967296", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != 0 {
		log.Fatalf("-4294967296 %s 4294967296 = %d, want 0", "*", r)
	}
	y = 9223372036854775806
	r = x * y
	if r != 8589934592 {
		log.Fatalf("-4294967296 %s 9223372036854775806 = %d, want 8589934592", "*", r)
	}
	y = 9223372036854775807
	r = x * y
	if r != 4294967296 {
		log.Fatalf("-4294967296 %s 9223372036854775807 = %d, want 4294967296", "*", r)
	}
	x = -1
	y = -9223372036854775808
	r = x * y
	if r != -9223372036854775808 {
		log.Fatalf("-1 %s -9223372036854775808 = %d, want -9223372036854775808", "*", r)
	}
	y = -9223372036854775807
	r = x * y
	if r != 9223372036854775807 {
		log.Fatalf("-1 %s -9223372036854775807 = %d, want 9223372036854775807", "*", r)
	}
	y = -4294967296
	r = x * y
	if r != 4294967296 {
		log.Fatalf("-1 %s -4294967296 = %d, want 4294967296", "*", r)
	}
	y = -1
	r = x * y
	if r != 1 {
		log.Fatalf("-1 %s -1 = %d, want 1", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != -4294967296 {
		log.Fatalf("-1 %s 4294967296 = %d, want -4294967296", "*", r)
	}
	y = 9223372036854775806
	r = x * y
	if r != -9223372036854775806 {
		log.Fatalf("-1 %s 9223372036854775806 = %d, want -9223372036854775806", "*", r)
	}
	y = 9223372036854775807
	r = x * y
	if r != -9223372036854775807 {
		log.Fatalf("-1 %s 9223372036854775807 = %d, want -9223372036854775807", "*", r)
	}
	x = 0
	y = -9223372036854775808
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -9223372036854775808 = %d, want 0", "*", r)
	}
	y = -9223372036854775807
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -9223372036854775807 = %d, want 0", "*", r)
	}
	y = -4294967296
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -4294967296 = %d, want 0", "*", r)
	}
	y = -1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "*", r)
	}
	y = 9223372036854775806
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 9223372036854775806 = %d, want 0", "*", r)
	}
	y = 9223372036854775807
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 9223372036854775807 = %d, want 0", "*", r)
	}
	x = 1
	y = -9223372036854775808
	r = x * y
	if r != -9223372036854775808 {
		log.Fatalf("1 %s -9223372036854775808 = %d, want -9223372036854775808", "*", r)
	}
	y = -9223372036854775807
	r = x * y
	if r != -9223372036854775807 {
		log.Fatalf("1 %s -9223372036854775807 = %d, want -9223372036854775807", "*", r)
	}
	y = -4294967296
	r = x * y
	if r != -4294967296 {
		log.Fatalf("1 %s -4294967296 = %d, want -4294967296", "*", r)
	}
	y = -1
	r = x * y
	if r != -1 {
		log.Fatalf("1 %s -1 = %d, want -1", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != 4294967296 {
		log.Fatalf("1 %s 4294967296 = %d, want 4294967296", "*", r)
	}
	y = 9223372036854775806
	r = x * y
	if r != 9223372036854775806 {
		log.Fatalf("1 %s 9223372036854775806 = %d, want 9223372036854775806", "*", r)
	}
	y = 9223372036854775807
	r = x * y
	if r != 9223372036854775807 {
		log.Fatalf("1 %s 9223372036854775807 = %d, want 9223372036854775807", "*", r)
	}
	x = 4294967296
	y = -9223372036854775808
	r = x * y
	if r != 0 {
		log.Fatalf("4294967296 %s -9223372036854775808 = %d, want 0", "*", r)
	}
	y = -9223372036854775807
	r = x * y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s -9223372036854775807 = %d, want 4294967296", "*", r)
	}
	y = -4294967296
	r = x * y
	if r != 0 {
		log.Fatalf("4294967296 %s -4294967296 = %d, want 0", "*", r)
	}
	y = -1
	r = x * y
	if r != -4294967296 {
		log.Fatalf("4294967296 %s -1 = %d, want -4294967296", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("4294967296 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 1 = %d, want 4294967296", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 0", "*", r)
	}
	y = 9223372036854775806
	r = x * y
	if r != -8589934592 {
		log.Fatalf("4294967296 %s 9223372036854775806 = %d, want -8589934592", "*", r)
	}
	y = 9223372036854775807
	r = x * y
	if r != -4294967296 {
		log.Fatalf("4294967296 %s 9223372036854775807 = %d, want -4294967296", "*", r)
	}
	x = 9223372036854775806
	y = -9223372036854775808
	r = x * y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s -9223372036854775808 = %d, want 0", "*", r)
	}
	y = -9223372036854775807
	r = x * y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s -9223372036854775807 = %d, want 9223372036854775806", "*", r)
	}
	y = -4294967296
	r = x * y
	if r != 8589934592 {
		log.Fatalf("9223372036854775806 %s -4294967296 = %d, want 8589934592", "*", r)
	}
	y = -1
	r = x * y
	if r != -9223372036854775806 {
		log.Fatalf("9223372036854775806 %s -1 = %d, want -9223372036854775806", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want 9223372036854775806", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != -8589934592 {
		log.Fatalf("9223372036854775806 %s 4294967296 = %d, want -8589934592", "*", r)
	}
	y = 9223372036854775806
	r = x * y
	if r != 4 {
		log.Fatalf("9223372036854775806 %s 9223372036854775806 = %d, want 4", "*", r)
	}
	y = 9223372036854775807
	r = x * y
	if r != -9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 9223372036854775807 = %d, want -9223372036854775806", "*", r)
	}
	x = 9223372036854775807
	y = -9223372036854775808
	r = x * y
	if r != -9223372036854775808 {
		log.Fatalf("9223372036854775807 %s -9223372036854775808 = %d, want -9223372036854775808", "*", r)
	}
	y = -9223372036854775807
	r = x * y
	if r != -1 {
		log.Fatalf("9223372036854775807 %s -9223372036854775807 = %d, want -1", "*", r)
	}
	y = -4294967296
	r = x * y
	if r != 4294967296 {
		log.Fatalf("9223372036854775807 %s -4294967296 = %d, want 4294967296", "*", r)
	}
	y = -1
	r = x * y
	if r != -9223372036854775807 {
		log.Fatalf("9223372036854775807 %s -1 = %d, want -9223372036854775807", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want 9223372036854775807", "*", r)
	}
	y = 4294967296
	r = x * y
	if r != -4294967296 {
		log.Fatalf("9223372036854775807 %s 4294967296 = %d, want -4294967296", "*", r)
	}
	y = 9223372036854775806
	r = x * y
	if r != -9223372036854775806 {
		log.Fatalf("9223372036854775807 %s 9223372036854775806 = %d, want -9223372036854775806", "*", r)
	}
	y = 9223372036854775807
	r = x * y
	if r != 1 {
		log.Fatalf("9223372036854775807 %s 9223372036854775807 = %d, want 1", "*", r)
	}
}
func testConstFoldint64mod() {
	var x, y, r int64
	x = -9223372036854775808
	y = -9223372036854775808
	r = x % y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s -9223372036854775808 = %d, want 0", "%", r)
	}
	y = -9223372036854775807
	r = x % y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s -9223372036854775807 = %d, want -1", "%", r)
	}
	y = -4294967296
	r = x % y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s -4294967296 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 4294967296 = %d, want 0", "%", r)
	}
	y = 9223372036854775806
	r = x % y
	if r != -2 {
		log.Fatalf("-9223372036854775808 %s 9223372036854775806 = %d, want -2", "%", r)
	}
	y = 9223372036854775807
	r = x % y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s 9223372036854775807 = %d, want -1", "%", r)
	}
	x = -9223372036854775807
	y = -9223372036854775808
	r = x % y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s -9223372036854775808 = %d, want -9223372036854775807", "%", r)
	}
	y = -9223372036854775807
	r = x % y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s -9223372036854775807 = %d, want 0", "%", r)
	}
	y = -4294967296
	r = x % y
	if r != -4294967295 {
		log.Fatalf("-9223372036854775807 %s -4294967296 = %d, want -4294967295", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != -4294967295 {
		log.Fatalf("-9223372036854775807 %s 4294967296 = %d, want -4294967295", "%", r)
	}
	y = 9223372036854775806
	r = x % y
	if r != -1 {
		log.Fatalf("-9223372036854775807 %s 9223372036854775806 = %d, want -1", "%", r)
	}
	y = 9223372036854775807
	r = x % y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s 9223372036854775807 = %d, want 0", "%", r)
	}
	x = -4294967296
	y = -9223372036854775808
	r = x % y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s -9223372036854775808 = %d, want -4294967296", "%", r)
	}
	y = -9223372036854775807
	r = x % y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s -9223372036854775807 = %d, want -4294967296", "%", r)
	}
	y = -4294967296
	r = x % y
	if r != 0 {
		log.Fatalf("-4294967296 %s -4294967296 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-4294967296 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-4294967296 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 0 {
		log.Fatalf("-4294967296 %s 4294967296 = %d, want 0", "%", r)
	}
	y = 9223372036854775806
	r = x % y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 9223372036854775806 = %d, want -4294967296", "%", r)
	}
	y = 9223372036854775807
	r = x % y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 9223372036854775807 = %d, want -4294967296", "%", r)
	}
	x = -1
	y = -9223372036854775808
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s -9223372036854775808 = %d, want -1", "%", r)
	}
	y = -9223372036854775807
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s -9223372036854775807 = %d, want -1", "%", r)
	}
	y = -4294967296
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s -4294967296 = %d, want -1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-1 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-1 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s 4294967296 = %d, want -1", "%", r)
	}
	y = 9223372036854775806
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s 9223372036854775806 = %d, want -1", "%", r)
	}
	y = 9223372036854775807
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s 9223372036854775807 = %d, want -1", "%", r)
	}
	x = 0
	y = -9223372036854775808
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -9223372036854775808 = %d, want 0", "%", r)
	}
	y = -9223372036854775807
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -9223372036854775807 = %d, want 0", "%", r)
	}
	y = -4294967296
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -4294967296 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "%", r)
	}
	y = 9223372036854775806
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 9223372036854775806 = %d, want 0", "%", r)
	}
	y = 9223372036854775807
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 9223372036854775807 = %d, want 0", "%", r)
	}
	x = 1
	y = -9223372036854775808
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s -9223372036854775808 = %d, want 1", "%", r)
	}
	y = -9223372036854775807
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s -9223372036854775807 = %d, want 1", "%", r)
	}
	y = -4294967296
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s -4294967296 = %d, want 1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 4294967296 = %d, want 1", "%", r)
	}
	y = 9223372036854775806
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 9223372036854775806 = %d, want 1", "%", r)
	}
	y = 9223372036854775807
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 9223372036854775807 = %d, want 1", "%", r)
	}
	x = 4294967296
	y = -9223372036854775808
	r = x % y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s -9223372036854775808 = %d, want 4294967296", "%", r)
	}
	y = -9223372036854775807
	r = x % y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s -9223372036854775807 = %d, want 4294967296", "%", r)
	}
	y = -4294967296
	r = x % y
	if r != 0 {
		log.Fatalf("4294967296 %s -4294967296 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("4294967296 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("4294967296 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 0", "%", r)
	}
	y = 9223372036854775806
	r = x % y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 9223372036854775806 = %d, want 4294967296", "%", r)
	}
	y = 9223372036854775807
	r = x % y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 9223372036854775807 = %d, want 4294967296", "%", r)
	}
	x = 9223372036854775806
	y = -9223372036854775808
	r = x % y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s -9223372036854775808 = %d, want 9223372036854775806", "%", r)
	}
	y = -9223372036854775807
	r = x % y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s -9223372036854775807 = %d, want 9223372036854775806", "%", r)
	}
	y = -4294967296
	r = x % y
	if r != 4294967294 {
		log.Fatalf("9223372036854775806 %s -4294967296 = %d, want 4294967294", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 4294967294 {
		log.Fatalf("9223372036854775806 %s 4294967296 = %d, want 4294967294", "%", r)
	}
	y = 9223372036854775806
	r = x % y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 9223372036854775806 = %d, want 0", "%", r)
	}
	y = 9223372036854775807
	r = x % y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 9223372036854775807 = %d, want 9223372036854775806", "%", r)
	}
	x = 9223372036854775807
	y = -9223372036854775808
	r = x % y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s -9223372036854775808 = %d, want 9223372036854775807", "%", r)
	}
	y = -9223372036854775807
	r = x % y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s -9223372036854775807 = %d, want 0", "%", r)
	}
	y = -4294967296
	r = x % y
	if r != 4294967295 {
		log.Fatalf("9223372036854775807 %s -4294967296 = %d, want 4294967295", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967296
	r = x % y
	if r != 4294967295 {
		log.Fatalf("9223372036854775807 %s 4294967296 = %d, want 4294967295", "%", r)
	}
	y = 9223372036854775806
	r = x % y
	if r != 1 {
		log.Fatalf("9223372036854775807 %s 9223372036854775806 = %d, want 1", "%", r)
	}
	y = 9223372036854775807
	r = x % y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 9223372036854775807 = %d, want 0", "%", r)
	}
}
func testConstFolduint32add() {
	var x, y, r uint32
	x = 0
	y = 0
	r = x + y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "+", r)
	}
	y = 1
	r = x + y
	if r != 1 {
		log.Fatalf("0 %s 1 = %d, want 1", "+", r)
	}
	y = 4294967295
	r = x + y
	if r != 4294967295 {
		log.Fatalf("0 %s 4294967295 = %d, want 4294967295", "+", r)
	}
	x = 1
	y = 0
	r = x + y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "+", r)
	}
	y = 1
	r = x + y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "+", r)
	}
	y = 4294967295
	r = x + y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", "+", r)
	}
	x = 4294967295
	y = 0
	r = x + y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 0 = %d, want 4294967295", "+", r)
	}
	y = 1
	r = x + y
	if r != 0 {
		log.Fatalf("4294967295 %s 1 = %d, want 0", "+", r)
	}
	y = 4294967295
	r = x + y
	if r != 4294967294 {
		log.Fatalf("4294967295 %s 4294967295 = %d, want 4294967294", "+", r)
	}
}
func testConstFolduint32sub() {
	var x, y, r uint32
	x = 0
	y = 0
	r = x - y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "-", r)
	}
	y = 1
	r = x - y
	if r != 4294967295 {
		log.Fatalf("0 %s 1 = %d, want 4294967295", "-", r)
	}
	y = 4294967295
	r = x - y
	if r != 1 {
		log.Fatalf("0 %s 4294967295 = %d, want 1", "-", r)
	}
	x = 1
	y = 0
	r = x - y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "-", r)
	}
	y = 1
	r = x - y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "-", r)
	}
	y = 4294967295
	r = x - y
	if r != 2 {
		log.Fatalf("1 %s 4294967295 = %d, want 2", "-", r)
	}
	x = 4294967295
	y = 0
	r = x - y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 0 = %d, want 4294967295", "-", r)
	}
	y = 1
	r = x - y
	if r != 4294967294 {
		log.Fatalf("4294967295 %s 1 = %d, want 4294967294", "-", r)
	}
	y = 4294967295
	r = x - y
	if r != 0 {
		log.Fatalf("4294967295 %s 4294967295 = %d, want 0", "-", r)
	}
}
func testConstFolduint32div() {
	var x, y, r uint32
	x = 0
	y = 1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "/", r)
	}
	y = 4294967295
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "/", r)
	}
	x = 1
	y = 1
	r = x / y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "/", r)
	}
	y = 4294967295
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", "/", r)
	}
	x = 4294967295
	y = 1
	r = x / y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 1 = %d, want 4294967295", "/", r)
	}
	y = 4294967295
	r = x / y
	if r != 1 {
		log.Fatalf("4294967295 %s 4294967295 = %d, want 1", "/", r)
	}
}
func testConstFolduint32mul() {
	var x, y, r uint32
	x = 0
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "*", r)
	}
	y = 4294967295
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "*", r)
	}
	x = 1
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "*", r)
	}
	y = 4294967295
	r = x * y
	if r != 4294967295 {
		log.Fatalf("1 %s 4294967295 = %d, want 4294967295", "*", r)
	}
	x = 4294967295
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("4294967295 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 1 = %d, want 4294967295", "*", r)
	}
	y = 4294967295
	r = x * y
	if r != 1 {
		log.Fatalf("4294967295 %s 4294967295 = %d, want 1", "*", r)
	}
}
func testConstFolduint32mod() {
	var x, y, r uint32
	x = 0
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967295
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "%", r)
	}
	x = 1
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967295
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 4294967295 = %d, want 1", "%", r)
	}
	x = 4294967295
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("4294967295 %s 1 = %d, want 0", "%", r)
	}
	y = 4294967295
	r = x % y
	if r != 0 {
		log.Fatalf("4294967295 %s 4294967295 = %d, want 0", "%", r)
	}
}
func testConstFoldint32add() {
	var x, y, r int32
	x = -2147483648
	y = -2147483648
	r = x + y
	if r != 0 {
		log.Fatalf("-2147483648 %s -2147483648 = %d, want 0", "+", r)
	}
	y = -2147483647
	r = x + y
	if r != 1 {
		log.Fatalf("-2147483648 %s -2147483647 = %d, want 1", "+", r)
	}
	y = -1
	r = x + y
	if r != 2147483647 {
		log.Fatalf("-2147483648 %s -1 = %d, want 2147483647", "+", r)
	}
	y = 0
	r = x + y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 0 = %d, want -2147483648", "+", r)
	}
	y = 1
	r = x + y
	if r != -2147483647 {
		log.Fatalf("-2147483648 %s 1 = %d, want -2147483647", "+", r)
	}
	y = 2147483647
	r = x + y
	if r != -1 {
		log.Fatalf("-2147483648 %s 2147483647 = %d, want -1", "+", r)
	}
	x = -2147483647
	y = -2147483648
	r = x + y
	if r != 1 {
		log.Fatalf("-2147483647 %s -2147483648 = %d, want 1", "+", r)
	}
	y = -2147483647
	r = x + y
	if r != 2 {
		log.Fatalf("-2147483647 %s -2147483647 = %d, want 2", "+", r)
	}
	y = -1
	r = x + y
	if r != -2147483648 {
		log.Fatalf("-2147483647 %s -1 = %d, want -2147483648", "+", r)
	}
	y = 0
	r = x + y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 0 = %d, want -2147483647", "+", r)
	}
	y = 1
	r = x + y
	if r != -2147483646 {
		log.Fatalf("-2147483647 %s 1 = %d, want -2147483646", "+", r)
	}
	y = 2147483647
	r = x + y
	if r != 0 {
		log.Fatalf("-2147483647 %s 2147483647 = %d, want 0", "+", r)
	}
	x = -1
	y = -2147483648
	r = x + y
	if r != 2147483647 {
		log.Fatalf("-1 %s -2147483648 = %d, want 2147483647", "+", r)
	}
	y = -2147483647
	r = x + y
	if r != -2147483648 {
		log.Fatalf("-1 %s -2147483647 = %d, want -2147483648", "+", r)
	}
	y = -1
	r = x + y
	if r != -2 {
		log.Fatalf("-1 %s -1 = %d, want -2", "+", r)
	}
	y = 0
	r = x + y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "+", r)
	}
	y = 1
	r = x + y
	if r != 0 {
		log.Fatalf("-1 %s 1 = %d, want 0", "+", r)
	}
	y = 2147483647
	r = x + y
	if r != 2147483646 {
		log.Fatalf("-1 %s 2147483647 = %d, want 2147483646", "+", r)
	}
	x = 0
	y = -2147483648
	r = x + y
	if r != -2147483648 {
		log.Fatalf("0 %s -2147483648 = %d, want -2147483648", "+", r)
	}
	y = -2147483647
	r = x + y
	if r != -2147483647 {
		log.Fatalf("0 %s -2147483647 = %d, want -2147483647", "+", r)
	}
	y = -1
	r = x + y
	if r != -1 {
		log.Fatalf("0 %s -1 = %d, want -1", "+", r)
	}
	y = 0
	r = x + y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "+", r)
	}
	y = 1
	r = x + y
	if r != 1 {
		log.Fatalf("0 %s 1 = %d, want 1", "+", r)
	}
	y = 2147483647
	r = x + y
	if r != 2147483647 {
		log.Fatalf("0 %s 2147483647 = %d, want 2147483647", "+", r)
	}
	x = 1
	y = -2147483648
	r = x + y
	if r != -2147483647 {
		log.Fatalf("1 %s -2147483648 = %d, want -2147483647", "+", r)
	}
	y = -2147483647
	r = x + y
	if r != -2147483646 {
		log.Fatalf("1 %s -2147483647 = %d, want -2147483646", "+", r)
	}
	y = -1
	r = x + y
	if r != 0 {
		log.Fatalf("1 %s -1 = %d, want 0", "+", r)
	}
	y = 0
	r = x + y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "+", r)
	}
	y = 1
	r = x + y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "+", r)
	}
	y = 2147483647
	r = x + y
	if r != -2147483648 {
		log.Fatalf("1 %s 2147483647 = %d, want -2147483648", "+", r)
	}
	x = 2147483647
	y = -2147483648
	r = x + y
	if r != -1 {
		log.Fatalf("2147483647 %s -2147483648 = %d, want -1", "+", r)
	}
	y = -2147483647
	r = x + y
	if r != 0 {
		log.Fatalf("2147483647 %s -2147483647 = %d, want 0", "+", r)
	}
	y = -1
	r = x + y
	if r != 2147483646 {
		log.Fatalf("2147483647 %s -1 = %d, want 2147483646", "+", r)
	}
	y = 0
	r = x + y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 0 = %d, want 2147483647", "+", r)
	}
	y = 1
	r = x + y
	if r != -2147483648 {
		log.Fatalf("2147483647 %s 1 = %d, want -2147483648", "+", r)
	}
	y = 2147483647
	r = x + y
	if r != -2 {
		log.Fatalf("2147483647 %s 2147483647 = %d, want -2", "+", r)
	}
}
func testConstFoldint32sub() {
	var x, y, r int32
	x = -2147483648
	y = -2147483648
	r = x - y
	if r != 0 {
		log.Fatalf("-2147483648 %s -2147483648 = %d, want 0", "-", r)
	}
	y = -2147483647
	r = x - y
	if r != -1 {
		log.Fatalf("-2147483648 %s -2147483647 = %d, want -1", "-", r)
	}
	y = -1
	r = x - y
	if r != -2147483647 {
		log.Fatalf("-2147483648 %s -1 = %d, want -2147483647", "-", r)
	}
	y = 0
	r = x - y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 0 = %d, want -2147483648", "-", r)
	}
	y = 1
	r = x - y
	if r != 2147483647 {
		log.Fatalf("-2147483648 %s 1 = %d, want 2147483647", "-", r)
	}
	y = 2147483647
	r = x - y
	if r != 1 {
		log.Fatalf("-2147483648 %s 2147483647 = %d, want 1", "-", r)
	}
	x = -2147483647
	y = -2147483648
	r = x - y
	if r != 1 {
		log.Fatalf("-2147483647 %s -2147483648 = %d, want 1", "-", r)
	}
	y = -2147483647
	r = x - y
	if r != 0 {
		log.Fatalf("-2147483647 %s -2147483647 = %d, want 0", "-", r)
	}
	y = -1
	r = x - y
	if r != -2147483646 {
		log.Fatalf("-2147483647 %s -1 = %d, want -2147483646", "-", r)
	}
	y = 0
	r = x - y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 0 = %d, want -2147483647", "-", r)
	}
	y = 1
	r = x - y
	if r != -2147483648 {
		log.Fatalf("-2147483647 %s 1 = %d, want -2147483648", "-", r)
	}
	y = 2147483647
	r = x - y
	if r != 2 {
		log.Fatalf("-2147483647 %s 2147483647 = %d, want 2", "-", r)
	}
	x = -1
	y = -2147483648
	r = x - y
	if r != 2147483647 {
		log.Fatalf("-1 %s -2147483648 = %d, want 2147483647", "-", r)
	}
	y = -2147483647
	r = x - y
	if r != 2147483646 {
		log.Fatalf("-1 %s -2147483647 = %d, want 2147483646", "-", r)
	}
	y = -1
	r = x - y
	if r != 0 {
		log.Fatalf("-1 %s -1 = %d, want 0", "-", r)
	}
	y = 0
	r = x - y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "-", r)
	}
	y = 1
	r = x - y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "-", r)
	}
	y = 2147483647
	r = x - y
	if r != -2147483648 {
		log.Fatalf("-1 %s 2147483647 = %d, want -2147483648", "-", r)
	}
	x = 0
	y = -2147483648
	r = x - y
	if r != -2147483648 {
		log.Fatalf("0 %s -2147483648 = %d, want -2147483648", "-", r)
	}
	y = -2147483647
	r = x - y
	if r != 2147483647 {
		log.Fatalf("0 %s -2147483647 = %d, want 2147483647", "-", r)
	}
	y = -1
	r = x - y
	if r != 1 {
		log.Fatalf("0 %s -1 = %d, want 1", "-", r)
	}
	y = 0
	r = x - y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "-", r)
	}
	y = 1
	r = x - y
	if r != -1 {
		log.Fatalf("0 %s 1 = %d, want -1", "-", r)
	}
	y = 2147483647
	r = x - y
	if r != -2147483647 {
		log.Fatalf("0 %s 2147483647 = %d, want -2147483647", "-", r)
	}
	x = 1
	y = -2147483648
	r = x - y
	if r != -2147483647 {
		log.Fatalf("1 %s -2147483648 = %d, want -2147483647", "-", r)
	}
	y = -2147483647
	r = x - y
	if r != -2147483648 {
		log.Fatalf("1 %s -2147483647 = %d, want -2147483648", "-", r)
	}
	y = -1
	r = x - y
	if r != 2 {
		log.Fatalf("1 %s -1 = %d, want 2", "-", r)
	}
	y = 0
	r = x - y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "-", r)
	}
	y = 1
	r = x - y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "-", r)
	}
	y = 2147483647
	r = x - y
	if r != -2147483646 {
		log.Fatalf("1 %s 2147483647 = %d, want -2147483646", "-", r)
	}
	x = 2147483647
	y = -2147483648
	r = x - y
	if r != -1 {
		log.Fatalf("2147483647 %s -2147483648 = %d, want -1", "-", r)
	}
	y = -2147483647
	r = x - y
	if r != -2 {
		log.Fatalf("2147483647 %s -2147483647 = %d, want -2", "-", r)
	}
	y = -1
	r = x - y
	if r != -2147483648 {
		log.Fatalf("2147483647 %s -1 = %d, want -2147483648", "-", r)
	}
	y = 0
	r = x - y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 0 = %d, want 2147483647", "-", r)
	}
	y = 1
	r = x - y
	if r != 2147483646 {
		log.Fatalf("2147483647 %s 1 = %d, want 2147483646", "-", r)
	}
	y = 2147483647
	r = x - y
	if r != 0 {
		log.Fatalf("2147483647 %s 2147483647 = %d, want 0", "-", r)
	}
}
func testConstFoldint32div() {
	var x, y, r int32
	x = -2147483648
	y = -2147483648
	r = x / y
	if r != 1 {
		log.Fatalf("-2147483648 %s -2147483648 = %d, want 1", "/", r)
	}
	y = -2147483647
	r = x / y
	if r != 1 {
		log.Fatalf("-2147483648 %s -2147483647 = %d, want 1", "/", r)
	}
	y = -1
	r = x / y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s -1 = %d, want -2147483648", "/", r)
	}
	y = 1
	r = x / y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 1 = %d, want -2147483648", "/", r)
	}
	y = 2147483647
	r = x / y
	if r != -1 {
		log.Fatalf("-2147483648 %s 2147483647 = %d, want -1", "/", r)
	}
	x = -2147483647
	y = -2147483648
	r = x / y
	if r != 0 {
		log.Fatalf("-2147483647 %s -2147483648 = %d, want 0", "/", r)
	}
	y = -2147483647
	r = x / y
	if r != 1 {
		log.Fatalf("-2147483647 %s -2147483647 = %d, want 1", "/", r)
	}
	y = -1
	r = x / y
	if r != 2147483647 {
		log.Fatalf("-2147483647 %s -1 = %d, want 2147483647", "/", r)
	}
	y = 1
	r = x / y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 1 = %d, want -2147483647", "/", r)
	}
	y = 2147483647
	r = x / y
	if r != -1 {
		log.Fatalf("-2147483647 %s 2147483647 = %d, want -1", "/", r)
	}
	x = -1
	y = -2147483648
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s -2147483648 = %d, want 0", "/", r)
	}
	y = -2147483647
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s -2147483647 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != 1 {
		log.Fatalf("-1 %s -1 = %d, want 1", "/", r)
	}
	y = 1
	r = x / y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", "/", r)
	}
	y = 2147483647
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s 2147483647 = %d, want 0", "/", r)
	}
	x = 0
	y = -2147483648
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -2147483648 = %d, want 0", "/", r)
	}
	y = -2147483647
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -2147483647 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "/", r)
	}
	y = 1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "/", r)
	}
	y = 2147483647
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 2147483647 = %d, want 0", "/", r)
	}
	x = 1
	y = -2147483648
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s -2147483648 = %d, want 0", "/", r)
	}
	y = -2147483647
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s -2147483647 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != -1 {
		log.Fatalf("1 %s -1 = %d, want -1", "/", r)
	}
	y = 1
	r = x / y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "/", r)
	}
	y = 2147483647
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 2147483647 = %d, want 0", "/", r)
	}
	x = 2147483647
	y = -2147483648
	r = x / y
	if r != 0 {
		log.Fatalf("2147483647 %s -2147483648 = %d, want 0", "/", r)
	}
	y = -2147483647
	r = x / y
	if r != -1 {
		log.Fatalf("2147483647 %s -2147483647 = %d, want -1", "/", r)
	}
	y = -1
	r = x / y
	if r != -2147483647 {
		log.Fatalf("2147483647 %s -1 = %d, want -2147483647", "/", r)
	}
	y = 1
	r = x / y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 1 = %d, want 2147483647", "/", r)
	}
	y = 2147483647
	r = x / y
	if r != 1 {
		log.Fatalf("2147483647 %s 2147483647 = %d, want 1", "/", r)
	}
}
func testConstFoldint32mul() {
	var x, y, r int32
	x = -2147483648
	y = -2147483648
	r = x * y
	if r != 0 {
		log.Fatalf("-2147483648 %s -2147483648 = %d, want 0", "*", r)
	}
	y = -2147483647
	r = x * y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s -2147483647 = %d, want -2147483648", "*", r)
	}
	y = -1
	r = x * y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s -1 = %d, want -2147483648", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-2147483648 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 1 = %d, want -2147483648", "*", r)
	}
	y = 2147483647
	r = x * y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 2147483647 = %d, want -2147483648", "*", r)
	}
	x = -2147483647
	y = -2147483648
	r = x * y
	if r != -2147483648 {
		log.Fatalf("-2147483647 %s -2147483648 = %d, want -2147483648", "*", r)
	}
	y = -2147483647
	r = x * y
	if r != 1 {
		log.Fatalf("-2147483647 %s -2147483647 = %d, want 1", "*", r)
	}
	y = -1
	r = x * y
	if r != 2147483647 {
		log.Fatalf("-2147483647 %s -1 = %d, want 2147483647", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-2147483647 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 1 = %d, want -2147483647", "*", r)
	}
	y = 2147483647
	r = x * y
	if r != -1 {
		log.Fatalf("-2147483647 %s 2147483647 = %d, want -1", "*", r)
	}
	x = -1
	y = -2147483648
	r = x * y
	if r != -2147483648 {
		log.Fatalf("-1 %s -2147483648 = %d, want -2147483648", "*", r)
	}
	y = -2147483647
	r = x * y
	if r != 2147483647 {
		log.Fatalf("-1 %s -2147483647 = %d, want 2147483647", "*", r)
	}
	y = -1
	r = x * y
	if r != 1 {
		log.Fatalf("-1 %s -1 = %d, want 1", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", "*", r)
	}
	y = 2147483647
	r = x * y
	if r != -2147483647 {
		log.Fatalf("-1 %s 2147483647 = %d, want -2147483647", "*", r)
	}
	x = 0
	y = -2147483648
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -2147483648 = %d, want 0", "*", r)
	}
	y = -2147483647
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -2147483647 = %d, want 0", "*", r)
	}
	y = -1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "*", r)
	}
	y = 2147483647
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 2147483647 = %d, want 0", "*", r)
	}
	x = 1
	y = -2147483648
	r = x * y
	if r != -2147483648 {
		log.Fatalf("1 %s -2147483648 = %d, want -2147483648", "*", r)
	}
	y = -2147483647
	r = x * y
	if r != -2147483647 {
		log.Fatalf("1 %s -2147483647 = %d, want -2147483647", "*", r)
	}
	y = -1
	r = x * y
	if r != -1 {
		log.Fatalf("1 %s -1 = %d, want -1", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "*", r)
	}
	y = 2147483647
	r = x * y
	if r != 2147483647 {
		log.Fatalf("1 %s 2147483647 = %d, want 2147483647", "*", r)
	}
	x = 2147483647
	y = -2147483648
	r = x * y
	if r != -2147483648 {
		log.Fatalf("2147483647 %s -2147483648 = %d, want -2147483648", "*", r)
	}
	y = -2147483647
	r = x * y
	if r != -1 {
		log.Fatalf("2147483647 %s -2147483647 = %d, want -1", "*", r)
	}
	y = -1
	r = x * y
	if r != -2147483647 {
		log.Fatalf("2147483647 %s -1 = %d, want -2147483647", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("2147483647 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 1 = %d, want 2147483647", "*", r)
	}
	y = 2147483647
	r = x * y
	if r != 1 {
		log.Fatalf("2147483647 %s 2147483647 = %d, want 1", "*", r)
	}
}
func testConstFoldint32mod() {
	var x, y, r int32
	x = -2147483648
	y = -2147483648
	r = x % y
	if r != 0 {
		log.Fatalf("-2147483648 %s -2147483648 = %d, want 0", "%", r)
	}
	y = -2147483647
	r = x % y
	if r != -1 {
		log.Fatalf("-2147483648 %s -2147483647 = %d, want -1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-2147483648 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-2147483648 %s 1 = %d, want 0", "%", r)
	}
	y = 2147483647
	r = x % y
	if r != -1 {
		log.Fatalf("-2147483648 %s 2147483647 = %d, want -1", "%", r)
	}
	x = -2147483647
	y = -2147483648
	r = x % y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s -2147483648 = %d, want -2147483647", "%", r)
	}
	y = -2147483647
	r = x % y
	if r != 0 {
		log.Fatalf("-2147483647 %s -2147483647 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-2147483647 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-2147483647 %s 1 = %d, want 0", "%", r)
	}
	y = 2147483647
	r = x % y
	if r != 0 {
		log.Fatalf("-2147483647 %s 2147483647 = %d, want 0", "%", r)
	}
	x = -1
	y = -2147483648
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s -2147483648 = %d, want -1", "%", r)
	}
	y = -2147483647
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s -2147483647 = %d, want -1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-1 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-1 %s 1 = %d, want 0", "%", r)
	}
	y = 2147483647
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s 2147483647 = %d, want -1", "%", r)
	}
	x = 0
	y = -2147483648
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -2147483648 = %d, want 0", "%", r)
	}
	y = -2147483647
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -2147483647 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "%", r)
	}
	y = 2147483647
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 2147483647 = %d, want 0", "%", r)
	}
	x = 1
	y = -2147483648
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s -2147483648 = %d, want 1", "%", r)
	}
	y = -2147483647
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s -2147483647 = %d, want 1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "%", r)
	}
	y = 2147483647
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 2147483647 = %d, want 1", "%", r)
	}
	x = 2147483647
	y = -2147483648
	r = x % y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s -2147483648 = %d, want 2147483647", "%", r)
	}
	y = -2147483647
	r = x % y
	if r != 0 {
		log.Fatalf("2147483647 %s -2147483647 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("2147483647 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("2147483647 %s 1 = %d, want 0", "%", r)
	}
	y = 2147483647
	r = x % y
	if r != 0 {
		log.Fatalf("2147483647 %s 2147483647 = %d, want 0", "%", r)
	}
}
func testConstFolduint16add() {
	var x, y, r uint16
	x = 0
	y = 0
	r = x + y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "+", r)
	}
	y = 1
	r = x + y
	if r != 1 {
		log.Fatalf("0 %s 1 = %d, want 1", "+", r)
	}
	y = 65535
	r = x + y
	if r != 65535 {
		log.Fatalf("0 %s 65535 = %d, want 65535", "+", r)
	}
	x = 1
	y = 0
	r = x + y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "+", r)
	}
	y = 1
	r = x + y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "+", r)
	}
	y = 65535
	r = x + y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", "+", r)
	}
	x = 65535
	y = 0
	r = x + y
	if r != 65535 {
		log.Fatalf("65535 %s 0 = %d, want 65535", "+", r)
	}
	y = 1
	r = x + y
	if r != 0 {
		log.Fatalf("65535 %s 1 = %d, want 0", "+", r)
	}
	y = 65535
	r = x + y
	if r != 65534 {
		log.Fatalf("65535 %s 65535 = %d, want 65534", "+", r)
	}
}
func testConstFolduint16sub() {
	var x, y, r uint16
	x = 0
	y = 0
	r = x - y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "-", r)
	}
	y = 1
	r = x - y
	if r != 65535 {
		log.Fatalf("0 %s 1 = %d, want 65535", "-", r)
	}
	y = 65535
	r = x - y
	if r != 1 {
		log.Fatalf("0 %s 65535 = %d, want 1", "-", r)
	}
	x = 1
	y = 0
	r = x - y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "-", r)
	}
	y = 1
	r = x - y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "-", r)
	}
	y = 65535
	r = x - y
	if r != 2 {
		log.Fatalf("1 %s 65535 = %d, want 2", "-", r)
	}
	x = 65535
	y = 0
	r = x - y
	if r != 65535 {
		log.Fatalf("65535 %s 0 = %d, want 65535", "-", r)
	}
	y = 1
	r = x - y
	if r != 65534 {
		log.Fatalf("65535 %s 1 = %d, want 65534", "-", r)
	}
	y = 65535
	r = x - y
	if r != 0 {
		log.Fatalf("65535 %s 65535 = %d, want 0", "-", r)
	}
}
func testConstFolduint16div() {
	var x, y, r uint16
	x = 0
	y = 1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "/", r)
	}
	y = 65535
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "/", r)
	}
	x = 1
	y = 1
	r = x / y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "/", r)
	}
	y = 65535
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", "/", r)
	}
	x = 65535
	y = 1
	r = x / y
	if r != 65535 {
		log.Fatalf("65535 %s 1 = %d, want 65535", "/", r)
	}
	y = 65535
	r = x / y
	if r != 1 {
		log.Fatalf("65535 %s 65535 = %d, want 1", "/", r)
	}
}
func testConstFolduint16mul() {
	var x, y, r uint16
	x = 0
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "*", r)
	}
	y = 65535
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "*", r)
	}
	x = 1
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "*", r)
	}
	y = 65535
	r = x * y
	if r != 65535 {
		log.Fatalf("1 %s 65535 = %d, want 65535", "*", r)
	}
	x = 65535
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("65535 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 65535 {
		log.Fatalf("65535 %s 1 = %d, want 65535", "*", r)
	}
	y = 65535
	r = x * y
	if r != 1 {
		log.Fatalf("65535 %s 65535 = %d, want 1", "*", r)
	}
}
func testConstFolduint16mod() {
	var x, y, r uint16
	x = 0
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "%", r)
	}
	y = 65535
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "%", r)
	}
	x = 1
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "%", r)
	}
	y = 65535
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 65535 = %d, want 1", "%", r)
	}
	x = 65535
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("65535 %s 1 = %d, want 0", "%", r)
	}
	y = 65535
	r = x % y
	if r != 0 {
		log.Fatalf("65535 %s 65535 = %d, want 0", "%", r)
	}
}
func testConstFoldint16add() {
	var x, y, r int16
	x = -32768
	y = -32768
	r = x + y
	if r != 0 {
		log.Fatalf("-32768 %s -32768 = %d, want 0", "+", r)
	}
	y = -32767
	r = x + y
	if r != 1 {
		log.Fatalf("-32768 %s -32767 = %d, want 1", "+", r)
	}
	y = -1
	r = x + y
	if r != 32767 {
		log.Fatalf("-32768 %s -1 = %d, want 32767", "+", r)
	}
	y = 0
	r = x + y
	if r != -32768 {
		log.Fatalf("-32768 %s 0 = %d, want -32768", "+", r)
	}
	y = 1
	r = x + y
	if r != -32767 {
		log.Fatalf("-32768 %s 1 = %d, want -32767", "+", r)
	}
	y = 32766
	r = x + y
	if r != -2 {
		log.Fatalf("-32768 %s 32766 = %d, want -2", "+", r)
	}
	y = 32767
	r = x + y
	if r != -1 {
		log.Fatalf("-32768 %s 32767 = %d, want -1", "+", r)
	}
	x = -32767
	y = -32768
	r = x + y
	if r != 1 {
		log.Fatalf("-32767 %s -32768 = %d, want 1", "+", r)
	}
	y = -32767
	r = x + y
	if r != 2 {
		log.Fatalf("-32767 %s -32767 = %d, want 2", "+", r)
	}
	y = -1
	r = x + y
	if r != -32768 {
		log.Fatalf("-32767 %s -1 = %d, want -32768", "+", r)
	}
	y = 0
	r = x + y
	if r != -32767 {
		log.Fatalf("-32767 %s 0 = %d, want -32767", "+", r)
	}
	y = 1
	r = x + y
	if r != -32766 {
		log.Fatalf("-32767 %s 1 = %d, want -32766", "+", r)
	}
	y = 32766
	r = x + y
	if r != -1 {
		log.Fatalf("-32767 %s 32766 = %d, want -1", "+", r)
	}
	y = 32767
	r = x + y
	if r != 0 {
		log.Fatalf("-32767 %s 32767 = %d, want 0", "+", r)
	}
	x = -1
	y = -32768
	r = x + y
	if r != 32767 {
		log.Fatalf("-1 %s -32768 = %d, want 32767", "+", r)
	}
	y = -32767
	r = x + y
	if r != -32768 {
		log.Fatalf("-1 %s -32767 = %d, want -32768", "+", r)
	}
	y = -1
	r = x + y
	if r != -2 {
		log.Fatalf("-1 %s -1 = %d, want -2", "+", r)
	}
	y = 0
	r = x + y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "+", r)
	}
	y = 1
	r = x + y
	if r != 0 {
		log.Fatalf("-1 %s 1 = %d, want 0", "+", r)
	}
	y = 32766
	r = x + y
	if r != 32765 {
		log.Fatalf("-1 %s 32766 = %d, want 32765", "+", r)
	}
	y = 32767
	r = x + y
	if r != 32766 {
		log.Fatalf("-1 %s 32767 = %d, want 32766", "+", r)
	}
	x = 0
	y = -32768
	r = x + y
	if r != -32768 {
		log.Fatalf("0 %s -32768 = %d, want -32768", "+", r)
	}
	y = -32767
	r = x + y
	if r != -32767 {
		log.Fatalf("0 %s -32767 = %d, want -32767", "+", r)
	}
	y = -1
	r = x + y
	if r != -1 {
		log.Fatalf("0 %s -1 = %d, want -1", "+", r)
	}
	y = 0
	r = x + y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "+", r)
	}
	y = 1
	r = x + y
	if r != 1 {
		log.Fatalf("0 %s 1 = %d, want 1", "+", r)
	}
	y = 32766
	r = x + y
	if r != 32766 {
		log.Fatalf("0 %s 32766 = %d, want 32766", "+", r)
	}
	y = 32767
	r = x + y
	if r != 32767 {
		log.Fatalf("0 %s 32767 = %d, want 32767", "+", r)
	}
	x = 1
	y = -32768
	r = x + y
	if r != -32767 {
		log.Fatalf("1 %s -32768 = %d, want -32767", "+", r)
	}
	y = -32767
	r = x + y
	if r != -32766 {
		log.Fatalf("1 %s -32767 = %d, want -32766", "+", r)
	}
	y = -1
	r = x + y
	if r != 0 {
		log.Fatalf("1 %s -1 = %d, want 0", "+", r)
	}
	y = 0
	r = x + y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "+", r)
	}
	y = 1
	r = x + y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "+", r)
	}
	y = 32766
	r = x + y
	if r != 32767 {
		log.Fatalf("1 %s 32766 = %d, want 32767", "+", r)
	}
	y = 32767
	r = x + y
	if r != -32768 {
		log.Fatalf("1 %s 32767 = %d, want -32768", "+", r)
	}
	x = 32766
	y = -32768
	r = x + y
	if r != -2 {
		log.Fatalf("32766 %s -32768 = %d, want -2", "+", r)
	}
	y = -32767
	r = x + y
	if r != -1 {
		log.Fatalf("32766 %s -32767 = %d, want -1", "+", r)
	}
	y = -1
	r = x + y
	if r != 32765 {
		log.Fatalf("32766 %s -1 = %d, want 32765", "+", r)
	}
	y = 0
	r = x + y
	if r != 32766 {
		log.Fatalf("32766 %s 0 = %d, want 32766", "+", r)
	}
	y = 1
	r = x + y
	if r != 32767 {
		log.Fatalf("32766 %s 1 = %d, want 32767", "+", r)
	}
	y = 32766
	r = x + y
	if r != -4 {
		log.Fatalf("32766 %s 32766 = %d, want -4", "+", r)
	}
	y = 32767
	r = x + y
	if r != -3 {
		log.Fatalf("32766 %s 32767 = %d, want -3", "+", r)
	}
	x = 32767
	y = -32768
	r = x + y
	if r != -1 {
		log.Fatalf("32767 %s -32768 = %d, want -1", "+", r)
	}
	y = -32767
	r = x + y
	if r != 0 {
		log.Fatalf("32767 %s -32767 = %d, want 0", "+", r)
	}
	y = -1
	r = x + y
	if r != 32766 {
		log.Fatalf("32767 %s -1 = %d, want 32766", "+", r)
	}
	y = 0
	r = x + y
	if r != 32767 {
		log.Fatalf("32767 %s 0 = %d, want 32767", "+", r)
	}
	y = 1
	r = x + y
	if r != -32768 {
		log.Fatalf("32767 %s 1 = %d, want -32768", "+", r)
	}
	y = 32766
	r = x + y
	if r != -3 {
		log.Fatalf("32767 %s 32766 = %d, want -3", "+", r)
	}
	y = 32767
	r = x + y
	if r != -2 {
		log.Fatalf("32767 %s 32767 = %d, want -2", "+", r)
	}
}
func testConstFoldint16sub() {
	var x, y, r int16
	x = -32768
	y = -32768
	r = x - y
	if r != 0 {
		log.Fatalf("-32768 %s -32768 = %d, want 0", "-", r)
	}
	y = -32767
	r = x - y
	if r != -1 {
		log.Fatalf("-32768 %s -32767 = %d, want -1", "-", r)
	}
	y = -1
	r = x - y
	if r != -32767 {
		log.Fatalf("-32768 %s -1 = %d, want -32767", "-", r)
	}
	y = 0
	r = x - y
	if r != -32768 {
		log.Fatalf("-32768 %s 0 = %d, want -32768", "-", r)
	}
	y = 1
	r = x - y
	if r != 32767 {
		log.Fatalf("-32768 %s 1 = %d, want 32767", "-", r)
	}
	y = 32766
	r = x - y
	if r != 2 {
		log.Fatalf("-32768 %s 32766 = %d, want 2", "-", r)
	}
	y = 32767
	r = x - y
	if r != 1 {
		log.Fatalf("-32768 %s 32767 = %d, want 1", "-", r)
	}
	x = -32767
	y = -32768
	r = x - y
	if r != 1 {
		log.Fatalf("-32767 %s -32768 = %d, want 1", "-", r)
	}
	y = -32767
	r = x - y
	if r != 0 {
		log.Fatalf("-32767 %s -32767 = %d, want 0", "-", r)
	}
	y = -1
	r = x - y
	if r != -32766 {
		log.Fatalf("-32767 %s -1 = %d, want -32766", "-", r)
	}
	y = 0
	r = x - y
	if r != -32767 {
		log.Fatalf("-32767 %s 0 = %d, want -32767", "-", r)
	}
	y = 1
	r = x - y
	if r != -32768 {
		log.Fatalf("-32767 %s 1 = %d, want -32768", "-", r)
	}
	y = 32766
	r = x - y
	if r != 3 {
		log.Fatalf("-32767 %s 32766 = %d, want 3", "-", r)
	}
	y = 32767
	r = x - y
	if r != 2 {
		log.Fatalf("-32767 %s 32767 = %d, want 2", "-", r)
	}
	x = -1
	y = -32768
	r = x - y
	if r != 32767 {
		log.Fatalf("-1 %s -32768 = %d, want 32767", "-", r)
	}
	y = -32767
	r = x - y
	if r != 32766 {
		log.Fatalf("-1 %s -32767 = %d, want 32766", "-", r)
	}
	y = -1
	r = x - y
	if r != 0 {
		log.Fatalf("-1 %s -1 = %d, want 0", "-", r)
	}
	y = 0
	r = x - y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "-", r)
	}
	y = 1
	r = x - y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "-", r)
	}
	y = 32766
	r = x - y
	if r != -32767 {
		log.Fatalf("-1 %s 32766 = %d, want -32767", "-", r)
	}
	y = 32767
	r = x - y
	if r != -32768 {
		log.Fatalf("-1 %s 32767 = %d, want -32768", "-", r)
	}
	x = 0
	y = -32768
	r = x - y
	if r != -32768 {
		log.Fatalf("0 %s -32768 = %d, want -32768", "-", r)
	}
	y = -32767
	r = x - y
	if r != 32767 {
		log.Fatalf("0 %s -32767 = %d, want 32767", "-", r)
	}
	y = -1
	r = x - y
	if r != 1 {
		log.Fatalf("0 %s -1 = %d, want 1", "-", r)
	}
	y = 0
	r = x - y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "-", r)
	}
	y = 1
	r = x - y
	if r != -1 {
		log.Fatalf("0 %s 1 = %d, want -1", "-", r)
	}
	y = 32766
	r = x - y
	if r != -32766 {
		log.Fatalf("0 %s 32766 = %d, want -32766", "-", r)
	}
	y = 32767
	r = x - y
	if r != -32767 {
		log.Fatalf("0 %s 32767 = %d, want -32767", "-", r)
	}
	x = 1
	y = -32768
	r = x - y
	if r != -32767 {
		log.Fatalf("1 %s -32768 = %d, want -32767", "-", r)
	}
	y = -32767
	r = x - y
	if r != -32768 {
		log.Fatalf("1 %s -32767 = %d, want -32768", "-", r)
	}
	y = -1
	r = x - y
	if r != 2 {
		log.Fatalf("1 %s -1 = %d, want 2", "-", r)
	}
	y = 0
	r = x - y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "-", r)
	}
	y = 1
	r = x - y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "-", r)
	}
	y = 32766
	r = x - y
	if r != -32765 {
		log.Fatalf("1 %s 32766 = %d, want -32765", "-", r)
	}
	y = 32767
	r = x - y
	if r != -32766 {
		log.Fatalf("1 %s 32767 = %d, want -32766", "-", r)
	}
	x = 32766
	y = -32768
	r = x - y
	if r != -2 {
		log.Fatalf("32766 %s -32768 = %d, want -2", "-", r)
	}
	y = -32767
	r = x - y
	if r != -3 {
		log.Fatalf("32766 %s -32767 = %d, want -3", "-", r)
	}
	y = -1
	r = x - y
	if r != 32767 {
		log.Fatalf("32766 %s -1 = %d, want 32767", "-", r)
	}
	y = 0
	r = x - y
	if r != 32766 {
		log.Fatalf("32766 %s 0 = %d, want 32766", "-", r)
	}
	y = 1
	r = x - y
	if r != 32765 {
		log.Fatalf("32766 %s 1 = %d, want 32765", "-", r)
	}
	y = 32766
	r = x - y
	if r != 0 {
		log.Fatalf("32766 %s 32766 = %d, want 0", "-", r)
	}
	y = 32767
	r = x - y
	if r != -1 {
		log.Fatalf("32766 %s 32767 = %d, want -1", "-", r)
	}
	x = 32767
	y = -32768
	r = x - y
	if r != -1 {
		log.Fatalf("32767 %s -32768 = %d, want -1", "-", r)
	}
	y = -32767
	r = x - y
	if r != -2 {
		log.Fatalf("32767 %s -32767 = %d, want -2", "-", r)
	}
	y = -1
	r = x - y
	if r != -32768 {
		log.Fatalf("32767 %s -1 = %d, want -32768", "-", r)
	}
	y = 0
	r = x - y
	if r != 32767 {
		log.Fatalf("32767 %s 0 = %d, want 32767", "-", r)
	}
	y = 1
	r = x - y
	if r != 32766 {
		log.Fatalf("32767 %s 1 = %d, want 32766", "-", r)
	}
	y = 32766
	r = x - y
	if r != 1 {
		log.Fatalf("32767 %s 32766 = %d, want 1", "-", r)
	}
	y = 32767
	r = x - y
	if r != 0 {
		log.Fatalf("32767 %s 32767 = %d, want 0", "-", r)
	}
}
func testConstFoldint16div() {
	var x, y, r int16
	x = -32768
	y = -32768
	r = x / y
	if r != 1 {
		log.Fatalf("-32768 %s -32768 = %d, want 1", "/", r)
	}
	y = -32767
	r = x / y
	if r != 1 {
		log.Fatalf("-32768 %s -32767 = %d, want 1", "/", r)
	}
	y = -1
	r = x / y
	if r != -32768 {
		log.Fatalf("-32768 %s -1 = %d, want -32768", "/", r)
	}
	y = 1
	r = x / y
	if r != -32768 {
		log.Fatalf("-32768 %s 1 = %d, want -32768", "/", r)
	}
	y = 32766
	r = x / y
	if r != -1 {
		log.Fatalf("-32768 %s 32766 = %d, want -1", "/", r)
	}
	y = 32767
	r = x / y
	if r != -1 {
		log.Fatalf("-32768 %s 32767 = %d, want -1", "/", r)
	}
	x = -32767
	y = -32768
	r = x / y
	if r != 0 {
		log.Fatalf("-32767 %s -32768 = %d, want 0", "/", r)
	}
	y = -32767
	r = x / y
	if r != 1 {
		log.Fatalf("-32767 %s -32767 = %d, want 1", "/", r)
	}
	y = -1
	r = x / y
	if r != 32767 {
		log.Fatalf("-32767 %s -1 = %d, want 32767", "/", r)
	}
	y = 1
	r = x / y
	if r != -32767 {
		log.Fatalf("-32767 %s 1 = %d, want -32767", "/", r)
	}
	y = 32766
	r = x / y
	if r != -1 {
		log.Fatalf("-32767 %s 32766 = %d, want -1", "/", r)
	}
	y = 32767
	r = x / y
	if r != -1 {
		log.Fatalf("-32767 %s 32767 = %d, want -1", "/", r)
	}
	x = -1
	y = -32768
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s -32768 = %d, want 0", "/", r)
	}
	y = -32767
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s -32767 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != 1 {
		log.Fatalf("-1 %s -1 = %d, want 1", "/", r)
	}
	y = 1
	r = x / y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", "/", r)
	}
	y = 32766
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s 32766 = %d, want 0", "/", r)
	}
	y = 32767
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s 32767 = %d, want 0", "/", r)
	}
	x = 0
	y = -32768
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -32768 = %d, want 0", "/", r)
	}
	y = -32767
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -32767 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "/", r)
	}
	y = 1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "/", r)
	}
	y = 32766
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 32766 = %d, want 0", "/", r)
	}
	y = 32767
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 32767 = %d, want 0", "/", r)
	}
	x = 1
	y = -32768
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s -32768 = %d, want 0", "/", r)
	}
	y = -32767
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s -32767 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != -1 {
		log.Fatalf("1 %s -1 = %d, want -1", "/", r)
	}
	y = 1
	r = x / y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "/", r)
	}
	y = 32766
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 32766 = %d, want 0", "/", r)
	}
	y = 32767
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 32767 = %d, want 0", "/", r)
	}
	x = 32766
	y = -32768
	r = x / y
	if r != 0 {
		log.Fatalf("32766 %s -32768 = %d, want 0", "/", r)
	}
	y = -32767
	r = x / y
	if r != 0 {
		log.Fatalf("32766 %s -32767 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != -32766 {
		log.Fatalf("32766 %s -1 = %d, want -32766", "/", r)
	}
	y = 1
	r = x / y
	if r != 32766 {
		log.Fatalf("32766 %s 1 = %d, want 32766", "/", r)
	}
	y = 32766
	r = x / y
	if r != 1 {
		log.Fatalf("32766 %s 32766 = %d, want 1", "/", r)
	}
	y = 32767
	r = x / y
	if r != 0 {
		log.Fatalf("32766 %s 32767 = %d, want 0", "/", r)
	}
	x = 32767
	y = -32768
	r = x / y
	if r != 0 {
		log.Fatalf("32767 %s -32768 = %d, want 0", "/", r)
	}
	y = -32767
	r = x / y
	if r != -1 {
		log.Fatalf("32767 %s -32767 = %d, want -1", "/", r)
	}
	y = -1
	r = x / y
	if r != -32767 {
		log.Fatalf("32767 %s -1 = %d, want -32767", "/", r)
	}
	y = 1
	r = x / y
	if r != 32767 {
		log.Fatalf("32767 %s 1 = %d, want 32767", "/", r)
	}
	y = 32766
	r = x / y
	if r != 1 {
		log.Fatalf("32767 %s 32766 = %d, want 1", "/", r)
	}
	y = 32767
	r = x / y
	if r != 1 {
		log.Fatalf("32767 %s 32767 = %d, want 1", "/", r)
	}
}
func testConstFoldint16mul() {
	var x, y, r int16
	x = -32768
	y = -32768
	r = x * y
	if r != 0 {
		log.Fatalf("-32768 %s -32768 = %d, want 0", "*", r)
	}
	y = -32767
	r = x * y
	if r != -32768 {
		log.Fatalf("-32768 %s -32767 = %d, want -32768", "*", r)
	}
	y = -1
	r = x * y
	if r != -32768 {
		log.Fatalf("-32768 %s -1 = %d, want -32768", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-32768 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -32768 {
		log.Fatalf("-32768 %s 1 = %d, want -32768", "*", r)
	}
	y = 32766
	r = x * y
	if r != 0 {
		log.Fatalf("-32768 %s 32766 = %d, want 0", "*", r)
	}
	y = 32767
	r = x * y
	if r != -32768 {
		log.Fatalf("-32768 %s 32767 = %d, want -32768", "*", r)
	}
	x = -32767
	y = -32768
	r = x * y
	if r != -32768 {
		log.Fatalf("-32767 %s -32768 = %d, want -32768", "*", r)
	}
	y = -32767
	r = x * y
	if r != 1 {
		log.Fatalf("-32767 %s -32767 = %d, want 1", "*", r)
	}
	y = -1
	r = x * y
	if r != 32767 {
		log.Fatalf("-32767 %s -1 = %d, want 32767", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-32767 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -32767 {
		log.Fatalf("-32767 %s 1 = %d, want -32767", "*", r)
	}
	y = 32766
	r = x * y
	if r != 32766 {
		log.Fatalf("-32767 %s 32766 = %d, want 32766", "*", r)
	}
	y = 32767
	r = x * y
	if r != -1 {
		log.Fatalf("-32767 %s 32767 = %d, want -1", "*", r)
	}
	x = -1
	y = -32768
	r = x * y
	if r != -32768 {
		log.Fatalf("-1 %s -32768 = %d, want -32768", "*", r)
	}
	y = -32767
	r = x * y
	if r != 32767 {
		log.Fatalf("-1 %s -32767 = %d, want 32767", "*", r)
	}
	y = -1
	r = x * y
	if r != 1 {
		log.Fatalf("-1 %s -1 = %d, want 1", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", "*", r)
	}
	y = 32766
	r = x * y
	if r != -32766 {
		log.Fatalf("-1 %s 32766 = %d, want -32766", "*", r)
	}
	y = 32767
	r = x * y
	if r != -32767 {
		log.Fatalf("-1 %s 32767 = %d, want -32767", "*", r)
	}
	x = 0
	y = -32768
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -32768 = %d, want 0", "*", r)
	}
	y = -32767
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -32767 = %d, want 0", "*", r)
	}
	y = -1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "*", r)
	}
	y = 32766
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 32766 = %d, want 0", "*", r)
	}
	y = 32767
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 32767 = %d, want 0", "*", r)
	}
	x = 1
	y = -32768
	r = x * y
	if r != -32768 {
		log.Fatalf("1 %s -32768 = %d, want -32768", "*", r)
	}
	y = -32767
	r = x * y
	if r != -32767 {
		log.Fatalf("1 %s -32767 = %d, want -32767", "*", r)
	}
	y = -1
	r = x * y
	if r != -1 {
		log.Fatalf("1 %s -1 = %d, want -1", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "*", r)
	}
	y = 32766
	r = x * y
	if r != 32766 {
		log.Fatalf("1 %s 32766 = %d, want 32766", "*", r)
	}
	y = 32767
	r = x * y
	if r != 32767 {
		log.Fatalf("1 %s 32767 = %d, want 32767", "*", r)
	}
	x = 32766
	y = -32768
	r = x * y
	if r != 0 {
		log.Fatalf("32766 %s -32768 = %d, want 0", "*", r)
	}
	y = -32767
	r = x * y
	if r != 32766 {
		log.Fatalf("32766 %s -32767 = %d, want 32766", "*", r)
	}
	y = -1
	r = x * y
	if r != -32766 {
		log.Fatalf("32766 %s -1 = %d, want -32766", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("32766 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 32766 {
		log.Fatalf("32766 %s 1 = %d, want 32766", "*", r)
	}
	y = 32766
	r = x * y
	if r != 4 {
		log.Fatalf("32766 %s 32766 = %d, want 4", "*", r)
	}
	y = 32767
	r = x * y
	if r != -32766 {
		log.Fatalf("32766 %s 32767 = %d, want -32766", "*", r)
	}
	x = 32767
	y = -32768
	r = x * y
	if r != -32768 {
		log.Fatalf("32767 %s -32768 = %d, want -32768", "*", r)
	}
	y = -32767
	r = x * y
	if r != -1 {
		log.Fatalf("32767 %s -32767 = %d, want -1", "*", r)
	}
	y = -1
	r = x * y
	if r != -32767 {
		log.Fatalf("32767 %s -1 = %d, want -32767", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("32767 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 32767 {
		log.Fatalf("32767 %s 1 = %d, want 32767", "*", r)
	}
	y = 32766
	r = x * y
	if r != -32766 {
		log.Fatalf("32767 %s 32766 = %d, want -32766", "*", r)
	}
	y = 32767
	r = x * y
	if r != 1 {
		log.Fatalf("32767 %s 32767 = %d, want 1", "*", r)
	}
}
func testConstFoldint16mod() {
	var x, y, r int16
	x = -32768
	y = -32768
	r = x % y
	if r != 0 {
		log.Fatalf("-32768 %s -32768 = %d, want 0", "%", r)
	}
	y = -32767
	r = x % y
	if r != -1 {
		log.Fatalf("-32768 %s -32767 = %d, want -1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-32768 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-32768 %s 1 = %d, want 0", "%", r)
	}
	y = 32766
	r = x % y
	if r != -2 {
		log.Fatalf("-32768 %s 32766 = %d, want -2", "%", r)
	}
	y = 32767
	r = x % y
	if r != -1 {
		log.Fatalf("-32768 %s 32767 = %d, want -1", "%", r)
	}
	x = -32767
	y = -32768
	r = x % y
	if r != -32767 {
		log.Fatalf("-32767 %s -32768 = %d, want -32767", "%", r)
	}
	y = -32767
	r = x % y
	if r != 0 {
		log.Fatalf("-32767 %s -32767 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-32767 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-32767 %s 1 = %d, want 0", "%", r)
	}
	y = 32766
	r = x % y
	if r != -1 {
		log.Fatalf("-32767 %s 32766 = %d, want -1", "%", r)
	}
	y = 32767
	r = x % y
	if r != 0 {
		log.Fatalf("-32767 %s 32767 = %d, want 0", "%", r)
	}
	x = -1
	y = -32768
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s -32768 = %d, want -1", "%", r)
	}
	y = -32767
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s -32767 = %d, want -1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-1 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-1 %s 1 = %d, want 0", "%", r)
	}
	y = 32766
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s 32766 = %d, want -1", "%", r)
	}
	y = 32767
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s 32767 = %d, want -1", "%", r)
	}
	x = 0
	y = -32768
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -32768 = %d, want 0", "%", r)
	}
	y = -32767
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -32767 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "%", r)
	}
	y = 32766
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 32766 = %d, want 0", "%", r)
	}
	y = 32767
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 32767 = %d, want 0", "%", r)
	}
	x = 1
	y = -32768
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s -32768 = %d, want 1", "%", r)
	}
	y = -32767
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s -32767 = %d, want 1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "%", r)
	}
	y = 32766
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 32766 = %d, want 1", "%", r)
	}
	y = 32767
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 32767 = %d, want 1", "%", r)
	}
	x = 32766
	y = -32768
	r = x % y
	if r != 32766 {
		log.Fatalf("32766 %s -32768 = %d, want 32766", "%", r)
	}
	y = -32767
	r = x % y
	if r != 32766 {
		log.Fatalf("32766 %s -32767 = %d, want 32766", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("32766 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("32766 %s 1 = %d, want 0", "%", r)
	}
	y = 32766
	r = x % y
	if r != 0 {
		log.Fatalf("32766 %s 32766 = %d, want 0", "%", r)
	}
	y = 32767
	r = x % y
	if r != 32766 {
		log.Fatalf("32766 %s 32767 = %d, want 32766", "%", r)
	}
	x = 32767
	y = -32768
	r = x % y
	if r != 32767 {
		log.Fatalf("32767 %s -32768 = %d, want 32767", "%", r)
	}
	y = -32767
	r = x % y
	if r != 0 {
		log.Fatalf("32767 %s -32767 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("32767 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("32767 %s 1 = %d, want 0", "%", r)
	}
	y = 32766
	r = x % y
	if r != 1 {
		log.Fatalf("32767 %s 32766 = %d, want 1", "%", r)
	}
	y = 32767
	r = x % y
	if r != 0 {
		log.Fatalf("32767 %s 32767 = %d, want 0", "%", r)
	}
}
func testConstFolduint8add() {
	var x, y, r uint8
	x = 0
	y = 0
	r = x + y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "+", r)
	}
	y = 1
	r = x + y
	if r != 1 {
		log.Fatalf("0 %s 1 = %d, want 1", "+", r)
	}
	y = 255
	r = x + y
	if r != 255 {
		log.Fatalf("0 %s 255 = %d, want 255", "+", r)
	}
	x = 1
	y = 0
	r = x + y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "+", r)
	}
	y = 1
	r = x + y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "+", r)
	}
	y = 255
	r = x + y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", "+", r)
	}
	x = 255
	y = 0
	r = x + y
	if r != 255 {
		log.Fatalf("255 %s 0 = %d, want 255", "+", r)
	}
	y = 1
	r = x + y
	if r != 0 {
		log.Fatalf("255 %s 1 = %d, want 0", "+", r)
	}
	y = 255
	r = x + y
	if r != 254 {
		log.Fatalf("255 %s 255 = %d, want 254", "+", r)
	}
}
func testConstFolduint8sub() {
	var x, y, r uint8
	x = 0
	y = 0
	r = x - y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "-", r)
	}
	y = 1
	r = x - y
	if r != 255 {
		log.Fatalf("0 %s 1 = %d, want 255", "-", r)
	}
	y = 255
	r = x - y
	if r != 1 {
		log.Fatalf("0 %s 255 = %d, want 1", "-", r)
	}
	x = 1
	y = 0
	r = x - y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "-", r)
	}
	y = 1
	r = x - y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "-", r)
	}
	y = 255
	r = x - y
	if r != 2 {
		log.Fatalf("1 %s 255 = %d, want 2", "-", r)
	}
	x = 255
	y = 0
	r = x - y
	if r != 255 {
		log.Fatalf("255 %s 0 = %d, want 255", "-", r)
	}
	y = 1
	r = x - y
	if r != 254 {
		log.Fatalf("255 %s 1 = %d, want 254", "-", r)
	}
	y = 255
	r = x - y
	if r != 0 {
		log.Fatalf("255 %s 255 = %d, want 0", "-", r)
	}
}
func testConstFolduint8div() {
	var x, y, r uint8
	x = 0
	y = 1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "/", r)
	}
	y = 255
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "/", r)
	}
	x = 1
	y = 1
	r = x / y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "/", r)
	}
	y = 255
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", "/", r)
	}
	x = 255
	y = 1
	r = x / y
	if r != 255 {
		log.Fatalf("255 %s 1 = %d, want 255", "/", r)
	}
	y = 255
	r = x / y
	if r != 1 {
		log.Fatalf("255 %s 255 = %d, want 1", "/", r)
	}
}
func testConstFolduint8mul() {
	var x, y, r uint8
	x = 0
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "*", r)
	}
	y = 255
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "*", r)
	}
	x = 1
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "*", r)
	}
	y = 255
	r = x * y
	if r != 255 {
		log.Fatalf("1 %s 255 = %d, want 255", "*", r)
	}
	x = 255
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("255 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 255 {
		log.Fatalf("255 %s 1 = %d, want 255", "*", r)
	}
	y = 255
	r = x * y
	if r != 1 {
		log.Fatalf("255 %s 255 = %d, want 1", "*", r)
	}
}
func testConstFolduint8mod() {
	var x, y, r uint8
	x = 0
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "%", r)
	}
	y = 255
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "%", r)
	}
	x = 1
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "%", r)
	}
	y = 255
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 255 = %d, want 1", "%", r)
	}
	x = 255
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("255 %s 1 = %d, want 0", "%", r)
	}
	y = 255
	r = x % y
	if r != 0 {
		log.Fatalf("255 %s 255 = %d, want 0", "%", r)
	}
}
func testConstFoldint8add() {
	var x, y, r int8
	x = -128
	y = -128
	r = x + y
	if r != 0 {
		log.Fatalf("-128 %s -128 = %d, want 0", "+", r)
	}
	y = -127
	r = x + y
	if r != 1 {
		log.Fatalf("-128 %s -127 = %d, want 1", "+", r)
	}
	y = -1
	r = x + y
	if r != 127 {
		log.Fatalf("-128 %s -1 = %d, want 127", "+", r)
	}
	y = 0
	r = x + y
	if r != -128 {
		log.Fatalf("-128 %s 0 = %d, want -128", "+", r)
	}
	y = 1
	r = x + y
	if r != -127 {
		log.Fatalf("-128 %s 1 = %d, want -127", "+", r)
	}
	y = 126
	r = x + y
	if r != -2 {
		log.Fatalf("-128 %s 126 = %d, want -2", "+", r)
	}
	y = 127
	r = x + y
	if r != -1 {
		log.Fatalf("-128 %s 127 = %d, want -1", "+", r)
	}
	x = -127
	y = -128
	r = x + y
	if r != 1 {
		log.Fatalf("-127 %s -128 = %d, want 1", "+", r)
	}
	y = -127
	r = x + y
	if r != 2 {
		log.Fatalf("-127 %s -127 = %d, want 2", "+", r)
	}
	y = -1
	r = x + y
	if r != -128 {
		log.Fatalf("-127 %s -1 = %d, want -128", "+", r)
	}
	y = 0
	r = x + y
	if r != -127 {
		log.Fatalf("-127 %s 0 = %d, want -127", "+", r)
	}
	y = 1
	r = x + y
	if r != -126 {
		log.Fatalf("-127 %s 1 = %d, want -126", "+", r)
	}
	y = 126
	r = x + y
	if r != -1 {
		log.Fatalf("-127 %s 126 = %d, want -1", "+", r)
	}
	y = 127
	r = x + y
	if r != 0 {
		log.Fatalf("-127 %s 127 = %d, want 0", "+", r)
	}
	x = -1
	y = -128
	r = x + y
	if r != 127 {
		log.Fatalf("-1 %s -128 = %d, want 127", "+", r)
	}
	y = -127
	r = x + y
	if r != -128 {
		log.Fatalf("-1 %s -127 = %d, want -128", "+", r)
	}
	y = -1
	r = x + y
	if r != -2 {
		log.Fatalf("-1 %s -1 = %d, want -2", "+", r)
	}
	y = 0
	r = x + y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "+", r)
	}
	y = 1
	r = x + y
	if r != 0 {
		log.Fatalf("-1 %s 1 = %d, want 0", "+", r)
	}
	y = 126
	r = x + y
	if r != 125 {
		log.Fatalf("-1 %s 126 = %d, want 125", "+", r)
	}
	y = 127
	r = x + y
	if r != 126 {
		log.Fatalf("-1 %s 127 = %d, want 126", "+", r)
	}
	x = 0
	y = -128
	r = x + y
	if r != -128 {
		log.Fatalf("0 %s -128 = %d, want -128", "+", r)
	}
	y = -127
	r = x + y
	if r != -127 {
		log.Fatalf("0 %s -127 = %d, want -127", "+", r)
	}
	y = -1
	r = x + y
	if r != -1 {
		log.Fatalf("0 %s -1 = %d, want -1", "+", r)
	}
	y = 0
	r = x + y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "+", r)
	}
	y = 1
	r = x + y
	if r != 1 {
		log.Fatalf("0 %s 1 = %d, want 1", "+", r)
	}
	y = 126
	r = x + y
	if r != 126 {
		log.Fatalf("0 %s 126 = %d, want 126", "+", r)
	}
	y = 127
	r = x + y
	if r != 127 {
		log.Fatalf("0 %s 127 = %d, want 127", "+", r)
	}
	x = 1
	y = -128
	r = x + y
	if r != -127 {
		log.Fatalf("1 %s -128 = %d, want -127", "+", r)
	}
	y = -127
	r = x + y
	if r != -126 {
		log.Fatalf("1 %s -127 = %d, want -126", "+", r)
	}
	y = -1
	r = x + y
	if r != 0 {
		log.Fatalf("1 %s -1 = %d, want 0", "+", r)
	}
	y = 0
	r = x + y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "+", r)
	}
	y = 1
	r = x + y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "+", r)
	}
	y = 126
	r = x + y
	if r != 127 {
		log.Fatalf("1 %s 126 = %d, want 127", "+", r)
	}
	y = 127
	r = x + y
	if r != -128 {
		log.Fatalf("1 %s 127 = %d, want -128", "+", r)
	}
	x = 126
	y = -128
	r = x + y
	if r != -2 {
		log.Fatalf("126 %s -128 = %d, want -2", "+", r)
	}
	y = -127
	r = x + y
	if r != -1 {
		log.Fatalf("126 %s -127 = %d, want -1", "+", r)
	}
	y = -1
	r = x + y
	if r != 125 {
		log.Fatalf("126 %s -1 = %d, want 125", "+", r)
	}
	y = 0
	r = x + y
	if r != 126 {
		log.Fatalf("126 %s 0 = %d, want 126", "+", r)
	}
	y = 1
	r = x + y
	if r != 127 {
		log.Fatalf("126 %s 1 = %d, want 127", "+", r)
	}
	y = 126
	r = x + y
	if r != -4 {
		log.Fatalf("126 %s 126 = %d, want -4", "+", r)
	}
	y = 127
	r = x + y
	if r != -3 {
		log.Fatalf("126 %s 127 = %d, want -3", "+", r)
	}
	x = 127
	y = -128
	r = x + y
	if r != -1 {
		log.Fatalf("127 %s -128 = %d, want -1", "+", r)
	}
	y = -127
	r = x + y
	if r != 0 {
		log.Fatalf("127 %s -127 = %d, want 0", "+", r)
	}
	y = -1
	r = x + y
	if r != 126 {
		log.Fatalf("127 %s -1 = %d, want 126", "+", r)
	}
	y = 0
	r = x + y
	if r != 127 {
		log.Fatalf("127 %s 0 = %d, want 127", "+", r)
	}
	y = 1
	r = x + y
	if r != -128 {
		log.Fatalf("127 %s 1 = %d, want -128", "+", r)
	}
	y = 126
	r = x + y
	if r != -3 {
		log.Fatalf("127 %s 126 = %d, want -3", "+", r)
	}
	y = 127
	r = x + y
	if r != -2 {
		log.Fatalf("127 %s 127 = %d, want -2", "+", r)
	}
}
func testConstFoldint8sub() {
	var x, y, r int8
	x = -128
	y = -128
	r = x - y
	if r != 0 {
		log.Fatalf("-128 %s -128 = %d, want 0", "-", r)
	}
	y = -127
	r = x - y
	if r != -1 {
		log.Fatalf("-128 %s -127 = %d, want -1", "-", r)
	}
	y = -1
	r = x - y
	if r != -127 {
		log.Fatalf("-128 %s -1 = %d, want -127", "-", r)
	}
	y = 0
	r = x - y
	if r != -128 {
		log.Fatalf("-128 %s 0 = %d, want -128", "-", r)
	}
	y = 1
	r = x - y
	if r != 127 {
		log.Fatalf("-128 %s 1 = %d, want 127", "-", r)
	}
	y = 126
	r = x - y
	if r != 2 {
		log.Fatalf("-128 %s 126 = %d, want 2", "-", r)
	}
	y = 127
	r = x - y
	if r != 1 {
		log.Fatalf("-128 %s 127 = %d, want 1", "-", r)
	}
	x = -127
	y = -128
	r = x - y
	if r != 1 {
		log.Fatalf("-127 %s -128 = %d, want 1", "-", r)
	}
	y = -127
	r = x - y
	if r != 0 {
		log.Fatalf("-127 %s -127 = %d, want 0", "-", r)
	}
	y = -1
	r = x - y
	if r != -126 {
		log.Fatalf("-127 %s -1 = %d, want -126", "-", r)
	}
	y = 0
	r = x - y
	if r != -127 {
		log.Fatalf("-127 %s 0 = %d, want -127", "-", r)
	}
	y = 1
	r = x - y
	if r != -128 {
		log.Fatalf("-127 %s 1 = %d, want -128", "-", r)
	}
	y = 126
	r = x - y
	if r != 3 {
		log.Fatalf("-127 %s 126 = %d, want 3", "-", r)
	}
	y = 127
	r = x - y
	if r != 2 {
		log.Fatalf("-127 %s 127 = %d, want 2", "-", r)
	}
	x = -1
	y = -128
	r = x - y
	if r != 127 {
		log.Fatalf("-1 %s -128 = %d, want 127", "-", r)
	}
	y = -127
	r = x - y
	if r != 126 {
		log.Fatalf("-1 %s -127 = %d, want 126", "-", r)
	}
	y = -1
	r = x - y
	if r != 0 {
		log.Fatalf("-1 %s -1 = %d, want 0", "-", r)
	}
	y = 0
	r = x - y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "-", r)
	}
	y = 1
	r = x - y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "-", r)
	}
	y = 126
	r = x - y
	if r != -127 {
		log.Fatalf("-1 %s 126 = %d, want -127", "-", r)
	}
	y = 127
	r = x - y
	if r != -128 {
		log.Fatalf("-1 %s 127 = %d, want -128", "-", r)
	}
	x = 0
	y = -128
	r = x - y
	if r != -128 {
		log.Fatalf("0 %s -128 = %d, want -128", "-", r)
	}
	y = -127
	r = x - y
	if r != 127 {
		log.Fatalf("0 %s -127 = %d, want 127", "-", r)
	}
	y = -1
	r = x - y
	if r != 1 {
		log.Fatalf("0 %s -1 = %d, want 1", "-", r)
	}
	y = 0
	r = x - y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "-", r)
	}
	y = 1
	r = x - y
	if r != -1 {
		log.Fatalf("0 %s 1 = %d, want -1", "-", r)
	}
	y = 126
	r = x - y
	if r != -126 {
		log.Fatalf("0 %s 126 = %d, want -126", "-", r)
	}
	y = 127
	r = x - y
	if r != -127 {
		log.Fatalf("0 %s 127 = %d, want -127", "-", r)
	}
	x = 1
	y = -128
	r = x - y
	if r != -127 {
		log.Fatalf("1 %s -128 = %d, want -127", "-", r)
	}
	y = -127
	r = x - y
	if r != -128 {
		log.Fatalf("1 %s -127 = %d, want -128", "-", r)
	}
	y = -1
	r = x - y
	if r != 2 {
		log.Fatalf("1 %s -1 = %d, want 2", "-", r)
	}
	y = 0
	r = x - y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "-", r)
	}
	y = 1
	r = x - y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "-", r)
	}
	y = 126
	r = x - y
	if r != -125 {
		log.Fatalf("1 %s 126 = %d, want -125", "-", r)
	}
	y = 127
	r = x - y
	if r != -126 {
		log.Fatalf("1 %s 127 = %d, want -126", "-", r)
	}
	x = 126
	y = -128
	r = x - y
	if r != -2 {
		log.Fatalf("126 %s -128 = %d, want -2", "-", r)
	}
	y = -127
	r = x - y
	if r != -3 {
		log.Fatalf("126 %s -127 = %d, want -3", "-", r)
	}
	y = -1
	r = x - y
	if r != 127 {
		log.Fatalf("126 %s -1 = %d, want 127", "-", r)
	}
	y = 0
	r = x - y
	if r != 126 {
		log.Fatalf("126 %s 0 = %d, want 126", "-", r)
	}
	y = 1
	r = x - y
	if r != 125 {
		log.Fatalf("126 %s 1 = %d, want 125", "-", r)
	}
	y = 126
	r = x - y
	if r != 0 {
		log.Fatalf("126 %s 126 = %d, want 0", "-", r)
	}
	y = 127
	r = x - y
	if r != -1 {
		log.Fatalf("126 %s 127 = %d, want -1", "-", r)
	}
	x = 127
	y = -128
	r = x - y
	if r != -1 {
		log.Fatalf("127 %s -128 = %d, want -1", "-", r)
	}
	y = -127
	r = x - y
	if r != -2 {
		log.Fatalf("127 %s -127 = %d, want -2", "-", r)
	}
	y = -1
	r = x - y
	if r != -128 {
		log.Fatalf("127 %s -1 = %d, want -128", "-", r)
	}
	y = 0
	r = x - y
	if r != 127 {
		log.Fatalf("127 %s 0 = %d, want 127", "-", r)
	}
	y = 1
	r = x - y
	if r != 126 {
		log.Fatalf("127 %s 1 = %d, want 126", "-", r)
	}
	y = 126
	r = x - y
	if r != 1 {
		log.Fatalf("127 %s 126 = %d, want 1", "-", r)
	}
	y = 127
	r = x - y
	if r != 0 {
		log.Fatalf("127 %s 127 = %d, want 0", "-", r)
	}
}
func testConstFoldint8div() {
	var x, y, r int8
	x = -128
	y = -128
	r = x / y
	if r != 1 {
		log.Fatalf("-128 %s -128 = %d, want 1", "/", r)
	}
	y = -127
	r = x / y
	if r != 1 {
		log.Fatalf("-128 %s -127 = %d, want 1", "/", r)
	}
	y = -1
	r = x / y
	if r != -128 {
		log.Fatalf("-128 %s -1 = %d, want -128", "/", r)
	}
	y = 1
	r = x / y
	if r != -128 {
		log.Fatalf("-128 %s 1 = %d, want -128", "/", r)
	}
	y = 126
	r = x / y
	if r != -1 {
		log.Fatalf("-128 %s 126 = %d, want -1", "/", r)
	}
	y = 127
	r = x / y
	if r != -1 {
		log.Fatalf("-128 %s 127 = %d, want -1", "/", r)
	}
	x = -127
	y = -128
	r = x / y
	if r != 0 {
		log.Fatalf("-127 %s -128 = %d, want 0", "/", r)
	}
	y = -127
	r = x / y
	if r != 1 {
		log.Fatalf("-127 %s -127 = %d, want 1", "/", r)
	}
	y = -1
	r = x / y
	if r != 127 {
		log.Fatalf("-127 %s -1 = %d, want 127", "/", r)
	}
	y = 1
	r = x / y
	if r != -127 {
		log.Fatalf("-127 %s 1 = %d, want -127", "/", r)
	}
	y = 126
	r = x / y
	if r != -1 {
		log.Fatalf("-127 %s 126 = %d, want -1", "/", r)
	}
	y = 127
	r = x / y
	if r != -1 {
		log.Fatalf("-127 %s 127 = %d, want -1", "/", r)
	}
	x = -1
	y = -128
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s -128 = %d, want 0", "/", r)
	}
	y = -127
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s -127 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != 1 {
		log.Fatalf("-1 %s -1 = %d, want 1", "/", r)
	}
	y = 1
	r = x / y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", "/", r)
	}
	y = 126
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s 126 = %d, want 0", "/", r)
	}
	y = 127
	r = x / y
	if r != 0 {
		log.Fatalf("-1 %s 127 = %d, want 0", "/", r)
	}
	x = 0
	y = -128
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -128 = %d, want 0", "/", r)
	}
	y = -127
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -127 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "/", r)
	}
	y = 1
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "/", r)
	}
	y = 126
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 126 = %d, want 0", "/", r)
	}
	y = 127
	r = x / y
	if r != 0 {
		log.Fatalf("0 %s 127 = %d, want 0", "/", r)
	}
	x = 1
	y = -128
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s -128 = %d, want 0", "/", r)
	}
	y = -127
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s -127 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != -1 {
		log.Fatalf("1 %s -1 = %d, want -1", "/", r)
	}
	y = 1
	r = x / y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "/", r)
	}
	y = 126
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 126 = %d, want 0", "/", r)
	}
	y = 127
	r = x / y
	if r != 0 {
		log.Fatalf("1 %s 127 = %d, want 0", "/", r)
	}
	x = 126
	y = -128
	r = x / y
	if r != 0 {
		log.Fatalf("126 %s -128 = %d, want 0", "/", r)
	}
	y = -127
	r = x / y
	if r != 0 {
		log.Fatalf("126 %s -127 = %d, want 0", "/", r)
	}
	y = -1
	r = x / y
	if r != -126 {
		log.Fatalf("126 %s -1 = %d, want -126", "/", r)
	}
	y = 1
	r = x / y
	if r != 126 {
		log.Fatalf("126 %s 1 = %d, want 126", "/", r)
	}
	y = 126
	r = x / y
	if r != 1 {
		log.Fatalf("126 %s 126 = %d, want 1", "/", r)
	}
	y = 127
	r = x / y
	if r != 0 {
		log.Fatalf("126 %s 127 = %d, want 0", "/", r)
	}
	x = 127
	y = -128
	r = x / y
	if r != 0 {
		log.Fatalf("127 %s -128 = %d, want 0", "/", r)
	}
	y = -127
	r = x / y
	if r != -1 {
		log.Fatalf("127 %s -127 = %d, want -1", "/", r)
	}
	y = -1
	r = x / y
	if r != -127 {
		log.Fatalf("127 %s -1 = %d, want -127", "/", r)
	}
	y = 1
	r = x / y
	if r != 127 {
		log.Fatalf("127 %s 1 = %d, want 127", "/", r)
	}
	y = 126
	r = x / y
	if r != 1 {
		log.Fatalf("127 %s 126 = %d, want 1", "/", r)
	}
	y = 127
	r = x / y
	if r != 1 {
		log.Fatalf("127 %s 127 = %d, want 1", "/", r)
	}
}
func testConstFoldint8mul() {
	var x, y, r int8
	x = -128
	y = -128
	r = x * y
	if r != 0 {
		log.Fatalf("-128 %s -128 = %d, want 0", "*", r)
	}
	y = -127
	r = x * y
	if r != -128 {
		log.Fatalf("-128 %s -127 = %d, want -128", "*", r)
	}
	y = -1
	r = x * y
	if r != -128 {
		log.Fatalf("-128 %s -1 = %d, want -128", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-128 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -128 {
		log.Fatalf("-128 %s 1 = %d, want -128", "*", r)
	}
	y = 126
	r = x * y
	if r != 0 {
		log.Fatalf("-128 %s 126 = %d, want 0", "*", r)
	}
	y = 127
	r = x * y
	if r != -128 {
		log.Fatalf("-128 %s 127 = %d, want -128", "*", r)
	}
	x = -127
	y = -128
	r = x * y
	if r != -128 {
		log.Fatalf("-127 %s -128 = %d, want -128", "*", r)
	}
	y = -127
	r = x * y
	if r != 1 {
		log.Fatalf("-127 %s -127 = %d, want 1", "*", r)
	}
	y = -1
	r = x * y
	if r != 127 {
		log.Fatalf("-127 %s -1 = %d, want 127", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-127 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -127 {
		log.Fatalf("-127 %s 1 = %d, want -127", "*", r)
	}
	y = 126
	r = x * y
	if r != 126 {
		log.Fatalf("-127 %s 126 = %d, want 126", "*", r)
	}
	y = 127
	r = x * y
	if r != -1 {
		log.Fatalf("-127 %s 127 = %d, want -1", "*", r)
	}
	x = -1
	y = -128
	r = x * y
	if r != -128 {
		log.Fatalf("-1 %s -128 = %d, want -128", "*", r)
	}
	y = -127
	r = x * y
	if r != 127 {
		log.Fatalf("-1 %s -127 = %d, want 127", "*", r)
	}
	y = -1
	r = x * y
	if r != 1 {
		log.Fatalf("-1 %s -1 = %d, want 1", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("-1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", "*", r)
	}
	y = 126
	r = x * y
	if r != -126 {
		log.Fatalf("-1 %s 126 = %d, want -126", "*", r)
	}
	y = 127
	r = x * y
	if r != -127 {
		log.Fatalf("-1 %s 127 = %d, want -127", "*", r)
	}
	x = 0
	y = -128
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -128 = %d, want 0", "*", r)
	}
	y = -127
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -127 = %d, want 0", "*", r)
	}
	y = -1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "*", r)
	}
	y = 126
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 126 = %d, want 0", "*", r)
	}
	y = 127
	r = x * y
	if r != 0 {
		log.Fatalf("0 %s 127 = %d, want 0", "*", r)
	}
	x = 1
	y = -128
	r = x * y
	if r != -128 {
		log.Fatalf("1 %s -128 = %d, want -128", "*", r)
	}
	y = -127
	r = x * y
	if r != -127 {
		log.Fatalf("1 %s -127 = %d, want -127", "*", r)
	}
	y = -1
	r = x * y
	if r != -1 {
		log.Fatalf("1 %s -1 = %d, want -1", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("1 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 1 {
		log.Fatalf("1 %s 1 = %d, want 1", "*", r)
	}
	y = 126
	r = x * y
	if r != 126 {
		log.Fatalf("1 %s 126 = %d, want 126", "*", r)
	}
	y = 127
	r = x * y
	if r != 127 {
		log.Fatalf("1 %s 127 = %d, want 127", "*", r)
	}
	x = 126
	y = -128
	r = x * y
	if r != 0 {
		log.Fatalf("126 %s -128 = %d, want 0", "*", r)
	}
	y = -127
	r = x * y
	if r != 126 {
		log.Fatalf("126 %s -127 = %d, want 126", "*", r)
	}
	y = -1
	r = x * y
	if r != -126 {
		log.Fatalf("126 %s -1 = %d, want -126", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("126 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 126 {
		log.Fatalf("126 %s 1 = %d, want 126", "*", r)
	}
	y = 126
	r = x * y
	if r != 4 {
		log.Fatalf("126 %s 126 = %d, want 4", "*", r)
	}
	y = 127
	r = x * y
	if r != -126 {
		log.Fatalf("126 %s 127 = %d, want -126", "*", r)
	}
	x = 127
	y = -128
	r = x * y
	if r != -128 {
		log.Fatalf("127 %s -128 = %d, want -128", "*", r)
	}
	y = -127
	r = x * y
	if r != -1 {
		log.Fatalf("127 %s -127 = %d, want -1", "*", r)
	}
	y = -1
	r = x * y
	if r != -127 {
		log.Fatalf("127 %s -1 = %d, want -127", "*", r)
	}
	y = 0
	r = x * y
	if r != 0 {
		log.Fatalf("127 %s 0 = %d, want 0", "*", r)
	}
	y = 1
	r = x * y
	if r != 127 {
		log.Fatalf("127 %s 1 = %d, want 127", "*", r)
	}
	y = 126
	r = x * y
	if r != -126 {
		log.Fatalf("127 %s 126 = %d, want -126", "*", r)
	}
	y = 127
	r = x * y
	if r != 1 {
		log.Fatalf("127 %s 127 = %d, want 1", "*", r)
	}
}
func testConstFoldint8mod() {
	var x, y, r int8
	x = -128
	y = -128
	r = x % y
	if r != 0 {
		log.Fatalf("-128 %s -128 = %d, want 0", "%", r)
	}
	y = -127
	r = x % y
	if r != -1 {
		log.Fatalf("-128 %s -127 = %d, want -1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-128 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-128 %s 1 = %d, want 0", "%", r)
	}
	y = 126
	r = x % y
	if r != -2 {
		log.Fatalf("-128 %s 126 = %d, want -2", "%", r)
	}
	y = 127
	r = x % y
	if r != -1 {
		log.Fatalf("-128 %s 127 = %d, want -1", "%", r)
	}
	x = -127
	y = -128
	r = x % y
	if r != -127 {
		log.Fatalf("-127 %s -128 = %d, want -127", "%", r)
	}
	y = -127
	r = x % y
	if r != 0 {
		log.Fatalf("-127 %s -127 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-127 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-127 %s 1 = %d, want 0", "%", r)
	}
	y = 126
	r = x % y
	if r != -1 {
		log.Fatalf("-127 %s 126 = %d, want -1", "%", r)
	}
	y = 127
	r = x % y
	if r != 0 {
		log.Fatalf("-127 %s 127 = %d, want 0", "%", r)
	}
	x = -1
	y = -128
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s -128 = %d, want -1", "%", r)
	}
	y = -127
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s -127 = %d, want -1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("-1 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("-1 %s 1 = %d, want 0", "%", r)
	}
	y = 126
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s 126 = %d, want -1", "%", r)
	}
	y = 127
	r = x % y
	if r != -1 {
		log.Fatalf("-1 %s 127 = %d, want -1", "%", r)
	}
	x = 0
	y = -128
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -128 = %d, want 0", "%", r)
	}
	y = -127
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -127 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "%", r)
	}
	y = 126
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 126 = %d, want 0", "%", r)
	}
	y = 127
	r = x % y
	if r != 0 {
		log.Fatalf("0 %s 127 = %d, want 0", "%", r)
	}
	x = 1
	y = -128
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s -128 = %d, want 1", "%", r)
	}
	y = -127
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s -127 = %d, want 1", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", "%", r)
	}
	y = 126
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 126 = %d, want 1", "%", r)
	}
	y = 127
	r = x % y
	if r != 1 {
		log.Fatalf("1 %s 127 = %d, want 1", "%", r)
	}
	x = 126
	y = -128
	r = x % y
	if r != 126 {
		log.Fatalf("126 %s -128 = %d, want 126", "%", r)
	}
	y = -127
	r = x % y
	if r != 126 {
		log.Fatalf("126 %s -127 = %d, want 126", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("126 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("126 %s 1 = %d, want 0", "%", r)
	}
	y = 126
	r = x % y
	if r != 0 {
		log.Fatalf("126 %s 126 = %d, want 0", "%", r)
	}
	y = 127
	r = x % y
	if r != 126 {
		log.Fatalf("126 %s 127 = %d, want 126", "%", r)
	}
	x = 127
	y = -128
	r = x % y
	if r != 127 {
		log.Fatalf("127 %s -128 = %d, want 127", "%", r)
	}
	y = -127
	r = x % y
	if r != 0 {
		log.Fatalf("127 %s -127 = %d, want 0", "%", r)
	}
	y = -1
	r = x % y
	if r != 0 {
		log.Fatalf("127 %s -1 = %d, want 0", "%", r)
	}
	y = 1
	r = x % y
	if r != 0 {
		log.Fatalf("127 %s 1 = %d, want 0", "%", r)
	}
	y = 126
	r = x % y
	if r != 1 {
		log.Fatalf("127 %s 126 = %d, want 1", "%", r)
	}
	y = 127
	r = x % y
	if r != 0 {
		log.Fatalf("127 %s 127 = %d, want 0", "%", r)
	}
}
func testConstFolduint64uint64lsh() {
	var x, r uint64
	var y uint64
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 4294967296
	y = 0
	r = x << y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s 1 = %d, want 8589934592", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("4294967296 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 18446744073709551615
	y = 0
	r = x << y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 18446744073709551615", "<<", r)
	}
	y = 1
	r = x << y
	if r != 18446744073709551614 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 18446744073709551614", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
}
func testConstFolduint64uint64rsh() {
	var x, r uint64
	var y uint64
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 4294967296
	y = 0
	r = x >> y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483648 {
		log.Fatalf("4294967296 %s 1 = %d, want 2147483648", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967296 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 18446744073709551615
	y = 0
	r = x >> y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 18446744073709551615", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 9223372036854775807 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 9223372036854775807", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
}
func testConstFolduint64uint32lsh() {
	var x, r uint64
	var y uint32
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 4294967296
	y = 0
	r = x << y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s 1 = %d, want 8589934592", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 18446744073709551615
	y = 0
	r = x << y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 18446744073709551615", "<<", r)
	}
	y = 1
	r = x << y
	if r != 18446744073709551614 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 18446744073709551614", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 4294967295 = %d, want 0", "<<", r)
	}
}
func testConstFolduint64uint32rsh() {
	var x, r uint64
	var y uint32
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 4294967296
	y = 0
	r = x >> y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483648 {
		log.Fatalf("4294967296 %s 1 = %d, want 2147483648", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 18446744073709551615
	y = 0
	r = x >> y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 18446744073709551615", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 9223372036854775807 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 9223372036854775807", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 4294967295 = %d, want 0", ">>", r)
	}
}
func testConstFolduint64uint16lsh() {
	var x, r uint64
	var y uint16
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 4294967296
	y = 0
	r = x << y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s 1 = %d, want 8589934592", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("4294967296 %s 65535 = %d, want 0", "<<", r)
	}
	x = 18446744073709551615
	y = 0
	r = x << y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 18446744073709551615", "<<", r)
	}
	y = 1
	r = x << y
	if r != 18446744073709551614 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 18446744073709551614", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 65535 = %d, want 0", "<<", r)
	}
}
func testConstFolduint64uint16rsh() {
	var x, r uint64
	var y uint16
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", ">>", r)
	}
	x = 4294967296
	y = 0
	r = x >> y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483648 {
		log.Fatalf("4294967296 %s 1 = %d, want 2147483648", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967296 %s 65535 = %d, want 0", ">>", r)
	}
	x = 18446744073709551615
	y = 0
	r = x >> y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 18446744073709551615", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 9223372036854775807 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 9223372036854775807", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 65535 = %d, want 0", ">>", r)
	}
}
func testConstFolduint64uint8lsh() {
	var x, r uint64
	var y uint8
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", "<<", r)
	}
	x = 4294967296
	y = 0
	r = x << y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s 1 = %d, want 8589934592", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("4294967296 %s 255 = %d, want 0", "<<", r)
	}
	x = 18446744073709551615
	y = 0
	r = x << y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 18446744073709551615", "<<", r)
	}
	y = 1
	r = x << y
	if r != 18446744073709551614 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 18446744073709551614", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 255 = %d, want 0", "<<", r)
	}
}
func testConstFolduint64uint8rsh() {
	var x, r uint64
	var y uint8
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", ">>", r)
	}
	x = 4294967296
	y = 0
	r = x >> y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483648 {
		log.Fatalf("4294967296 %s 1 = %d, want 2147483648", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967296 %s 255 = %d, want 0", ">>", r)
	}
	x = 18446744073709551615
	y = 0
	r = x >> y
	if r != 18446744073709551615 {
		log.Fatalf("18446744073709551615 %s 0 = %d, want 18446744073709551615", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 9223372036854775807 {
		log.Fatalf("18446744073709551615 %s 1 = %d, want 9223372036854775807", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("18446744073709551615 %s 255 = %d, want 0", ">>", r)
	}
}
func testConstFoldint64uint64lsh() {
	var x, r int64
	var y uint64
	x = -9223372036854775808
	y = 0
	r = x << y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want -9223372036854775808", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = -9223372036854775807
	y = 0
	r = x << y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want -9223372036854775807", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = -4294967296
	y = 0
	r = x << y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 0 = %d, want -4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != -8589934592 {
		log.Fatalf("-4294967296 %s 1 = %d, want -8589934592", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-4294967296 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-4294967296 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 4294967296
	y = 0
	r = x << y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s 1 = %d, want 8589934592", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("4294967296 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 9223372036854775806
	y = 0
	r = x << y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 9223372036854775806", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want -4", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 9223372036854775807
	y = 0
	r = x << y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 9223372036854775807", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
}
func testConstFoldint64uint64rsh() {
	var x, r int64
	var y uint64
	x = -9223372036854775808
	y = 0
	r = x >> y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want -9223372036854775808", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -4611686018427387904 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want -4611686018427387904", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = -9223372036854775807
	y = 0
	r = x >> y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want -9223372036854775807", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -4611686018427387904 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want -4611686018427387904", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-9223372036854775807 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-9223372036854775807 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = -4294967296
	y = 0
	r = x >> y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 0 = %d, want -4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -2147483648 {
		log.Fatalf("-4294967296 %s 1 = %d, want -2147483648", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-4294967296 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-4294967296 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 4294967296
	y = 0
	r = x >> y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483648 {
		log.Fatalf("4294967296 %s 1 = %d, want 2147483648", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967296 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 9223372036854775806
	y = 0
	r = x >> y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 9223372036854775806", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 4611686018427387903 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want 4611686018427387903", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 9223372036854775807
	y = 0
	r = x >> y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 9223372036854775807", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 4611686018427387903 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want 4611686018427387903", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
}
func testConstFoldint64uint32lsh() {
	var x, r int64
	var y uint32
	x = -9223372036854775808
	y = 0
	r = x << y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want -9223372036854775808", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = -9223372036854775807
	y = 0
	r = x << y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want -9223372036854775807", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = -4294967296
	y = 0
	r = x << y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 0 = %d, want -4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != -8589934592 {
		log.Fatalf("-4294967296 %s 1 = %d, want -8589934592", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-4294967296 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 4294967296
	y = 0
	r = x << y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s 1 = %d, want 8589934592", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 9223372036854775806
	y = 0
	r = x << y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 9223372036854775806", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want -4", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 9223372036854775807
	y = 0
	r = x << y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 9223372036854775807", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 4294967295 = %d, want 0", "<<", r)
	}
}
func testConstFoldint64uint32rsh() {
	var x, r int64
	var y uint32
	x = -9223372036854775808
	y = 0
	r = x >> y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want -9223372036854775808", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -4611686018427387904 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want -4611686018427387904", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = -9223372036854775807
	y = 0
	r = x >> y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want -9223372036854775807", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -4611686018427387904 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want -4611686018427387904", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-9223372036854775807 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = -4294967296
	y = 0
	r = x >> y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 0 = %d, want -4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -2147483648 {
		log.Fatalf("-4294967296 %s 1 = %d, want -2147483648", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-4294967296 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 4294967296
	y = 0
	r = x >> y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483648 {
		log.Fatalf("4294967296 %s 1 = %d, want 2147483648", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967296 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 9223372036854775806
	y = 0
	r = x >> y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 9223372036854775806", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 4611686018427387903 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want 4611686018427387903", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 9223372036854775807
	y = 0
	r = x >> y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 9223372036854775807", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 4611686018427387903 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want 4611686018427387903", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 4294967295 = %d, want 0", ">>", r)
	}
}
func testConstFoldint64uint16lsh() {
	var x, r int64
	var y uint16
	x = -9223372036854775808
	y = 0
	r = x << y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want -9223372036854775808", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 65535 = %d, want 0", "<<", r)
	}
	x = -9223372036854775807
	y = 0
	r = x << y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want -9223372036854775807", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s 65535 = %d, want 0", "<<", r)
	}
	x = -4294967296
	y = 0
	r = x << y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 0 = %d, want -4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != -8589934592 {
		log.Fatalf("-4294967296 %s 1 = %d, want -8589934592", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-4294967296 %s 65535 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 4294967296
	y = 0
	r = x << y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s 1 = %d, want 8589934592", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("4294967296 %s 65535 = %d, want 0", "<<", r)
	}
	x = 9223372036854775806
	y = 0
	r = x << y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 9223372036854775806", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want -4", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 65535 = %d, want 0", "<<", r)
	}
	x = 9223372036854775807
	y = 0
	r = x << y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 9223372036854775807", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want -2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 65535 = %d, want 0", "<<", r)
	}
}
func testConstFoldint64uint16rsh() {
	var x, r int64
	var y uint16
	x = -9223372036854775808
	y = 0
	r = x >> y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want -9223372036854775808", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -4611686018427387904 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want -4611686018427387904", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s 65535 = %d, want -1", ">>", r)
	}
	x = -9223372036854775807
	y = 0
	r = x >> y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want -9223372036854775807", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -4611686018427387904 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want -4611686018427387904", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-9223372036854775807 %s 65535 = %d, want -1", ">>", r)
	}
	x = -4294967296
	y = 0
	r = x >> y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 0 = %d, want -4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -2147483648 {
		log.Fatalf("-4294967296 %s 1 = %d, want -2147483648", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-4294967296 %s 65535 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 65535 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", ">>", r)
	}
	x = 4294967296
	y = 0
	r = x >> y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483648 {
		log.Fatalf("4294967296 %s 1 = %d, want 2147483648", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967296 %s 65535 = %d, want 0", ">>", r)
	}
	x = 9223372036854775806
	y = 0
	r = x >> y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 9223372036854775806", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 4611686018427387903 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want 4611686018427387903", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 65535 = %d, want 0", ">>", r)
	}
	x = 9223372036854775807
	y = 0
	r = x >> y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 9223372036854775807", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 4611686018427387903 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want 4611686018427387903", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 65535 = %d, want 0", ">>", r)
	}
}
func testConstFoldint64uint8lsh() {
	var x, r int64
	var y uint8
	x = -9223372036854775808
	y = 0
	r = x << y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want -9223372036854775808", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775808 %s 255 = %d, want 0", "<<", r)
	}
	x = -9223372036854775807
	y = 0
	r = x << y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want -9223372036854775807", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-9223372036854775807 %s 255 = %d, want 0", "<<", r)
	}
	x = -4294967296
	y = 0
	r = x << y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 0 = %d, want -4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != -8589934592 {
		log.Fatalf("-4294967296 %s 1 = %d, want -8589934592", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-4294967296 %s 255 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 255 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", "<<", r)
	}
	x = 4294967296
	y = 0
	r = x << y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", "<<", r)
	}
	y = 1
	r = x << y
	if r != 8589934592 {
		log.Fatalf("4294967296 %s 1 = %d, want 8589934592", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("4294967296 %s 255 = %d, want 0", "<<", r)
	}
	x = 9223372036854775806
	y = 0
	r = x << y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 9223372036854775806", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want -4", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 255 = %d, want 0", "<<", r)
	}
	x = 9223372036854775807
	y = 0
	r = x << y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 9223372036854775807", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want -2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 255 = %d, want 0", "<<", r)
	}
}
func testConstFoldint64uint8rsh() {
	var x, r int64
	var y uint8
	x = -9223372036854775808
	y = 0
	r = x >> y
	if r != -9223372036854775808 {
		log.Fatalf("-9223372036854775808 %s 0 = %d, want -9223372036854775808", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -4611686018427387904 {
		log.Fatalf("-9223372036854775808 %s 1 = %d, want -4611686018427387904", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-9223372036854775808 %s 255 = %d, want -1", ">>", r)
	}
	x = -9223372036854775807
	y = 0
	r = x >> y
	if r != -9223372036854775807 {
		log.Fatalf("-9223372036854775807 %s 0 = %d, want -9223372036854775807", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -4611686018427387904 {
		log.Fatalf("-9223372036854775807 %s 1 = %d, want -4611686018427387904", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-9223372036854775807 %s 255 = %d, want -1", ">>", r)
	}
	x = -4294967296
	y = 0
	r = x >> y
	if r != -4294967296 {
		log.Fatalf("-4294967296 %s 0 = %d, want -4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -2147483648 {
		log.Fatalf("-4294967296 %s 1 = %d, want -2147483648", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-4294967296 %s 255 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 255 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", ">>", r)
	}
	x = 4294967296
	y = 0
	r = x >> y
	if r != 4294967296 {
		log.Fatalf("4294967296 %s 0 = %d, want 4294967296", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483648 {
		log.Fatalf("4294967296 %s 1 = %d, want 2147483648", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967296 %s 255 = %d, want 0", ">>", r)
	}
	x = 9223372036854775806
	y = 0
	r = x >> y
	if r != 9223372036854775806 {
		log.Fatalf("9223372036854775806 %s 0 = %d, want 9223372036854775806", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 4611686018427387903 {
		log.Fatalf("9223372036854775806 %s 1 = %d, want 4611686018427387903", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("9223372036854775806 %s 255 = %d, want 0", ">>", r)
	}
	x = 9223372036854775807
	y = 0
	r = x >> y
	if r != 9223372036854775807 {
		log.Fatalf("9223372036854775807 %s 0 = %d, want 9223372036854775807", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 4611686018427387903 {
		log.Fatalf("9223372036854775807 %s 1 = %d, want 4611686018427387903", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("9223372036854775807 %s 255 = %d, want 0", ">>", r)
	}
}
func testConstFolduint32uint64lsh() {
	var x, r uint32
	var y uint64
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 4294967295
	y = 0
	r = x << y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 0 = %d, want 4294967295", "<<", r)
	}
	y = 1
	r = x << y
	if r != 4294967294 {
		log.Fatalf("4294967295 %s 1 = %d, want 4294967294", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("4294967295 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("4294967295 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
}
func testConstFolduint32uint64rsh() {
	var x, r uint32
	var y uint64
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 4294967295
	y = 0
	r = x >> y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 0 = %d, want 4294967295", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483647 {
		log.Fatalf("4294967295 %s 1 = %d, want 2147483647", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967295 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967295 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
}
func testConstFolduint32uint32lsh() {
	var x, r uint32
	var y uint32
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 4294967295
	y = 0
	r = x << y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 0 = %d, want 4294967295", "<<", r)
	}
	y = 1
	r = x << y
	if r != 4294967294 {
		log.Fatalf("4294967295 %s 1 = %d, want 4294967294", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("4294967295 %s 4294967295 = %d, want 0", "<<", r)
	}
}
func testConstFolduint32uint32rsh() {
	var x, r uint32
	var y uint32
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 4294967295
	y = 0
	r = x >> y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 0 = %d, want 4294967295", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483647 {
		log.Fatalf("4294967295 %s 1 = %d, want 2147483647", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967295 %s 4294967295 = %d, want 0", ">>", r)
	}
}
func testConstFolduint32uint16lsh() {
	var x, r uint32
	var y uint16
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 4294967295
	y = 0
	r = x << y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 0 = %d, want 4294967295", "<<", r)
	}
	y = 1
	r = x << y
	if r != 4294967294 {
		log.Fatalf("4294967295 %s 1 = %d, want 4294967294", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("4294967295 %s 65535 = %d, want 0", "<<", r)
	}
}
func testConstFolduint32uint16rsh() {
	var x, r uint32
	var y uint16
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", ">>", r)
	}
	x = 4294967295
	y = 0
	r = x >> y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 0 = %d, want 4294967295", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483647 {
		log.Fatalf("4294967295 %s 1 = %d, want 2147483647", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967295 %s 65535 = %d, want 0", ">>", r)
	}
}
func testConstFolduint32uint8lsh() {
	var x, r uint32
	var y uint8
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", "<<", r)
	}
	x = 4294967295
	y = 0
	r = x << y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 0 = %d, want 4294967295", "<<", r)
	}
	y = 1
	r = x << y
	if r != 4294967294 {
		log.Fatalf("4294967295 %s 1 = %d, want 4294967294", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("4294967295 %s 255 = %d, want 0", "<<", r)
	}
}
func testConstFolduint32uint8rsh() {
	var x, r uint32
	var y uint8
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", ">>", r)
	}
	x = 4294967295
	y = 0
	r = x >> y
	if r != 4294967295 {
		log.Fatalf("4294967295 %s 0 = %d, want 4294967295", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 2147483647 {
		log.Fatalf("4294967295 %s 1 = %d, want 2147483647", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("4294967295 %s 255 = %d, want 0", ">>", r)
	}
}
func testConstFoldint32uint64lsh() {
	var x, r int32
	var y uint64
	x = -2147483648
	y = 0
	r = x << y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 0 = %d, want -2147483648", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483648 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483648 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483648 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = -2147483647
	y = 0
	r = x << y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 0 = %d, want -2147483647", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-2147483647 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483647 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483647 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 2147483647
	y = 0
	r = x << y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 0 = %d, want 2147483647", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("2147483647 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("2147483647 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("2147483647 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
}
func testConstFoldint32uint64rsh() {
	var x, r int32
	var y uint64
	x = -2147483648
	y = 0
	r = x >> y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 0 = %d, want -2147483648", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1073741824 {
		log.Fatalf("-2147483648 %s 1 = %d, want -1073741824", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-2147483648 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-2147483648 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = -2147483647
	y = 0
	r = x >> y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 0 = %d, want -2147483647", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1073741824 {
		log.Fatalf("-2147483647 %s 1 = %d, want -1073741824", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-2147483647 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-2147483647 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 2147483647
	y = 0
	r = x >> y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 0 = %d, want 2147483647", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 1073741823 {
		log.Fatalf("2147483647 %s 1 = %d, want 1073741823", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("2147483647 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("2147483647 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
}
func testConstFoldint32uint32lsh() {
	var x, r int32
	var y uint32
	x = -2147483648
	y = 0
	r = x << y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 0 = %d, want -2147483648", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483648 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483648 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = -2147483647
	y = 0
	r = x << y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 0 = %d, want -2147483647", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-2147483647 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483647 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 2147483647
	y = 0
	r = x << y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 0 = %d, want 2147483647", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("2147483647 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("2147483647 %s 4294967295 = %d, want 0", "<<", r)
	}
}
func testConstFoldint32uint32rsh() {
	var x, r int32
	var y uint32
	x = -2147483648
	y = 0
	r = x >> y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 0 = %d, want -2147483648", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1073741824 {
		log.Fatalf("-2147483648 %s 1 = %d, want -1073741824", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-2147483648 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = -2147483647
	y = 0
	r = x >> y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 0 = %d, want -2147483647", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1073741824 {
		log.Fatalf("-2147483647 %s 1 = %d, want -1073741824", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-2147483647 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 2147483647
	y = 0
	r = x >> y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 0 = %d, want 2147483647", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 1073741823 {
		log.Fatalf("2147483647 %s 1 = %d, want 1073741823", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("2147483647 %s 4294967295 = %d, want 0", ">>", r)
	}
}
func testConstFoldint32uint16lsh() {
	var x, r int32
	var y uint16
	x = -2147483648
	y = 0
	r = x << y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 0 = %d, want -2147483648", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483648 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483648 %s 65535 = %d, want 0", "<<", r)
	}
	x = -2147483647
	y = 0
	r = x << y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 0 = %d, want -2147483647", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-2147483647 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483647 %s 65535 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 2147483647
	y = 0
	r = x << y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 0 = %d, want 2147483647", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("2147483647 %s 1 = %d, want -2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("2147483647 %s 65535 = %d, want 0", "<<", r)
	}
}
func testConstFoldint32uint16rsh() {
	var x, r int32
	var y uint16
	x = -2147483648
	y = 0
	r = x >> y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 0 = %d, want -2147483648", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1073741824 {
		log.Fatalf("-2147483648 %s 1 = %d, want -1073741824", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-2147483648 %s 65535 = %d, want -1", ">>", r)
	}
	x = -2147483647
	y = 0
	r = x >> y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 0 = %d, want -2147483647", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1073741824 {
		log.Fatalf("-2147483647 %s 1 = %d, want -1073741824", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-2147483647 %s 65535 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 65535 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", ">>", r)
	}
	x = 2147483647
	y = 0
	r = x >> y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 0 = %d, want 2147483647", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 1073741823 {
		log.Fatalf("2147483647 %s 1 = %d, want 1073741823", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("2147483647 %s 65535 = %d, want 0", ">>", r)
	}
}
func testConstFoldint32uint8lsh() {
	var x, r int32
	var y uint8
	x = -2147483648
	y = 0
	r = x << y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 0 = %d, want -2147483648", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483648 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483648 %s 255 = %d, want 0", "<<", r)
	}
	x = -2147483647
	y = 0
	r = x << y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 0 = %d, want -2147483647", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-2147483647 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-2147483647 %s 255 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 255 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", "<<", r)
	}
	x = 2147483647
	y = 0
	r = x << y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 0 = %d, want 2147483647", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("2147483647 %s 1 = %d, want -2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("2147483647 %s 255 = %d, want 0", "<<", r)
	}
}
func testConstFoldint32uint8rsh() {
	var x, r int32
	var y uint8
	x = -2147483648
	y = 0
	r = x >> y
	if r != -2147483648 {
		log.Fatalf("-2147483648 %s 0 = %d, want -2147483648", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1073741824 {
		log.Fatalf("-2147483648 %s 1 = %d, want -1073741824", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-2147483648 %s 255 = %d, want -1", ">>", r)
	}
	x = -2147483647
	y = 0
	r = x >> y
	if r != -2147483647 {
		log.Fatalf("-2147483647 %s 0 = %d, want -2147483647", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1073741824 {
		log.Fatalf("-2147483647 %s 1 = %d, want -1073741824", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-2147483647 %s 255 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 255 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", ">>", r)
	}
	x = 2147483647
	y = 0
	r = x >> y
	if r != 2147483647 {
		log.Fatalf("2147483647 %s 0 = %d, want 2147483647", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 1073741823 {
		log.Fatalf("2147483647 %s 1 = %d, want 1073741823", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("2147483647 %s 255 = %d, want 0", ">>", r)
	}
}
func testConstFolduint16uint64lsh() {
	var x, r uint16
	var y uint64
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 65535
	y = 0
	r = x << y
	if r != 65535 {
		log.Fatalf("65535 %s 0 = %d, want 65535", "<<", r)
	}
	y = 1
	r = x << y
	if r != 65534 {
		log.Fatalf("65535 %s 1 = %d, want 65534", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("65535 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("65535 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
}
func testConstFolduint16uint64rsh() {
	var x, r uint16
	var y uint64
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 65535
	y = 0
	r = x >> y
	if r != 65535 {
		log.Fatalf("65535 %s 0 = %d, want 65535", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 32767 {
		log.Fatalf("65535 %s 1 = %d, want 32767", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("65535 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("65535 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
}
func testConstFolduint16uint32lsh() {
	var x, r uint16
	var y uint32
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 65535
	y = 0
	r = x << y
	if r != 65535 {
		log.Fatalf("65535 %s 0 = %d, want 65535", "<<", r)
	}
	y = 1
	r = x << y
	if r != 65534 {
		log.Fatalf("65535 %s 1 = %d, want 65534", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("65535 %s 4294967295 = %d, want 0", "<<", r)
	}
}
func testConstFolduint16uint32rsh() {
	var x, r uint16
	var y uint32
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 65535
	y = 0
	r = x >> y
	if r != 65535 {
		log.Fatalf("65535 %s 0 = %d, want 65535", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 32767 {
		log.Fatalf("65535 %s 1 = %d, want 32767", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("65535 %s 4294967295 = %d, want 0", ">>", r)
	}
}
func testConstFolduint16uint16lsh() {
	var x, r uint16
	var y uint16
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 65535
	y = 0
	r = x << y
	if r != 65535 {
		log.Fatalf("65535 %s 0 = %d, want 65535", "<<", r)
	}
	y = 1
	r = x << y
	if r != 65534 {
		log.Fatalf("65535 %s 1 = %d, want 65534", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("65535 %s 65535 = %d, want 0", "<<", r)
	}
}
func testConstFolduint16uint16rsh() {
	var x, r uint16
	var y uint16
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", ">>", r)
	}
	x = 65535
	y = 0
	r = x >> y
	if r != 65535 {
		log.Fatalf("65535 %s 0 = %d, want 65535", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 32767 {
		log.Fatalf("65535 %s 1 = %d, want 32767", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("65535 %s 65535 = %d, want 0", ">>", r)
	}
}
func testConstFolduint16uint8lsh() {
	var x, r uint16
	var y uint8
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", "<<", r)
	}
	x = 65535
	y = 0
	r = x << y
	if r != 65535 {
		log.Fatalf("65535 %s 0 = %d, want 65535", "<<", r)
	}
	y = 1
	r = x << y
	if r != 65534 {
		log.Fatalf("65535 %s 1 = %d, want 65534", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("65535 %s 255 = %d, want 0", "<<", r)
	}
}
func testConstFolduint16uint8rsh() {
	var x, r uint16
	var y uint8
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", ">>", r)
	}
	x = 65535
	y = 0
	r = x >> y
	if r != 65535 {
		log.Fatalf("65535 %s 0 = %d, want 65535", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 32767 {
		log.Fatalf("65535 %s 1 = %d, want 32767", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("65535 %s 255 = %d, want 0", ">>", r)
	}
}
func testConstFoldint16uint64lsh() {
	var x, r int16
	var y uint64
	x = -32768
	y = 0
	r = x << y
	if r != -32768 {
		log.Fatalf("-32768 %s 0 = %d, want -32768", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-32768 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-32768 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-32768 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = -32767
	y = 0
	r = x << y
	if r != -32767 {
		log.Fatalf("-32767 %s 0 = %d, want -32767", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-32767 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-32767 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-32767 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 32766
	y = 0
	r = x << y
	if r != 32766 {
		log.Fatalf("32766 %s 0 = %d, want 32766", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("32766 %s 1 = %d, want -4", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("32766 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("32766 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 32767
	y = 0
	r = x << y
	if r != 32767 {
		log.Fatalf("32767 %s 0 = %d, want 32767", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("32767 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("32767 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("32767 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
}
func testConstFoldint16uint64rsh() {
	var x, r int16
	var y uint64
	x = -32768
	y = 0
	r = x >> y
	if r != -32768 {
		log.Fatalf("-32768 %s 0 = %d, want -32768", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -16384 {
		log.Fatalf("-32768 %s 1 = %d, want -16384", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-32768 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-32768 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = -32767
	y = 0
	r = x >> y
	if r != -32767 {
		log.Fatalf("-32767 %s 0 = %d, want -32767", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -16384 {
		log.Fatalf("-32767 %s 1 = %d, want -16384", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-32767 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-32767 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 32766
	y = 0
	r = x >> y
	if r != 32766 {
		log.Fatalf("32766 %s 0 = %d, want 32766", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 16383 {
		log.Fatalf("32766 %s 1 = %d, want 16383", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("32766 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("32766 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 32767
	y = 0
	r = x >> y
	if r != 32767 {
		log.Fatalf("32767 %s 0 = %d, want 32767", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 16383 {
		log.Fatalf("32767 %s 1 = %d, want 16383", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("32767 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("32767 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
}
func testConstFoldint16uint32lsh() {
	var x, r int16
	var y uint32
	x = -32768
	y = 0
	r = x << y
	if r != -32768 {
		log.Fatalf("-32768 %s 0 = %d, want -32768", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-32768 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-32768 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = -32767
	y = 0
	r = x << y
	if r != -32767 {
		log.Fatalf("-32767 %s 0 = %d, want -32767", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-32767 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-32767 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 32766
	y = 0
	r = x << y
	if r != 32766 {
		log.Fatalf("32766 %s 0 = %d, want 32766", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("32766 %s 1 = %d, want -4", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("32766 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 32767
	y = 0
	r = x << y
	if r != 32767 {
		log.Fatalf("32767 %s 0 = %d, want 32767", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("32767 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("32767 %s 4294967295 = %d, want 0", "<<", r)
	}
}
func testConstFoldint16uint32rsh() {
	var x, r int16
	var y uint32
	x = -32768
	y = 0
	r = x >> y
	if r != -32768 {
		log.Fatalf("-32768 %s 0 = %d, want -32768", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -16384 {
		log.Fatalf("-32768 %s 1 = %d, want -16384", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-32768 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = -32767
	y = 0
	r = x >> y
	if r != -32767 {
		log.Fatalf("-32767 %s 0 = %d, want -32767", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -16384 {
		log.Fatalf("-32767 %s 1 = %d, want -16384", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-32767 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 32766
	y = 0
	r = x >> y
	if r != 32766 {
		log.Fatalf("32766 %s 0 = %d, want 32766", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 16383 {
		log.Fatalf("32766 %s 1 = %d, want 16383", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("32766 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 32767
	y = 0
	r = x >> y
	if r != 32767 {
		log.Fatalf("32767 %s 0 = %d, want 32767", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 16383 {
		log.Fatalf("32767 %s 1 = %d, want 16383", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("32767 %s 4294967295 = %d, want 0", ">>", r)
	}
}
func testConstFoldint16uint16lsh() {
	var x, r int16
	var y uint16
	x = -32768
	y = 0
	r = x << y
	if r != -32768 {
		log.Fatalf("-32768 %s 0 = %d, want -32768", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-32768 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-32768 %s 65535 = %d, want 0", "<<", r)
	}
	x = -32767
	y = 0
	r = x << y
	if r != -32767 {
		log.Fatalf("-32767 %s 0 = %d, want -32767", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-32767 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-32767 %s 65535 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 32766
	y = 0
	r = x << y
	if r != 32766 {
		log.Fatalf("32766 %s 0 = %d, want 32766", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("32766 %s 1 = %d, want -4", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("32766 %s 65535 = %d, want 0", "<<", r)
	}
	x = 32767
	y = 0
	r = x << y
	if r != 32767 {
		log.Fatalf("32767 %s 0 = %d, want 32767", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("32767 %s 1 = %d, want -2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("32767 %s 65535 = %d, want 0", "<<", r)
	}
}
func testConstFoldint16uint16rsh() {
	var x, r int16
	var y uint16
	x = -32768
	y = 0
	r = x >> y
	if r != -32768 {
		log.Fatalf("-32768 %s 0 = %d, want -32768", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -16384 {
		log.Fatalf("-32768 %s 1 = %d, want -16384", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-32768 %s 65535 = %d, want -1", ">>", r)
	}
	x = -32767
	y = 0
	r = x >> y
	if r != -32767 {
		log.Fatalf("-32767 %s 0 = %d, want -32767", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -16384 {
		log.Fatalf("-32767 %s 1 = %d, want -16384", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-32767 %s 65535 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 65535 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", ">>", r)
	}
	x = 32766
	y = 0
	r = x >> y
	if r != 32766 {
		log.Fatalf("32766 %s 0 = %d, want 32766", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 16383 {
		log.Fatalf("32766 %s 1 = %d, want 16383", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("32766 %s 65535 = %d, want 0", ">>", r)
	}
	x = 32767
	y = 0
	r = x >> y
	if r != 32767 {
		log.Fatalf("32767 %s 0 = %d, want 32767", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 16383 {
		log.Fatalf("32767 %s 1 = %d, want 16383", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("32767 %s 65535 = %d, want 0", ">>", r)
	}
}
func testConstFoldint16uint8lsh() {
	var x, r int16
	var y uint8
	x = -32768
	y = 0
	r = x << y
	if r != -32768 {
		log.Fatalf("-32768 %s 0 = %d, want -32768", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-32768 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-32768 %s 255 = %d, want 0", "<<", r)
	}
	x = -32767
	y = 0
	r = x << y
	if r != -32767 {
		log.Fatalf("-32767 %s 0 = %d, want -32767", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-32767 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-32767 %s 255 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 255 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", "<<", r)
	}
	x = 32766
	y = 0
	r = x << y
	if r != 32766 {
		log.Fatalf("32766 %s 0 = %d, want 32766", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("32766 %s 1 = %d, want -4", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("32766 %s 255 = %d, want 0", "<<", r)
	}
	x = 32767
	y = 0
	r = x << y
	if r != 32767 {
		log.Fatalf("32767 %s 0 = %d, want 32767", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("32767 %s 1 = %d, want -2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("32767 %s 255 = %d, want 0", "<<", r)
	}
}
func testConstFoldint16uint8rsh() {
	var x, r int16
	var y uint8
	x = -32768
	y = 0
	r = x >> y
	if r != -32768 {
		log.Fatalf("-32768 %s 0 = %d, want -32768", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -16384 {
		log.Fatalf("-32768 %s 1 = %d, want -16384", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-32768 %s 255 = %d, want -1", ">>", r)
	}
	x = -32767
	y = 0
	r = x >> y
	if r != -32767 {
		log.Fatalf("-32767 %s 0 = %d, want -32767", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -16384 {
		log.Fatalf("-32767 %s 1 = %d, want -16384", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-32767 %s 255 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 255 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", ">>", r)
	}
	x = 32766
	y = 0
	r = x >> y
	if r != 32766 {
		log.Fatalf("32766 %s 0 = %d, want 32766", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 16383 {
		log.Fatalf("32766 %s 1 = %d, want 16383", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("32766 %s 255 = %d, want 0", ">>", r)
	}
	x = 32767
	y = 0
	r = x >> y
	if r != 32767 {
		log.Fatalf("32767 %s 0 = %d, want 32767", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 16383 {
		log.Fatalf("32767 %s 1 = %d, want 16383", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("32767 %s 255 = %d, want 0", ">>", r)
	}
}
func testConstFolduint8uint64lsh() {
	var x, r uint8
	var y uint64
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 255
	y = 0
	r = x << y
	if r != 255 {
		log.Fatalf("255 %s 0 = %d, want 255", "<<", r)
	}
	y = 1
	r = x << y
	if r != 254 {
		log.Fatalf("255 %s 1 = %d, want 254", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("255 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("255 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
}
func testConstFolduint8uint64rsh() {
	var x, r uint8
	var y uint64
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 255
	y = 0
	r = x >> y
	if r != 255 {
		log.Fatalf("255 %s 0 = %d, want 255", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 127 {
		log.Fatalf("255 %s 1 = %d, want 127", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("255 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("255 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
}
func testConstFolduint8uint32lsh() {
	var x, r uint8
	var y uint32
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 255
	y = 0
	r = x << y
	if r != 255 {
		log.Fatalf("255 %s 0 = %d, want 255", "<<", r)
	}
	y = 1
	r = x << y
	if r != 254 {
		log.Fatalf("255 %s 1 = %d, want 254", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("255 %s 4294967295 = %d, want 0", "<<", r)
	}
}
func testConstFolduint8uint32rsh() {
	var x, r uint8
	var y uint32
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 255
	y = 0
	r = x >> y
	if r != 255 {
		log.Fatalf("255 %s 0 = %d, want 255", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 127 {
		log.Fatalf("255 %s 1 = %d, want 127", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("255 %s 4294967295 = %d, want 0", ">>", r)
	}
}
func testConstFolduint8uint16lsh() {
	var x, r uint8
	var y uint16
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 255
	y = 0
	r = x << y
	if r != 255 {
		log.Fatalf("255 %s 0 = %d, want 255", "<<", r)
	}
	y = 1
	r = x << y
	if r != 254 {
		log.Fatalf("255 %s 1 = %d, want 254", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("255 %s 65535 = %d, want 0", "<<", r)
	}
}
func testConstFolduint8uint16rsh() {
	var x, r uint8
	var y uint16
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", ">>", r)
	}
	x = 255
	y = 0
	r = x >> y
	if r != 255 {
		log.Fatalf("255 %s 0 = %d, want 255", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 127 {
		log.Fatalf("255 %s 1 = %d, want 127", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("255 %s 65535 = %d, want 0", ">>", r)
	}
}
func testConstFolduint8uint8lsh() {
	var x, r uint8
	var y uint8
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", "<<", r)
	}
	x = 255
	y = 0
	r = x << y
	if r != 255 {
		log.Fatalf("255 %s 0 = %d, want 255", "<<", r)
	}
	y = 1
	r = x << y
	if r != 254 {
		log.Fatalf("255 %s 1 = %d, want 254", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("255 %s 255 = %d, want 0", "<<", r)
	}
}
func testConstFolduint8uint8rsh() {
	var x, r uint8
	var y uint8
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", ">>", r)
	}
	x = 255
	y = 0
	r = x >> y
	if r != 255 {
		log.Fatalf("255 %s 0 = %d, want 255", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 127 {
		log.Fatalf("255 %s 1 = %d, want 127", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("255 %s 255 = %d, want 0", ">>", r)
	}
}
func testConstFoldint8uint64lsh() {
	var x, r int8
	var y uint64
	x = -128
	y = 0
	r = x << y
	if r != -128 {
		log.Fatalf("-128 %s 0 = %d, want -128", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-128 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-128 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-128 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = -127
	y = 0
	r = x << y
	if r != -127 {
		log.Fatalf("-127 %s 0 = %d, want -127", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-127 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-127 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-127 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 126
	y = 0
	r = x << y
	if r != 126 {
		log.Fatalf("126 %s 0 = %d, want 126", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("126 %s 1 = %d, want -4", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("126 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("126 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
	x = 127
	y = 0
	r = x << y
	if r != 127 {
		log.Fatalf("127 %s 0 = %d, want 127", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("127 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967296
	r = x << y
	if r != 0 {
		log.Fatalf("127 %s 4294967296 = %d, want 0", "<<", r)
	}
	y = 18446744073709551615
	r = x << y
	if r != 0 {
		log.Fatalf("127 %s 18446744073709551615 = %d, want 0", "<<", r)
	}
}
func testConstFoldint8uint64rsh() {
	var x, r int8
	var y uint64
	x = -128
	y = 0
	r = x >> y
	if r != -128 {
		log.Fatalf("-128 %s 0 = %d, want -128", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -64 {
		log.Fatalf("-128 %s 1 = %d, want -64", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-128 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-128 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = -127
	y = 0
	r = x >> y
	if r != -127 {
		log.Fatalf("-127 %s 0 = %d, want -127", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -64 {
		log.Fatalf("-127 %s 1 = %d, want -64", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-127 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-127 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 4294967296 = %d, want -1", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 18446744073709551615 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 126
	y = 0
	r = x >> y
	if r != 126 {
		log.Fatalf("126 %s 0 = %d, want 126", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 63 {
		log.Fatalf("126 %s 1 = %d, want 63", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("126 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("126 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
	x = 127
	y = 0
	r = x >> y
	if r != 127 {
		log.Fatalf("127 %s 0 = %d, want 127", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 63 {
		log.Fatalf("127 %s 1 = %d, want 63", ">>", r)
	}
	y = 4294967296
	r = x >> y
	if r != 0 {
		log.Fatalf("127 %s 4294967296 = %d, want 0", ">>", r)
	}
	y = 18446744073709551615
	r = x >> y
	if r != 0 {
		log.Fatalf("127 %s 18446744073709551615 = %d, want 0", ">>", r)
	}
}
func testConstFoldint8uint32lsh() {
	var x, r int8
	var y uint32
	x = -128
	y = 0
	r = x << y
	if r != -128 {
		log.Fatalf("-128 %s 0 = %d, want -128", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-128 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-128 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = -127
	y = 0
	r = x << y
	if r != -127 {
		log.Fatalf("-127 %s 0 = %d, want -127", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-127 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-127 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 126
	y = 0
	r = x << y
	if r != 126 {
		log.Fatalf("126 %s 0 = %d, want 126", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("126 %s 1 = %d, want -4", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("126 %s 4294967295 = %d, want 0", "<<", r)
	}
	x = 127
	y = 0
	r = x << y
	if r != 127 {
		log.Fatalf("127 %s 0 = %d, want 127", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("127 %s 1 = %d, want -2", "<<", r)
	}
	y = 4294967295
	r = x << y
	if r != 0 {
		log.Fatalf("127 %s 4294967295 = %d, want 0", "<<", r)
	}
}
func testConstFoldint8uint32rsh() {
	var x, r int8
	var y uint32
	x = -128
	y = 0
	r = x >> y
	if r != -128 {
		log.Fatalf("-128 %s 0 = %d, want -128", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -64 {
		log.Fatalf("-128 %s 1 = %d, want -64", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-128 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = -127
	y = 0
	r = x >> y
	if r != -127 {
		log.Fatalf("-127 %s 0 = %d, want -127", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -64 {
		log.Fatalf("-127 %s 1 = %d, want -64", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-127 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 4294967295 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 126
	y = 0
	r = x >> y
	if r != 126 {
		log.Fatalf("126 %s 0 = %d, want 126", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 63 {
		log.Fatalf("126 %s 1 = %d, want 63", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("126 %s 4294967295 = %d, want 0", ">>", r)
	}
	x = 127
	y = 0
	r = x >> y
	if r != 127 {
		log.Fatalf("127 %s 0 = %d, want 127", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 63 {
		log.Fatalf("127 %s 1 = %d, want 63", ">>", r)
	}
	y = 4294967295
	r = x >> y
	if r != 0 {
		log.Fatalf("127 %s 4294967295 = %d, want 0", ">>", r)
	}
}
func testConstFoldint8uint16lsh() {
	var x, r int8
	var y uint16
	x = -128
	y = 0
	r = x << y
	if r != -128 {
		log.Fatalf("-128 %s 0 = %d, want -128", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-128 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-128 %s 65535 = %d, want 0", "<<", r)
	}
	x = -127
	y = 0
	r = x << y
	if r != -127 {
		log.Fatalf("-127 %s 0 = %d, want -127", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-127 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-127 %s 65535 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", "<<", r)
	}
	x = 126
	y = 0
	r = x << y
	if r != 126 {
		log.Fatalf("126 %s 0 = %d, want 126", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("126 %s 1 = %d, want -4", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("126 %s 65535 = %d, want 0", "<<", r)
	}
	x = 127
	y = 0
	r = x << y
	if r != 127 {
		log.Fatalf("127 %s 0 = %d, want 127", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("127 %s 1 = %d, want -2", "<<", r)
	}
	y = 65535
	r = x << y
	if r != 0 {
		log.Fatalf("127 %s 65535 = %d, want 0", "<<", r)
	}
}
func testConstFoldint8uint16rsh() {
	var x, r int8
	var y uint16
	x = -128
	y = 0
	r = x >> y
	if r != -128 {
		log.Fatalf("-128 %s 0 = %d, want -128", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -64 {
		log.Fatalf("-128 %s 1 = %d, want -64", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-128 %s 65535 = %d, want -1", ">>", r)
	}
	x = -127
	y = 0
	r = x >> y
	if r != -127 {
		log.Fatalf("-127 %s 0 = %d, want -127", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -64 {
		log.Fatalf("-127 %s 1 = %d, want -64", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-127 %s 65535 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 65535 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 65535 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 65535 = %d, want 0", ">>", r)
	}
	x = 126
	y = 0
	r = x >> y
	if r != 126 {
		log.Fatalf("126 %s 0 = %d, want 126", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 63 {
		log.Fatalf("126 %s 1 = %d, want 63", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("126 %s 65535 = %d, want 0", ">>", r)
	}
	x = 127
	y = 0
	r = x >> y
	if r != 127 {
		log.Fatalf("127 %s 0 = %d, want 127", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 63 {
		log.Fatalf("127 %s 1 = %d, want 63", ">>", r)
	}
	y = 65535
	r = x >> y
	if r != 0 {
		log.Fatalf("127 %s 65535 = %d, want 0", ">>", r)
	}
}
func testConstFoldint8uint8lsh() {
	var x, r int8
	var y uint8
	x = -128
	y = 0
	r = x << y
	if r != -128 {
		log.Fatalf("-128 %s 0 = %d, want -128", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("-128 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-128 %s 255 = %d, want 0", "<<", r)
	}
	x = -127
	y = 0
	r = x << y
	if r != -127 {
		log.Fatalf("-127 %s 0 = %d, want -127", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("-127 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-127 %s 255 = %d, want 0", "<<", r)
	}
	x = -1
	y = 0
	r = x << y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("-1 %s 1 = %d, want -2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("-1 %s 255 = %d, want 0", "<<", r)
	}
	x = 0
	y = 0
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", "<<", r)
	}
	y = 1
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", "<<", r)
	}
	x = 1
	y = 0
	r = x << y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", "<<", r)
	}
	y = 1
	r = x << y
	if r != 2 {
		log.Fatalf("1 %s 1 = %d, want 2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", "<<", r)
	}
	x = 126
	y = 0
	r = x << y
	if r != 126 {
		log.Fatalf("126 %s 0 = %d, want 126", "<<", r)
	}
	y = 1
	r = x << y
	if r != -4 {
		log.Fatalf("126 %s 1 = %d, want -4", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("126 %s 255 = %d, want 0", "<<", r)
	}
	x = 127
	y = 0
	r = x << y
	if r != 127 {
		log.Fatalf("127 %s 0 = %d, want 127", "<<", r)
	}
	y = 1
	r = x << y
	if r != -2 {
		log.Fatalf("127 %s 1 = %d, want -2", "<<", r)
	}
	y = 255
	r = x << y
	if r != 0 {
		log.Fatalf("127 %s 255 = %d, want 0", "<<", r)
	}
}
func testConstFoldint8uint8rsh() {
	var x, r int8
	var y uint8
	x = -128
	y = 0
	r = x >> y
	if r != -128 {
		log.Fatalf("-128 %s 0 = %d, want -128", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -64 {
		log.Fatalf("-128 %s 1 = %d, want -64", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-128 %s 255 = %d, want -1", ">>", r)
	}
	x = -127
	y = 0
	r = x >> y
	if r != -127 {
		log.Fatalf("-127 %s 0 = %d, want -127", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -64 {
		log.Fatalf("-127 %s 1 = %d, want -64", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-127 %s 255 = %d, want -1", ">>", r)
	}
	x = -1
	y = 0
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 0 = %d, want -1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 1 = %d, want -1", ">>", r)
	}
	y = 255
	r = x >> y
	if r != -1 {
		log.Fatalf("-1 %s 255 = %d, want -1", ">>", r)
	}
	x = 0
	y = 0
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 0 = %d, want 0", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("0 %s 255 = %d, want 0", ">>", r)
	}
	x = 1
	y = 0
	r = x >> y
	if r != 1 {
		log.Fatalf("1 %s 0 = %d, want 1", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 1 = %d, want 0", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("1 %s 255 = %d, want 0", ">>", r)
	}
	x = 126
	y = 0
	r = x >> y
	if r != 126 {
		log.Fatalf("126 %s 0 = %d, want 126", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 63 {
		log.Fatalf("126 %s 1 = %d, want 63", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("126 %s 255 = %d, want 0", ">>", r)
	}
	x = 127
	y = 0
	r = x >> y
	if r != 127 {
		log.Fatalf("127 %s 0 = %d, want 127", ">>", r)
	}
	y = 1
	r = x >> y
	if r != 63 {
		log.Fatalf("127 %s 1 = %d, want 63", ">>", r)
	}
	y = 255
	r = x >> y
	if r != 0 {
		log.Fatalf("127 %s 255 = %d, want 0", ">>", r)
	}
}
func testConstFoldCompareuint64() {
	{
		var x uint64 = 0
		var y uint64 = 0
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint64 = 0
		var y uint64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint64 = 0
		var y uint64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint64 = 0
		var y uint64 = 18446744073709551615
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint64 = 1
		var y uint64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint64 = 1
		var y uint64 = 1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint64 = 1
		var y uint64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint64 = 1
		var y uint64 = 18446744073709551615
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint64 = 4294967296
		var y uint64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint64 = 4294967296
		var y uint64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint64 = 4294967296
		var y uint64 = 4294967296
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint64 = 4294967296
		var y uint64 = 18446744073709551615
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint64 = 18446744073709551615
		var y uint64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint64 = 18446744073709551615
		var y uint64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint64 = 18446744073709551615
		var y uint64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint64 = 18446744073709551615
		var y uint64 = 18446744073709551615
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
}
func testConstFoldCompareint64() {
	{
		var x int64 = -9223372036854775808
		var y int64 = -9223372036854775808
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = -9223372036854775808
		var y int64 = -9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775808
		var y int64 = -4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775808
		var y int64 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775808
		var y int64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775808
		var y int64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775808
		var y int64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775808
		var y int64 = 9223372036854775806
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775808
		var y int64 = 9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775807
		var y int64 = -9223372036854775808
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = -9223372036854775807
		var y int64 = -9223372036854775807
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = -9223372036854775807
		var y int64 = -4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775807
		var y int64 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775807
		var y int64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775807
		var y int64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775807
		var y int64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775807
		var y int64 = 9223372036854775806
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -9223372036854775807
		var y int64 = 9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -4294967296
		var y int64 = -9223372036854775808
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = -4294967296
		var y int64 = -9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = -4294967296
		var y int64 = -4294967296
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = -4294967296
		var y int64 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -4294967296
		var y int64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -4294967296
		var y int64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -4294967296
		var y int64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -4294967296
		var y int64 = 9223372036854775806
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -4294967296
		var y int64 = 9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -1
		var y int64 = -9223372036854775808
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = -1
		var y int64 = -9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = -1
		var y int64 = -4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = -1
		var y int64 = -1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = -1
		var y int64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -1
		var y int64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -1
		var y int64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -1
		var y int64 = 9223372036854775806
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = -1
		var y int64 = 9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 0
		var y int64 = -9223372036854775808
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 0
		var y int64 = -9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 0
		var y int64 = -4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 0
		var y int64 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 0
		var y int64 = 0
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 0
		var y int64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 0
		var y int64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 0
		var y int64 = 9223372036854775806
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 0
		var y int64 = 9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 1
		var y int64 = -9223372036854775808
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 1
		var y int64 = -9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 1
		var y int64 = -4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 1
		var y int64 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 1
		var y int64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 1
		var y int64 = 1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 1
		var y int64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 1
		var y int64 = 9223372036854775806
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 1
		var y int64 = 9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 4294967296
		var y int64 = -9223372036854775808
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 4294967296
		var y int64 = -9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 4294967296
		var y int64 = -4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 4294967296
		var y int64 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 4294967296
		var y int64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 4294967296
		var y int64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 4294967296
		var y int64 = 4294967296
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 4294967296
		var y int64 = 9223372036854775806
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 4294967296
		var y int64 = 9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 9223372036854775806
		var y int64 = -9223372036854775808
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775806
		var y int64 = -9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775806
		var y int64 = -4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775806
		var y int64 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775806
		var y int64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775806
		var y int64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775806
		var y int64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775806
		var y int64 = 9223372036854775806
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775806
		var y int64 = 9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int64 = 9223372036854775807
		var y int64 = -9223372036854775808
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775807
		var y int64 = -9223372036854775807
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775807
		var y int64 = -4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775807
		var y int64 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775807
		var y int64 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775807
		var y int64 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775807
		var y int64 = 4294967296
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775807
		var y int64 = 9223372036854775806
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int64 = 9223372036854775807
		var y int64 = 9223372036854775807
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
}
func testConstFoldCompareuint32() {
	{
		var x uint32 = 0
		var y uint32 = 0
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint32 = 0
		var y uint32 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint32 = 0
		var y uint32 = 4294967295
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint32 = 1
		var y uint32 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint32 = 1
		var y uint32 = 1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint32 = 1
		var y uint32 = 4294967295
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint32 = 4294967295
		var y uint32 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint32 = 4294967295
		var y uint32 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint32 = 4294967295
		var y uint32 = 4294967295
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
}
func testConstFoldCompareint32() {
	{
		var x int32 = -2147483648
		var y int32 = -2147483648
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = -2147483648
		var y int32 = -2147483647
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -2147483648
		var y int32 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -2147483648
		var y int32 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -2147483648
		var y int32 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -2147483648
		var y int32 = 2147483647
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -2147483647
		var y int32 = -2147483648
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = -2147483647
		var y int32 = -2147483647
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = -2147483647
		var y int32 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -2147483647
		var y int32 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -2147483647
		var y int32 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -2147483647
		var y int32 = 2147483647
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -1
		var y int32 = -2147483648
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = -1
		var y int32 = -2147483647
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = -1
		var y int32 = -1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = -1
		var y int32 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -1
		var y int32 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = -1
		var y int32 = 2147483647
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = 0
		var y int32 = -2147483648
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 0
		var y int32 = -2147483647
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 0
		var y int32 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 0
		var y int32 = 0
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 0
		var y int32 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = 0
		var y int32 = 2147483647
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = 1
		var y int32 = -2147483648
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 1
		var y int32 = -2147483647
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 1
		var y int32 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 1
		var y int32 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 1
		var y int32 = 1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 1
		var y int32 = 2147483647
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int32 = 2147483647
		var y int32 = -2147483648
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 2147483647
		var y int32 = -2147483647
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 2147483647
		var y int32 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 2147483647
		var y int32 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 2147483647
		var y int32 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int32 = 2147483647
		var y int32 = 2147483647
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
}
func testConstFoldCompareuint16() {
	{
		var x uint16 = 0
		var y uint16 = 0
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint16 = 0
		var y uint16 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint16 = 0
		var y uint16 = 65535
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint16 = 1
		var y uint16 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint16 = 1
		var y uint16 = 1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint16 = 1
		var y uint16 = 65535
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint16 = 65535
		var y uint16 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint16 = 65535
		var y uint16 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint16 = 65535
		var y uint16 = 65535
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
}
func testConstFoldCompareint16() {
	{
		var x int16 = -32768
		var y int16 = -32768
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = -32768
		var y int16 = -32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -32768
		var y int16 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -32768
		var y int16 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -32768
		var y int16 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -32768
		var y int16 = 32766
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -32768
		var y int16 = 32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -32767
		var y int16 = -32768
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = -32767
		var y int16 = -32767
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = -32767
		var y int16 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -32767
		var y int16 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -32767
		var y int16 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -32767
		var y int16 = 32766
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -32767
		var y int16 = 32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -1
		var y int16 = -32768
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = -1
		var y int16 = -32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = -1
		var y int16 = -1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = -1
		var y int16 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -1
		var y int16 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -1
		var y int16 = 32766
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = -1
		var y int16 = 32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = 0
		var y int16 = -32768
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 0
		var y int16 = -32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 0
		var y int16 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 0
		var y int16 = 0
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 0
		var y int16 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = 0
		var y int16 = 32766
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = 0
		var y int16 = 32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = 1
		var y int16 = -32768
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 1
		var y int16 = -32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 1
		var y int16 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 1
		var y int16 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 1
		var y int16 = 1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 1
		var y int16 = 32766
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = 1
		var y int16 = 32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = 32766
		var y int16 = -32768
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32766
		var y int16 = -32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32766
		var y int16 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32766
		var y int16 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32766
		var y int16 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32766
		var y int16 = 32766
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32766
		var y int16 = 32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int16 = 32767
		var y int16 = -32768
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32767
		var y int16 = -32767
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32767
		var y int16 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32767
		var y int16 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32767
		var y int16 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32767
		var y int16 = 32766
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int16 = 32767
		var y int16 = 32767
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
}
func testConstFoldCompareuint8() {
	{
		var x uint8 = 0
		var y uint8 = 0
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint8 = 0
		var y uint8 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint8 = 0
		var y uint8 = 255
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint8 = 1
		var y uint8 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint8 = 1
		var y uint8 = 1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint8 = 1
		var y uint8 = 255
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x uint8 = 255
		var y uint8 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint8 = 255
		var y uint8 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x uint8 = 255
		var y uint8 = 255
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
}
func testConstFoldCompareint8() {
	{
		var x int8 = -128
		var y int8 = -128
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = -128
		var y int8 = -127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -128
		var y int8 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -128
		var y int8 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -128
		var y int8 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -128
		var y int8 = 126
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -128
		var y int8 = 127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -127
		var y int8 = -128
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = -127
		var y int8 = -127
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = -127
		var y int8 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -127
		var y int8 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -127
		var y int8 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -127
		var y int8 = 126
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -127
		var y int8 = 127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -1
		var y int8 = -128
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = -1
		var y int8 = -127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = -1
		var y int8 = -1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = -1
		var y int8 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -1
		var y int8 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -1
		var y int8 = 126
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = -1
		var y int8 = 127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = 0
		var y int8 = -128
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 0
		var y int8 = -127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 0
		var y int8 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 0
		var y int8 = 0
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 0
		var y int8 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = 0
		var y int8 = 126
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = 0
		var y int8 = 127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = 1
		var y int8 = -128
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 1
		var y int8 = -127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 1
		var y int8 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 1
		var y int8 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 1
		var y int8 = 1
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 1
		var y int8 = 126
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = 1
		var y int8 = 127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = 126
		var y int8 = -128
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 126
		var y int8 = -127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 126
		var y int8 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 126
		var y int8 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 126
		var y int8 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 126
		var y int8 = 126
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 126
		var y int8 = 127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if !(x < y) {
			log.Fatalf("!(%d < %d)", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if x >= y {
			log.Fatalf("%d >= %d", x, y)
		}
	}
	{
		var x int8 = 127
		var y int8 = -128
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 127
		var y int8 = -127
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 127
		var y int8 = -1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 127
		var y int8 = 0
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 127
		var y int8 = 1
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 127
		var y int8 = 126
		if x == y {
			log.Fatalf("%d == %d", x, y)
		}
		if !(x != y) {
			log.Fatalf("!(%d != %d)", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if !(x > y) {
			log.Fatalf("!(%d > %d)", x, y)
		}
		if x <= y {
			log.Fatalf("%d <= %d", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
	{
		var x int8 = 127
		var y int8 = 127
		if !(x == y) {
			log.Fatalf("!(%d == %d)", x, y)
		}
		if x != y {
			log.Fatalf("%d != %d", x, y)
		}
		if x < y {
			log.Fatalf("%d < %d", x, y)
		}
		if x > y {
			log.Fatalf("%d > %d", x, y)
		}
		if !(x <= y) {
			log.Fatalf("!(%d <= %d)", x, y)
		}
		if !(x >= y) {
			log.Fatalf("!(%d >= %d)", x, y)
		}
	}
}

func main() {
	testConstFolduint64add()
	testConstFolduint64sub()
	testConstFolduint64div()
	testConstFolduint64mul()
	testConstFolduint64mod()
	testConstFoldint64add()
	testConstFoldint64sub()
	testConstFoldint64div()
	testConstFoldint64mul()
	testConstFoldint64mod()
	testConstFolduint32add()
	testConstFolduint32sub()
	testConstFolduint32div()
	testConstFolduint32mul()
	testConstFolduint32mod()
	testConstFoldint32add()
	testConstFoldint32sub()
	testConstFoldint32div()
	testConstFoldint32mul()
	testConstFoldint32mod()
	testConstFolduint16add()
	testConstFolduint16sub()
	testConstFolduint16div()
	testConstFolduint16mul()
	testConstFolduint16mod()
	testConstFoldint16add()
	testConstFoldint16sub()
	testConstFoldint16div()
	testConstFoldint16mul()
	testConstFoldint16mod()
	testConstFolduint8add()
	testConstFolduint8sub()
	testConstFolduint8div()
	testConstFolduint8mul()
	testConstFolduint8mod()
	testConstFoldint8add()
	testConstFoldint8sub()
	testConstFoldint8div()
	testConstFoldint8mul()
	testConstFoldint8mod()
	testConstFolduint64uint64lsh()
	testConstFolduint64uint64rsh()
	testConstFolduint64uint32lsh()
	testConstFolduint64uint32rsh()
	testConstFolduint64uint16lsh()
	testConstFolduint64uint16rsh()
	testConstFolduint64uint8lsh()
	testConstFolduint64uint8rsh()
	testConstFoldint64uint64lsh()
	testConstFoldint64uint64rsh()
	testConstFoldint64uint32lsh()
	testConstFoldint64uint32rsh()
	testConstFoldint64uint16lsh()
	testConstFoldint64uint16rsh()
	testConstFoldint64uint8lsh()
	testConstFoldint64uint8rsh()
	testConstFolduint32uint64lsh()
	testConstFolduint32uint64rsh()
	testConstFolduint32uint32lsh()
	testConstFolduint32uint32rsh()
	testConstFolduint32uint16lsh()
	testConstFolduint32uint16rsh()
	testConstFolduint32uint8lsh()
	testConstFolduint32uint8rsh()
	testConstFoldint32uint64lsh()
	testConstFoldint32uint64rsh()
	testConstFoldint32uint32lsh()
	testConstFoldint32uint32rsh()
	testConstFoldint32uint16lsh()
	testConstFoldint32uint16rsh()
	testConstFoldint32uint8lsh()
	testConstFoldint32uint8rsh()
	testConstFolduint16uint64lsh()
	testConstFolduint16uint64rsh()
	testConstFolduint16uint32lsh()
	testConstFolduint16uint32rsh()
	testConstFolduint16uint16lsh()
	testConstFolduint16uint16rsh()
	testConstFolduint16uint8lsh()
	testConstFolduint16uint8rsh()
	testConstFoldint16uint64lsh()
	testConstFoldint16uint64rsh()
	testConstFoldint16uint32lsh()
	testConstFoldint16uint32rsh()
	testConstFoldint16uint16lsh()
	testConstFoldint16uint16rsh()
	testConstFoldint16uint8lsh()
	testConstFoldint16uint8rsh()
	testConstFolduint8uint64lsh()
	testConstFolduint8uint64rsh()
	testConstFolduint8uint32lsh()
	testConstFolduint8uint32rsh()
	testConstFolduint8uint16lsh()
	testConstFolduint8uint16rsh()
	testConstFolduint8uint8lsh()
	testConstFolduint8uint8rsh()
	testConstFoldint8uint64lsh()
	testConstFoldint8uint64rsh()
	testConstFoldint8uint32lsh()
	testConstFoldint8uint32rsh()
	testConstFoldint8uint16lsh()
	testConstFoldint8uint16rsh()
	testConstFoldint8uint8lsh()
	testConstFoldint8uint8rsh()
	testConstFoldCompareuint64()
	testConstFoldCompareint64()
	testConstFoldCompareuint32()
	testConstFoldCompareint32()
	testConstFoldCompareuint16()
	testConstFoldCompareint16()
	testConstFoldCompareuint8()
	testConstFoldCompareint8()
}
