// Go version: go1.11.5

package syntax

import original "regexp/syntax"
import "scrigo"
import "reflect"

var Package = scrigo.Package{
	"ClassNL": scrigo.Constant(original.ClassNL, nil),
	"Compile": original.Compile,
	"DotNL": scrigo.Constant(original.DotNL, nil),
	"EmptyBeginLine": scrigo.Constant(original.EmptyBeginLine, nil),
	"EmptyBeginText": scrigo.Constant(original.EmptyBeginText, nil),
	"EmptyEndLine": scrigo.Constant(original.EmptyEndLine, nil),
	"EmptyEndText": scrigo.Constant(original.EmptyEndText, nil),
	"EmptyNoWordBoundary": scrigo.Constant(original.EmptyNoWordBoundary, nil),
	"EmptyOp": reflect.TypeOf(original.EmptyOp(uint8(0))),
	"EmptyOpContext": original.EmptyOpContext,
	"EmptyWordBoundary": scrigo.Constant(original.EmptyWordBoundary, nil),
	"ErrInternalError": scrigo.Constant(original.ErrInternalError, nil),
	"ErrInvalidCharClass": scrigo.Constant(original.ErrInvalidCharClass, nil),
	"ErrInvalidCharRange": scrigo.Constant(original.ErrInvalidCharRange, nil),
	"ErrInvalidEscape": scrigo.Constant(original.ErrInvalidEscape, nil),
	"ErrInvalidNamedCapture": scrigo.Constant(original.ErrInvalidNamedCapture, nil),
	"ErrInvalidPerlOp": scrigo.Constant(original.ErrInvalidPerlOp, nil),
	"ErrInvalidRepeatOp": scrigo.Constant(original.ErrInvalidRepeatOp, nil),
	"ErrInvalidRepeatSize": scrigo.Constant(original.ErrInvalidRepeatSize, nil),
	"ErrInvalidUTF8": scrigo.Constant(original.ErrInvalidUTF8, nil),
	"ErrMissingBracket": scrigo.Constant(original.ErrMissingBracket, nil),
	"ErrMissingParen": scrigo.Constant(original.ErrMissingParen, nil),
	"ErrMissingRepeatArgument": scrigo.Constant(original.ErrMissingRepeatArgument, nil),
	"ErrTrailingBackslash": scrigo.Constant(original.ErrTrailingBackslash, nil),
	"ErrUnexpectedParen": scrigo.Constant(original.ErrUnexpectedParen, nil),
	"Error": reflect.TypeOf(original.Error{}),
	"ErrorCode": reflect.TypeOf(""),
	"Flags": reflect.TypeOf(original.Flags(uint16(0))),
	"FoldCase": scrigo.Constant(original.FoldCase, nil),
	"Inst": reflect.TypeOf(original.Inst{}),
	"InstAlt": scrigo.Constant(original.InstAlt, nil),
	"InstAltMatch": scrigo.Constant(original.InstAltMatch, nil),
	"InstCapture": scrigo.Constant(original.InstCapture, nil),
	"InstEmptyWidth": scrigo.Constant(original.InstEmptyWidth, nil),
	"InstFail": scrigo.Constant(original.InstFail, nil),
	"InstMatch": scrigo.Constant(original.InstMatch, nil),
	"InstNop": scrigo.Constant(original.InstNop, nil),
	"InstOp": reflect.TypeOf(original.InstOp(uint8(0))),
	"InstRune": scrigo.Constant(original.InstRune, nil),
	"InstRune1": scrigo.Constant(original.InstRune1, nil),
	"InstRuneAny": scrigo.Constant(original.InstRuneAny, nil),
	"InstRuneAnyNotNL": scrigo.Constant(original.InstRuneAnyNotNL, nil),
	"IsWordChar": original.IsWordChar,
	"Literal": scrigo.Constant(original.Literal, nil),
	"MatchNL": scrigo.Constant(original.MatchNL, nil),
	"NonGreedy": scrigo.Constant(original.NonGreedy, nil),
	"OneLine": scrigo.Constant(original.OneLine, nil),
	"Op": reflect.TypeOf(original.Op(uint8(0))),
	"OpAlternate": scrigo.Constant(original.OpAlternate, nil),
	"OpAnyChar": scrigo.Constant(original.OpAnyChar, nil),
	"OpAnyCharNotNL": scrigo.Constant(original.OpAnyCharNotNL, nil),
	"OpBeginLine": scrigo.Constant(original.OpBeginLine, nil),
	"OpBeginText": scrigo.Constant(original.OpBeginText, nil),
	"OpCapture": scrigo.Constant(original.OpCapture, nil),
	"OpCharClass": scrigo.Constant(original.OpCharClass, nil),
	"OpConcat": scrigo.Constant(original.OpConcat, nil),
	"OpEmptyMatch": scrigo.Constant(original.OpEmptyMatch, nil),
	"OpEndLine": scrigo.Constant(original.OpEndLine, nil),
	"OpEndText": scrigo.Constant(original.OpEndText, nil),
	"OpLiteral": scrigo.Constant(original.OpLiteral, nil),
	"OpNoMatch": scrigo.Constant(original.OpNoMatch, nil),
	"OpNoWordBoundary": scrigo.Constant(original.OpNoWordBoundary, nil),
	"OpPlus": scrigo.Constant(original.OpPlus, nil),
	"OpQuest": scrigo.Constant(original.OpQuest, nil),
	"OpRepeat": scrigo.Constant(original.OpRepeat, nil),
	"OpStar": scrigo.Constant(original.OpStar, nil),
	"OpWordBoundary": scrigo.Constant(original.OpWordBoundary, nil),
	"POSIX": scrigo.Constant(original.POSIX, nil),
	"Parse": original.Parse,
	"Perl": scrigo.Constant(original.Perl, nil),
	"PerlX": scrigo.Constant(original.PerlX, nil),
	"Prog": reflect.TypeOf(original.Prog{}),
	"Regexp": reflect.TypeOf(original.Regexp{}),
	"Simple": scrigo.Constant(original.Simple, nil),
	"UnicodeGroups": scrigo.Constant(original.UnicodeGroups, nil),
	"WasDollar": scrigo.Constant(original.WasDollar, nil),
}
