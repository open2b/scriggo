// Go version: go1.11.5

package x509

import original "crypto/x509"
import "scrigo"
import "reflect"

var Package = scrigo.Package{
	"CANotAuthorizedForExtKeyUsage": scrigo.Constant(original.CANotAuthorizedForExtKeyUsage, nil),
	"CANotAuthorizedForThisName": scrigo.Constant(original.CANotAuthorizedForThisName, nil),
	"CertPool": reflect.TypeOf(original.CertPool{}),
	"Certificate": reflect.TypeOf(original.Certificate{}),
	"CertificateInvalidError": reflect.TypeOf(original.CertificateInvalidError{}),
	"CertificateRequest": reflect.TypeOf(original.CertificateRequest{}),
	"ConstraintViolationError": reflect.TypeOf(original.ConstraintViolationError{}),
	"CreateCertificate": original.CreateCertificate,
	"CreateCertificateRequest": original.CreateCertificateRequest,
	"DSA": scrigo.Constant(original.DSA, nil),
	"DSAWithSHA1": scrigo.Constant(original.DSAWithSHA1, nil),
	"DSAWithSHA256": scrigo.Constant(original.DSAWithSHA256, nil),
	"DecryptPEMBlock": original.DecryptPEMBlock,
	"ECDSA": scrigo.Constant(original.ECDSA, nil),
	"ECDSAWithSHA1": scrigo.Constant(original.ECDSAWithSHA1, nil),
	"ECDSAWithSHA256": scrigo.Constant(original.ECDSAWithSHA256, nil),
	"ECDSAWithSHA384": scrigo.Constant(original.ECDSAWithSHA384, nil),
	"ECDSAWithSHA512": scrigo.Constant(original.ECDSAWithSHA512, nil),
	"EncryptPEMBlock": original.EncryptPEMBlock,
	"ErrUnsupportedAlgorithm": &original.ErrUnsupportedAlgorithm,
	"Expired": scrigo.Constant(original.Expired, nil),
	"ExtKeyUsage": reflect.TypeOf(original.ExtKeyUsage(int(0))),
	"ExtKeyUsageAny": scrigo.Constant(original.ExtKeyUsageAny, nil),
	"ExtKeyUsageClientAuth": scrigo.Constant(original.ExtKeyUsageClientAuth, nil),
	"ExtKeyUsageCodeSigning": scrigo.Constant(original.ExtKeyUsageCodeSigning, nil),
	"ExtKeyUsageEmailProtection": scrigo.Constant(original.ExtKeyUsageEmailProtection, nil),
	"ExtKeyUsageIPSECEndSystem": scrigo.Constant(original.ExtKeyUsageIPSECEndSystem, nil),
	"ExtKeyUsageIPSECTunnel": scrigo.Constant(original.ExtKeyUsageIPSECTunnel, nil),
	"ExtKeyUsageIPSECUser": scrigo.Constant(original.ExtKeyUsageIPSECUser, nil),
	"ExtKeyUsageMicrosoftCommercialCodeSigning": scrigo.Constant(original.ExtKeyUsageMicrosoftCommercialCodeSigning, nil),
	"ExtKeyUsageMicrosoftKernelCodeSigning": scrigo.Constant(original.ExtKeyUsageMicrosoftKernelCodeSigning, nil),
	"ExtKeyUsageMicrosoftServerGatedCrypto": scrigo.Constant(original.ExtKeyUsageMicrosoftServerGatedCrypto, nil),
	"ExtKeyUsageNetscapeServerGatedCrypto": scrigo.Constant(original.ExtKeyUsageNetscapeServerGatedCrypto, nil),
	"ExtKeyUsageOCSPSigning": scrigo.Constant(original.ExtKeyUsageOCSPSigning, nil),
	"ExtKeyUsageServerAuth": scrigo.Constant(original.ExtKeyUsageServerAuth, nil),
	"ExtKeyUsageTimeStamping": scrigo.Constant(original.ExtKeyUsageTimeStamping, nil),
	"HostnameError": reflect.TypeOf(original.HostnameError{}),
	"IncompatibleUsage": scrigo.Constant(original.IncompatibleUsage, nil),
	"IncorrectPasswordError": &original.IncorrectPasswordError,
	"InsecureAlgorithmError": reflect.TypeOf(original.InsecureAlgorithmError(int(0))),
	"InvalidReason": reflect.TypeOf(original.InvalidReason(int(0))),
	"IsEncryptedPEMBlock": original.IsEncryptedPEMBlock,
	"KeyUsage": reflect.TypeOf(original.KeyUsage(int(0))),
	"KeyUsageCRLSign": scrigo.Constant(original.KeyUsageCRLSign, nil),
	"KeyUsageCertSign": scrigo.Constant(original.KeyUsageCertSign, nil),
	"KeyUsageContentCommitment": scrigo.Constant(original.KeyUsageContentCommitment, nil),
	"KeyUsageDataEncipherment": scrigo.Constant(original.KeyUsageDataEncipherment, nil),
	"KeyUsageDecipherOnly": scrigo.Constant(original.KeyUsageDecipherOnly, nil),
	"KeyUsageDigitalSignature": scrigo.Constant(original.KeyUsageDigitalSignature, nil),
	"KeyUsageEncipherOnly": scrigo.Constant(original.KeyUsageEncipherOnly, nil),
	"KeyUsageKeyAgreement": scrigo.Constant(original.KeyUsageKeyAgreement, nil),
	"KeyUsageKeyEncipherment": scrigo.Constant(original.KeyUsageKeyEncipherment, nil),
	"MD2WithRSA": scrigo.Constant(original.MD2WithRSA, nil),
	"MD5WithRSA": scrigo.Constant(original.MD5WithRSA, nil),
	"MarshalECPrivateKey": original.MarshalECPrivateKey,
	"MarshalPKCS1PrivateKey": original.MarshalPKCS1PrivateKey,
	"MarshalPKCS1PublicKey": original.MarshalPKCS1PublicKey,
	"MarshalPKCS8PrivateKey": original.MarshalPKCS8PrivateKey,
	"MarshalPKIXPublicKey": original.MarshalPKIXPublicKey,
	"NameConstraintsWithoutSANs": scrigo.Constant(original.NameConstraintsWithoutSANs, nil),
	"NameMismatch": scrigo.Constant(original.NameMismatch, nil),
	"NewCertPool": original.NewCertPool,
	"NotAuthorizedToSign": scrigo.Constant(original.NotAuthorizedToSign, nil),
	"PEMCipher": reflect.TypeOf(original.PEMCipher(int(0))),
	"PEMCipher3DES": scrigo.Constant(original.PEMCipher3DES, nil),
	"PEMCipherAES128": scrigo.Constant(original.PEMCipherAES128, nil),
	"PEMCipherAES192": scrigo.Constant(original.PEMCipherAES192, nil),
	"PEMCipherAES256": scrigo.Constant(original.PEMCipherAES256, nil),
	"PEMCipherDES": scrigo.Constant(original.PEMCipherDES, nil),
	"ParseCRL": original.ParseCRL,
	"ParseCertificate": original.ParseCertificate,
	"ParseCertificateRequest": original.ParseCertificateRequest,
	"ParseCertificates": original.ParseCertificates,
	"ParseDERCRL": original.ParseDERCRL,
	"ParseECPrivateKey": original.ParseECPrivateKey,
	"ParsePKCS1PrivateKey": original.ParsePKCS1PrivateKey,
	"ParsePKCS1PublicKey": original.ParsePKCS1PublicKey,
	"ParsePKCS8PrivateKey": original.ParsePKCS8PrivateKey,
	"ParsePKIXPublicKey": original.ParsePKIXPublicKey,
	"PublicKeyAlgorithm": reflect.TypeOf(original.PublicKeyAlgorithm(int(0))),
	"RSA": scrigo.Constant(original.RSA, nil),
	"SHA1WithRSA": scrigo.Constant(original.SHA1WithRSA, nil),
	"SHA256WithRSA": scrigo.Constant(original.SHA256WithRSA, nil),
	"SHA256WithRSAPSS": scrigo.Constant(original.SHA256WithRSAPSS, nil),
	"SHA384WithRSA": scrigo.Constant(original.SHA384WithRSA, nil),
	"SHA384WithRSAPSS": scrigo.Constant(original.SHA384WithRSAPSS, nil),
	"SHA512WithRSA": scrigo.Constant(original.SHA512WithRSA, nil),
	"SHA512WithRSAPSS": scrigo.Constant(original.SHA512WithRSAPSS, nil),
	"SignatureAlgorithm": reflect.TypeOf(original.SignatureAlgorithm(int(0))),
	"SystemCertPool": original.SystemCertPool,
	"SystemRootsError": reflect.TypeOf(original.SystemRootsError{}),
	"TooManyConstraints": scrigo.Constant(original.TooManyConstraints, nil),
	"TooManyIntermediates": scrigo.Constant(original.TooManyIntermediates, nil),
	"UnconstrainedName": scrigo.Constant(original.UnconstrainedName, nil),
	"UnhandledCriticalExtension": reflect.TypeOf(original.UnhandledCriticalExtension{}),
	"UnknownAuthorityError": reflect.TypeOf(original.UnknownAuthorityError{}),
	"UnknownPublicKeyAlgorithm": scrigo.Constant(original.UnknownPublicKeyAlgorithm, nil),
	"UnknownSignatureAlgorithm": scrigo.Constant(original.UnknownSignatureAlgorithm, nil),
	"VerifyOptions": reflect.TypeOf(original.VerifyOptions{}),
}
